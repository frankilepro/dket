# ANALYTICS
#
# AVG. PER-FORMULA ACCURACY: 0.07843
# AVG. EDIT DISTANCE: 6.35294
# AVG. PER-TOKEN ACCURACY: 0.44884
#
# ED	#	%	% INC
# 0	4	7.84	7.84
# 1	4	7.84	15.69
# 2	3	5.88	21.57
# 3	4	7.84	29.41
# 4	6	11.76	41.18
# 5	7	13.73	54.90
# 6	6	11.76	66.67
# 7	4	7.84	74.51
# 8	3	5.88	80.39
# 9	1	1.96	82.35
# 12	1	1.96	84.31
# 13	3	5.88	90.20
# 14	2	3.92	94.12
# 15	1	1.96	96.08
# 16	1	1.96	98.04
# 36	1	1.96	100.00



{
  "_ID": 1,
  "example": {
    "sentence": "a direct ossification is a ossification that do not require the replacement of pre-existing tissue . <EOS>",
    "target": "direct ossification := ossification ^ ! E require . ( replacement of pre-existing tissue ) <EOS>",
    "prediction": "direct ossification := ossification ^ ! E require . ( replacement of pre-existing tissue ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5240, 664, 296, 1532, 664, 1465, 4823, 2015, 4742, 1496, 4747, 2995, 3139, 3846, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 15, 13, 28, 16, 1, 30, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 15, 13, 28, 16, 1, 30, 31, 32, 33, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 16,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 3,
  "example": {
    "sentence": "a solid compound organ is a compound organ that do not contain macroscopic anatomical space . <EOS>",
    "target": "solid compound organ := compound organ ^ ! E contain . ( macroscopic anatomical space ) <EOS>",
    "prediction": "solid compound organ := compound organ ^ ! E contain . ( macroscopic anatomical space ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 360, 816, 2521, 296, 1532, 816, 2521, 1465, 4823, 2015, 3577, 661, 2927, 1053, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 15, 13, 30, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 15, 13, 30, 16, 1, 31, 32, 33, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 17,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 17,
  "example": {
    "sentence": "lion are animal that eat only herbivore . <EOS>",
    "target": "lion := animal ^ A eat . ( herbivore ) <EOS>",
    "prediction": "lion := animal ^ A eat . ( herbivore ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5233, 1465, 2867, 3546, 4058, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 51,
  "example": {
    "sentence": "a feature is a abstraction of real world phenomenon . <EOS>",
    "target": "feature := abstraction of real world phenomenon <EOS>",
    "prediction": "feature := abstraction of real world phenomenon <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 110, 296, 1532, 26, 2995, 3411, 2696, 5177, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 27, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 27, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 8,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 5,
  "example": {
    "sentence": "vehicle are non-living means of transportation . <EOS>",
    "target": "vehicle := non-living means of transportation <EOS>",
    "prediction": "vehicle := non-living means of transportation ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[116, 3728, 4032, 1217, 2995, 1839, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 7,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []"
    ]
  }
}


{
  "_ID": 14,
  "example": {
    "sentence": "a vector is a organism that carry or transmit a pathogen . <EOS>",
    "target": "vector := organism ^ E ( carry U transmit ) . ( pathogen ) <EOS>",
    "prediction": "vector := organism ^ A ( carry U transmit ) . ( pathogen ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 965, 296, 1532, 4122, 1465, 1252, 1048, 1102, 1532, 2359, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 1, 25, 6, 27, 2, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 14, 1, 25, 6, 27, 2, 16, 1, 29, 2, 0]"
  },
  "accuracy": 0.933,
  "tokens_OK": 14,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['A'] -> ['E']"
    ]
  }
}


{
  "_ID": 29,
  "example": {
    "sentence": "organism subdivision is a anatomical structure that is a primary subdivision of whole organism . <EOS>",
    "target": "organism subdivision := anatomical structure ^ primary subdivision of whole organism <EOS>",
    "prediction": "organism subdivision := anatomical structure ^ primary subdivision of whole <EOS>"
  },
  "dump": {
    "sentence_idx": "[4122, 5142, 296, 1532, 2927, 1743, 1465, 296, 1532, 3340, 5142, 2995, 5063, 4122, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 28, 29, 30, 31, 32, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 28, 29, 30, 31, 0, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['organism']"
    ]
  }
}


{
  "_ID": 35,
  "example": {
    "sentence": "a device is a system in a box . <EOS>",
    "target": "device := system in box <EOS>",
    "prediction": "device := system in box box <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2016, 296, 1532, 1484, 3574, 1532, 573, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 26, 26, 0]"
  },
  "accuracy": 0.857,
  "tokens_OK": 6,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['box'] -> []"
    ]
  }
}


{
  "_ID": 4,
  "example": {
    "sentence": "a observation value is the value of the result of a observation . <EOS>",
    "target": "observation value := value of result of observation <EOS>",
    "prediction": "observation value := value of ^ result of of <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3794, 1995, 296, 1496, 1995, 2995, 1496, 1120, 2995, 1532, 3794, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 27, 28, 30, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 27, 28, 28, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 6,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []",
      "replace   PRED[8:9] -> TAR[7:8] ['of'] -> ['observation']"
    ]
  }
}


{
  "_ID": 8,
  "example": {
    "sentence": "a <UNK>@1 device is a device that implement <UNK>@8 . <EOS>",
    "target": "<UNK>@1 device := device ^ E implement . ( <UNK>@8 ) <EOS>",
    "prediction": "<UNK>@1 device := device ^ E implement <UNK>@8 . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1, 2016, 296, 1532, 2016, 1465, 3449, 1, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['<UNK>@8'] -> []",
      "replace   PRED[10:11] -> TAR[9:10] ['T'] -> ['<UNK>@8']"
    ]
  }
}


{
  "_ID": 10,
  "example": {
    "sentence": "caprina pizza <UNK>@2 a very high-calorie content . <EOS>",
    "target": "caprina pizza := E <UNK>@2 content . ( very high-calorie content ) <EOS>",
    "prediction": "caprina pizza := A <UNK>@2 <UNK>@2 . ( very high-calorie content ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4998, 2430, 1, 1532, 2027, 3803, 2436, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 21, 25, 16, 1, 23, 24, 25, 2, 0]",
    "prediction_idx": "[19, 20, 7, 14, 21, 21, 16, 1, 23, 24, 25, 2, 0]"
  },
  "accuracy": 0.846,
  "tokens_OK": 11,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['A'] -> ['E']",
      "replace   PRED[5:6] -> TAR[5:6] ['<UNK>@2'] -> ['content']"
    ]
  }
}


{
  "_ID": 7,
  "example": {
    "sentence": "a gonochoristic organism is a multi-cellular organism that <UNK>@8 male and female sex . <EOS>",
    "target": "gonochoristic organism := multi-cellular organism ^ E <UNK>@8 sex . ( male sex ) ^ E <UNK>@8 sex . ( female sex ) <EOS>",
    "prediction": "gonochoristic organism := multi-cellular organism ^ E <UNK>@8 male . ( female sex ) ^ E <UNK>@8 . ( female sex ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 567, 4122, 296, 1532, 1946, 4122, 1465, 1, 4420, 2258, 123, 5155, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 31, 16, 1, 28, 31, 2, 5, 13, 27, 31, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 28, 16, 1, 30, 31, 2, 5, 13, 27, 16, 1, 30, 31, 2, 0, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 16,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['male'] -> ['sex']",
      "replace   PRED[11:12] -> TAR[11:12] ['female'] -> ['male']",
      "insert    PRED[16:16] -> TAR[17:18] [] -> ['sex']"
    ]
  }
}


{
  "_ID": 11,
  "example": {
    "sentence": "a rock dassie is a animal that eat grass and broad-leafed plant . <EOS>",
    "target": "rock dassie := animal ^ E eat . ( grass ) ^ E eat . ( broad-leafed plant ) <EOS>",
    "prediction": "rock dassie := animal ^ E eat grass . ( broad-leafed plant ^ E eat . ( broad-leafed plant ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5013, 3888, 296, 1532, 5233, 1465, 2867, 2256, 2258, 3508, 526, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 5, 13, 26, 16, 1, 29, 30, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 30, 5, 13, 26, 16, 1, 29, 30, 2, 0]"
  },
  "accuracy": 0.381,
  "tokens_OK": 8,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['grass'] -> []",
      "replace   PRED[10:11] -> TAR[9:10] ['broad-leafed'] -> ['grass']",
      "replace   PRED[11:12] -> TAR[10:11] ['plant'] -> [')']"
    ]
  }
}


{
  "_ID": 13,
  "example": {
    "sentence": "giraffe are herbivore , and <UNK>@5 eat only leaf . <EOS>",
    "target": "giraffe := herbivore ^ A eat . ( leaf ) <EOS>",
    "prediction": "giraffe := herbivore ^ <UNK>@5 <UNK>@5 . ( leaf ) ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 4058, 2317, 2258, 1, 2867, 3546, 4585, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 25, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 24, 24, 16, 1, 27, 2, 5, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 9,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['<UNK>@5'] -> ['A']",
      "replace   PRED[5:6] -> TAR[5:6] ['<UNK>@5'] -> ['eat']",
      "delete    PRED[10:11] -> TAR[9:9] ['^'] -> []"
    ]
  }
}


{
  "_ID": 18,
  "example": {
    "sentence": "the sensor datum sheet is a object that record property of a sensor . <EOS>",
    "target": "sensor datum sheet := object ^ E record . ( property of sensor ) <EOS>",
    "prediction": "sensor datum sheet := object ^ E record property . ( of of sensor sensor <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2913, 5275, 1267, 296, 1532, 3093, 1465, 4583, 2664, 2995, 1532, 2913, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 27, 16, 1, 28, 29, 31, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 13, 27, 28, 16, 1, 29, 29, 31, 31, 0]"
  },
  "accuracy": 0.625,
  "tokens_OK": 10,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['property'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] ['of'] -> ['property']",
      "replace   PRED[14:15] -> TAR[13:14] ['sensor'] -> [')']"
    ]
  }
}


{
  "_ID": 2,
  "example": {
    "sentence": "a american hot pizza is a <UNK>@6 of american pizza that <UNK>@11 jalapeno pepper <UNK>@14 <UNK>@15 . <EOS>",
    "target": "american hot pizza := american pizza ^ E <UNK>@11 <UNK>@14 . ( jalapeno pepper ) <EOS>",
    "prediction": "american hot pizza := <UNK>@6 of american pizza ^ E <UNK>@11 . ( jalapeno pepper <UNK>@14 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2872, 2430, 296, 1532, 1, 2995, 3347, 2430, 1465, 1, 1660, 3353, 1, 1, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 27, 28, 5, 13, 30, 33, 16, 1, 31, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 28, 5, 13, 30, 16, 1, 31, 32, 33, 0]"
  },
  "accuracy": 0.294,
  "tokens_OK": 5,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@6'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "insert    PRED[10:10] -> TAR[9:10] [] -> ['<UNK>@14']",
      "replace   PRED[15:16] -> TAR[14:15] ['<UNK>@14'] -> [')']"
    ]
  }
}


{
  "_ID": 20,
  "example": {
    "sentence": "a male organism is a gonochoristic organism that <UNK>@8 produce male gamete . <EOS>",
    "target": "male organism := gonochoristic organism ^ >= 0 produce . ( male gamete ) <EOS>",
    "prediction": "male organism := gonochoristic organism ^ E <UNK>@8 . ( produce male gamete ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4420, 4122, 296, 1532, 567, 4122, 1465, 1, 4253, 4420, 3751, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 12, 18, 28, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 29, 30, 2, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 10,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['>=']",
      "replace   PRED[6:7] -> TAR[7:8] ['E'] -> ['0']",
      "replace   PRED[7:8] -> TAR[8:9] ['<UNK>@8'] -> ['produce']",
      "delete    PRED[10:11] -> TAR[10:10] ['produce'] -> []"
    ]
  }
}


{
  "_ID": 21,
  "example": {
    "sentence": "integument is the surface structure that is the outer protective covering of the body . <EOS>",
    "target": "integument := surface structure ^ outer protective covering of body <EOS>",
    "prediction": "integument := surface structure ^ E outer protective . ( covering <EOS>"
  },
  "dump": {
    "sentence_idx": "[4967, 296, 1496, 3458, 1743, 1465, 296, 1496, 4382, 4697, 3943, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 27, 28, 29, 30, 32, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 13, 27, 28, 16, 1, 29, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['E'] -> []",
      "replace   PRED[8:9] -> TAR[7:8] ['.'] -> ['covering']",
      "replace   PRED[9:10] -> TAR[8:9] ['('] -> ['of']",
      "replace   PRED[10:11] -> TAR[9:10] ['covering'] -> ['body']"
    ]
  }
}


{
  "_ID": 33,
  "example": {
    "sentence": "a meaty pizza is any pizza that <UNK>@7 at least NUM topping of meat . <EOS>",
    "target": "meaty pizza := pizza ^ >= NUM <UNK>@7 topping . ( meat ) <EOS>",
    "prediction": "meaty pizza := pizza ^ >= NUM <UNK>@7 <UNK>@7 . ( topping of meat <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3850, 2430, 296, 2133, 2430, 1465, 1, 2305, 4025, 2, 1154, 2995, 2605, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 26, 16, 1, 30, 31, 32, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['<UNK>@7'] -> ['topping']",
      "delete    PRED[11:12] -> TAR[10:10] ['topping'] -> []",
      "replace   PRED[12:13] -> TAR[11:12] ['of'] -> ['meat']",
      "replace   PRED[13:14] -> TAR[12:13] ['meat'] -> [')']"
    ]
  }
}


{
  "_ID": 41,
  "example": {
    "sentence": "the free limb skeleton is a skeletal subdivision that is <UNK>@10 of the limb . <EOS>",
    "target": "free limb skeleton := skeletal subdivision ^ E <UNK>@10 of . ( limb ) <EOS>",
    "prediction": "free limb skeleton := skeletal subdivision ^ <UNK>@10 of limb <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4339, 4294, 4381, 296, 1532, 3051, 5142, 1465, 296, 1, 2995, 1496, 4294, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 29, 30, 16, 1, 32, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 29, 30, 32, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 46,
  "example": {
    "sentence": "a property is a observable quality of a event or object . <EOS>",
    "target": "property := observable quality of event U observable quality of object <EOS>",
    "prediction": "property := observable quality of a U object object <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2664, 296, 1532, 369, 4980, 2995, 1532, 4512, 1048, 3093, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 27, 6, 23, 24, 25, 29, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 6, 29, 29, 0, 0, 0]"
  },
  "accuracy": 0.583,
  "tokens_OK": 7,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['a'] -> ['event']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['observable']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['quality']",
      "replace   PRED[7:8] -> TAR[9:10] ['object'] -> ['of']"
    ]
  }
}


{
  "_ID": 15,
  "example": {
    "sentence": "intramembranous ossification is a direct ossification that occur <UNK>@8 mesenchyme or a accumulation of <UNK>@14 unspecialized cell . <EOS>",
    "target": "intramembranous ossification := direct ossification ^ E occur <UNK>@8 . ( mesenchyme U accumulation of <UNK>@14 unspecialized cell ) <EOS>",
    "prediction": "intramembranous ossification := direct ossification ^ occur <UNK>@8 <UNK>@8 . ( accumulation of U accumulation of <UNK>@14 cell ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3269, 664, 296, 1532, 5240, 664, 1465, 542, 1, 3513, 1048, 1532, 2604, 2995, 1, 2329, 3311, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 6, 31, 32, 33, 34, 35, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 26, 27, 27, 16, 1, 31, 32, 6, 31, 32, 33, 35, 2, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 12,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['occur'] -> ['E']",
      "replace   PRED[7:8] -> TAR[7:8] ['<UNK>@8'] -> ['occur']",
      "delete    PRED[11:12] -> TAR[10:10] ['accumulation'] -> []",
      "replace   PRED[12:13] -> TAR[11:12] ['of'] -> ['mesenchyme']",
      "insert    PRED[16:16] -> TAR[16:17] [] -> ['unspecialized']"
    ]
  }
}


{
  "_ID": 19,
  "example": {
    "sentence": "leaf are <UNK>@2 of branch . <EOS>",
    "target": "leaf := E <UNK>@2 of . ( branch ) <EOS>",
    "prediction": "leaf := <UNK>@2 of branch ^ . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4585, 3728, 1, 2995, 4358, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 24, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "replace   PRED[4:5] -> TAR[6:7] ['branch'] -> ['(']",
      "replace   PRED[5:6] -> TAR[7:8] ['^'] -> ['branch']",
      "replace   PRED[6:7] -> TAR[8:9] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 25,
  "example": {
    "sentence": "branch are <UNK>@2 of tree . <EOS>",
    "target": "branch := E <UNK>@2 of . ( tree ) <EOS>",
    "prediction": "branch := <UNK>@2 of tree ^ . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4358, 3728, 1, 2995, 420, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 24, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "replace   PRED[4:5] -> TAR[6:7] ['tree'] -> ['(']",
      "replace   PRED[5:6] -> TAR[7:8] ['^'] -> ['tree']",
      "replace   PRED[6:7] -> TAR[8:9] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 30,
  "example": {
    "sentence": "anal fin lepidotrichium is a lepidotrichium that is <UNK>@8 of the anal fin skeleton . <EOS>",
    "target": "anal fin lepidotrichium := lepidotrichium ^ E <UNK>@8 of . ( anal fin skeleton ) <EOS>",
    "prediction": "anal fin lepidotrichium := lepidotrichium ^ <UNK>@8 of fin skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[701, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 701, 613, 4381, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 5, 27, 28, 31, 32, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['anal']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 42,
  "example": {
    "sentence": "a survival property is a identifiable characteristic that represent the extent of the sensor useful life . <EOS>",
    "target": "survival property := identifiable characteristic ^ E represent . ( extent of sensor useful life ) <EOS>",
    "prediction": "survival property := identifiable characteristic ^ E represent . ( extent of ) ^ E represent . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1695, 2664, 296, 1532, 71, 2418, 1465, 4929, 1496, 4784, 2995, 1496, 2913, 3150, 877, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 30, 32, 33, 34, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 30, 2, 5, 13, 27, 16, 0]"
  },
  "accuracy": 0.722,
  "tokens_OK": 13,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[12:13] -> TAR[11:11] [')'] -> []",
      "replace   PRED[13:14] -> TAR[12:13] ['^'] -> ['sensor']",
      "replace   PRED[14:15] -> TAR[13:14] ['E'] -> ['useful']",
      "replace   PRED[15:16] -> TAR[14:15] ['represent'] -> ['life']",
      "replace   PRED[16:17] -> TAR[15:16] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 45,
  "example": {
    "sentence": "the anal fin skeleton is a median fin skeleton that is located posterior <UNK>@13 the anus . <EOS>",
    "target": "anal fin skeleton := median fin skeleton ^ E located posterior <UNK>@13 . ( anus ) <EOS>",
    "prediction": "anal fin skeleton := median fin skeleton ^ located located posterior . ( <UNK>@13 ) ^ E <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 4381, 296, 1532, 3485, 613, 4381, 1465, 296, 3886, 1871, 1, 1496, 610, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 31, 32, 16, 1, 34, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 30, 30, 31, 16, 1, 32, 2, 5, 13, 0]"
  },
  "accuracy": 0.611,
  "tokens_OK": 11,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['located'] -> ['E']",
      "insert    PRED[10:10] -> TAR[11:12] [] -> ['<UNK>@13']",
      "replace   PRED[13:14] -> TAR[14:15] ['<UNK>@13'] -> ['anus']",
      "delete    PRED[15:16] -> TAR[15:15] ['^'] -> []",
      "delete    PRED[16:17] -> TAR[15:15] ['E'] -> []"
    ]
  }
}


{
  "_ID": 47,
  "example": {
    "sentence": "axial ossicle is a ossicle that is <UNK>@7 of the axial skeleton . <EOS>",
    "target": "axial ossicle := ossicle ^ E <UNK>@7 of . ( axial skeleton ) <EOS>",
    "prediction": "axial ossicle := ossicle ^ <UNK>@7 of skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 3968, 296, 1532, 3968, 1465, 296, 1, 2995, 1496, 4722, 4381, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 26, 27, 30, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['axial']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 9,
  "example": {
    "sentence": "spicy topping is any topping that <UNK>@6 a hot spiciness . <EOS>",
    "target": "spicy topping := topping ^ E <UNK>@6 spiciness . ( hot spiciness ) <EOS>",
    "prediction": "spicy topping := topping U <UNK>@6 hot spiciness <EOS>"
  },
  "dump": {
    "sentence_idx": "[611, 1154, 296, 2133, 1154, 1465, 1, 1532, 2872, 390, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 5, 13, 25, 28, 16, 1, 27, 28, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 6, 25, 27, 28, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "replace   PRED[4:5] -> TAR[5:6] ['U'] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['spiciness']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 31,
  "example": {
    "sentence": "carnivore are exactly <UNK>@3 animal that eat also animal . <EOS>",
    "target": "carnivore := animal ^ E eat . ( animal ) <EOS>",
    "prediction": "carnivore := exactly <UNK>@3 ^ E ( animal U eat ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3741, 3728, 4082, 1, 5233, 1465, 2867, 5114, 5233, 1710, 0]",
    "target_idx": "[19, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 13, 1, 23, 6, 25, 2, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['exactly'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['<UNK>@3'] -> ['animal']",
      "replace   PRED[6:7] -> TAR[5:6] ['('] -> ['eat']",
      "replace   PRED[7:8] -> TAR[6:7] ['animal'] -> ['.']",
      "replace   PRED[8:9] -> TAR[7:8] ['U'] -> ['(']",
      "replace   PRED[9:10] -> TAR[8:9] ['eat'] -> ['animal']"
    ]
  }
}


{
  "_ID": 34,
  "example": {
    "sentence": "craniofacial skeleton is a cranial skeleton <UNK>@6 <UNK>@7 neural crest cell . <EOS>",
    "target": "craniofacial skeleton := cranial skeleton ^ E <UNK>@6 <UNK>@7 . ( neural crest cell ) <EOS>",
    "prediction": "craniofacial skeleton := cranial skeleton <UNK>@6 <UNK>@7 E crest crest . ( cell ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3598, 4381, 296, 1532, 4495, 4381, 1, 1, 5343, 5025, 3311, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 25, 26, 16, 1, 27, 28, 29, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 26, 13, 28, 28, 16, 1, 29, 2, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 6,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['<UNK>@6'] -> []",
      "replace   PRED[6:7] -> TAR[5:6] ['<UNK>@7'] -> ['^']",
      "replace   PRED[8:9] -> TAR[7:8] ['crest'] -> ['<UNK>@6']",
      "replace   PRED[9:10] -> TAR[8:9] ['crest'] -> ['<UNK>@7']",
      "insert    PRED[11:11] -> TAR[11:12] [] -> ['neural']",
      "insert    PRED[11:11] -> TAR[12:13] [] -> ['crest']"
    ]
  }
}


{
  "_ID": 37,
  "example": {
    "sentence": "any pizza that <UNK>@3 at least NUM topping is <UNK>@9 interesting pizza . <EOS>",
    "target": "interesting pizza := pizza ^ >= NUM <UNK>@3 topping . ( T ) <EOS>",
    "prediction": "pizza pizza ( >= NUM || . ( topping ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[2133, 2430, 1465, 1, 2305, 4025, 2, 1154, 296, 1, 2812, 2430, 1710, 0]",
    "target_idx": "[29, 30, 7, 30, 5, 12, 25, 22, 26, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 20, 1, 12, 25, 4, 16, 1, 26, 2, 0, 0, 0, 0]"
  },
  "accuracy": 0.143,
  "tokens_OK": 2,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['interesting']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> [':=']",
      "replace   PRED[2:3] -> TAR[4:5] ['('] -> ['^']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['<UNK>@3']",
      "replace   PRED[5:6] -> TAR[8:9] ['||'] -> ['topping']",
      "replace   PRED[8:9] -> TAR[11:12] ['topping'] -> ['T']"
    ]
  }
}


{
  "_ID": 38,
  "example": {
    "sentence": "<UNK>@0 is a process that result in the estimation , or calculation , of the value of a phenomenon . <EOS>",
    "target": "<UNK>@0 := process ^ E result in . ( estimation of value of phenomenon U calculation of value of phenomenon ) <EOS>",
    "prediction": "<UNK>@0 := process ^ E result in . ( estimation of ^ value of ^ of of a ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 296, 1532, 1805, 1465, 1120, 3574, 1496, 1908, 2317, 1048, 3749, 2317, 2995, 1496, 1995, 2995, 1532, 5177, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 32, 34, 35, 37, 6, 30, 35, 34, 35, 37, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 35, 5, 34, 35, 5, 32, 35, 36, 2, 0, 0, 0]"
  },
  "accuracy": 0.545,
  "tokens_OK": 12,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[11:12] -> TAR[10:10] ['^'] -> []",
      "insert    PRED[13:13] -> TAR[13:14] [] -> ['phenomenon']",
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['U']",
      "replace   PRED[14:15] -> TAR[15:16] ['^'] -> ['calculation']",
      "insert    PRED[15:15] -> TAR[17:18] [] -> ['value']",
      "replace   PRED[17:18] -> TAR[19:20] ['a'] -> ['phenomenon']"
    ]
  }
}


{
  "_ID": 44,
  "example": {
    "sentence": "caudal fin lepidotrichium is a lepidotrichium that is <UNK>@8 of the caudal fin skeleton . <EOS>",
    "target": "caudal fin lepidotrichium := lepidotrichium ^ E <UNK>@8 of . ( caudal fin skeleton ) <EOS>",
    "prediction": "caudal fin := lepidotrichium ^ <UNK>@8 of fin skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[3008, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 3008, 613, 4381, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 2, 0]",
    "prediction_idx": "[19, 20, 7, 24, 5, 27, 28, 31, 32, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.188,
  "tokens_OK": 3,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['lepidotrichium']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['caudal']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 22,
  "example": {
    "sentence": "a stimulus is a event in the real world that trigger the sensor . <EOS>",
    "target": "stimulus := event in real world ^ E trigger . ( sensor ) <EOS>",
    "prediction": "stimulus := event in ^ real trigger ( ( sensor ) ^ >= trigger <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3305, 296, 1532, 4512, 3574, 1496, 3411, 2696, 1465, 1179, 1496, 2913, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 27, 5, 13, 29, 16, 1, 31, 2, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 26, 29, 1, 1, 31, 2, 5, 12, 29, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 5,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['real']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['world']",
      "replace   PRED[5:6] -> TAR[7:8] ['real'] -> ['E']",
      "replace   PRED[7:8] -> TAR[9:10] ['('] -> ['.']",
      "delete    PRED[11:12] -> TAR[12:12] ['^'] -> []",
      "delete    PRED[12:13] -> TAR[12:12] ['>='] -> []",
      "delete    PRED[13:14] -> TAR[12:12] ['trigger'] -> []"
    ]
  }
}


{
  "_ID": 24,
  "example": {
    "sentence": "a output is any information that is <UNK>@7 <UNK>@8 a process . <EOS>",
    "target": "output := information ^ E <UNK>@7 <UNK>@8 . ( process ) <EOS>",
    "prediction": "output := information information ^ process <UNK>@8 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1783, 296, 2133, 2786, 1465, 296, 1, 1, 1532, 1805, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 23, 5, 29, 27, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['<UNK>@7']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['<UNK>@8']",
      "replace   PRED[3:4] -> TAR[7:8] ['information'] -> ['.']",
      "replace   PRED[4:5] -> TAR[8:9] ['^'] -> ['(']",
      "replace   PRED[6:7] -> TAR[10:11] ['<UNK>@8'] -> [')']"
    ]
  }
}


{
  "_ID": 36,
  "example": {
    "sentence": "a spicy pizza is any pizza that <UNK>@7 a topping that is spicy . <EOS>",
    "target": "spicy pizza := any pizza ^ E <UNK>@7 topping . ( spicy topping ) <EOS>",
    "prediction": "spicy pizza := pizza ^ E <UNK>@7 . ( topping ) ^ E <UNK>@7 . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 611, 2430, 296, 2133, 2430, 1465, 1, 1532, 1154, 1465, 296, 611, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 28, 16, 1, 31, 28, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 28, 2, 5, 13, 26, 16, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 4,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['any']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['topping']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['spicy']",
      "delete    PRED[11:12] -> TAR[13:13] ['^'] -> []",
      "delete    PRED[12:13] -> TAR[13:13] ['E'] -> []",
      "delete    PRED[13:14] -> TAR[13:13] ['<UNK>@7'] -> []",
      "delete    PRED[14:15] -> TAR[13:13] ['.'] -> []"
    ]
  }
}


{
  "_ID": 39,
  "example": {
    "sentence": "pectoral fin is a paired fin that is located in the thoracic region of the body . <EOS>",
    "target": "pectoral fin := paired fin ^ E located in . ( thoracic region of body ) <EOS>",
    "prediction": "pectoral fin := paired fin ^ located in region <EOS>"
  },
  "dump": {
    "sentence_idx": "[2918, 613, 296, 1532, 2424, 613, 1465, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 34, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 27, 28, 31, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.412,
  "tokens_OK": 7,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['thoracic']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['body']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 23,
  "example": {
    "sentence": "a real italian pizza is a <UNK>@6 of pizza that <UNK>@10 only <UNK>@12 thin and crispy basis . <EOS>",
    "target": "real italian pizza := pizza ^ A <UNK>@12 . ( thin basis ^ crispy basis ) <EOS>",
    "prediction": "real italian pizza := <UNK>@6 of pizza ^ A <UNK>@10 . ( <UNK>@12 thin ) ^ A <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3411, 2728, 2430, 296, 1532, 1, 2995, 2430, 1465, 1, 3546, 1, 4782, 2258, 5121, 2472, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 27, 5, 14, 31, 16, 1, 32, 35, 5, 34, 35, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 14, 29, 16, 1, 31, 32, 2, 5, 14, 0]"
  },
  "accuracy": 0.278,
  "tokens_OK": 5,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@6'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "replace   PRED[9:10] -> TAR[7:8] ['<UNK>@10'] -> ['<UNK>@12']",
      "delete    PRED[12:13] -> TAR[9:9] ['<UNK>@12'] -> []",
      "replace   PRED[14:15] -> TAR[11:12] [')'] -> ['basis']",
      "insert    PRED[15:15] -> TAR[13:14] [] -> ['crispy']",
      "insert    PRED[15:15] -> TAR[14:15] [] -> ['basis']",
      "replace   PRED[16:17] -> TAR[15:16] ['A'] -> [')']"
    ]
  }
}


{
  "_ID": 28,
  "example": {
    "sentence": "a juvenile is a young fish or animal that <UNK>@9 not <UNK>@11 sexual maturity . <EOS>",
    "target": "juvenile := ( young fish U young animal ) ^ ! E <UNK>@9 <UNK>@11 . ( sexual maturity ) <EOS>",
    "prediction": "juvenile := young fish U animal E ( not ^ <UNK>@9 ) . ( <UNK>@11 sexual maturity ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1998, 296, 1532, 3413, 4435, 1048, 5233, 1465, 1, 2015, 1, 5260, 3631, 1710, 0]",
    "target_idx": "[20, 7, 1, 23, 24, 6, 23, 26, 2, 5, 15, 13, 28, 30, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 6, 26, 13, 1, 29, 5, 28, 2, 16, 1, 30, 31, 32, 2, 0, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 4,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['young']",
      "replace   PRED[6:7] -> TAR[8:9] ['E'] -> [')']",
      "replace   PRED[7:8] -> TAR[9:10] ['('] -> ['^']",
      "replace   PRED[8:9] -> TAR[10:11] ['not'] -> ['!']",
      "replace   PRED[9:10] -> TAR[11:12] ['^'] -> ['E']",
      "replace   PRED[11:12] -> TAR[13:14] [')'] -> ['<UNK>@11']",
      "delete    PRED[14:15] -> TAR[15:15] ['<UNK>@11'] -> []"
    ]
  }
}


{
  "_ID": 32,
  "example": {
    "sentence": "a tetraploid is cell or organism <UNK>@6 NUM set of chromosome . <EOS>",
    "target": "tetraploid := ( cell U organism ) ^ = NUM <UNK>@6 chromosome . ( set ) <EOS>",
    "prediction": "tetraploid := cell ^ ! NUM <UNK>@6 set . ( set of chromosome ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3421, 296, 3311, 1048, 4122, 1, 2, 1238, 2995, 3493, 1710, 0]",
    "target_idx": "[20, 7, 1, 22, 6, 24, 2, 5, 8, 26, 25, 29, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 15, 26, 25, 27, 16, 1, 27, 28, 29, 2, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['U']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['organism']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> [')']",
      "replace   PRED[4:5] -> TAR[8:9] ['!'] -> ['=']",
      "replace   PRED[7:8] -> TAR[11:12] ['set'] -> ['chromosome']",
      "delete    PRED[11:12] -> TAR[14:14] ['of'] -> []",
      "delete    PRED[12:13] -> TAR[14:14] ['chromosome'] -> []"
    ]
  }
}


{
  "_ID": 50,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that secretes dentine matrix , is <UNK>@12 <UNK>@13 the odontogenic papilla , and develop <UNK>@20 a preodontoblast cell . <EOS>",
    "target": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E <UNK>@12 <UNK>@13 . ( odontogenic papilla ) ^ E develop <UNK>@20 . ( preodontoblast cell ) <EOS>",
    "prediction": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E secretes . ( <UNK>@12 <UNK>@13 ) ^ E secretes . ( odontogenic <UNK>@20 preodontoblast ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 2317, 296, 1, 1, 1496, 3698, 5055, 2317, 2258, 3102, 1, 1532, 381, 3311, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 31, 32, 16, 1, 34, 35, 2, 5, 13, 38, 39, 16, 1, 41, 42, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 26, 16, 1, 31, 32, 2, 5, 13, 26, 16, 1, 34, 39, 41, 2, 0, 0]"
  },
  "accuracy": 0.516,
  "tokens_OK": 16,
  "tokens_tot": 31,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['<UNK>@12']",
      "replace   PRED[14:15] -> TAR[15:16] ['secretes'] -> ['<UNK>@13']",
      "replace   PRED[17:18] -> TAR[18:19] ['<UNK>@12'] -> ['odontogenic']",
      "replace   PRED[18:19] -> TAR[19:20] ['<UNK>@13'] -> ['papilla']",
      "insert    PRED[21:21] -> TAR[23:24] [] -> ['develop']",
      "replace   PRED[22:23] -> TAR[24:25] ['secretes'] -> ['<UNK>@20']",
      "delete    PRED[25:26] -> TAR[26:26] ['odontogenic'] -> []",
      "replace   PRED[26:27] -> TAR[27:28] ['<UNK>@20'] -> ['preodontoblast']",
      "replace   PRED[27:28] -> TAR[28:29] ['preodontoblast'] -> ['cell']"
    ]
  }
}


{
  "_ID": 12,
  "example": {
    "sentence": "herbivore are exactly <UNK>@3 animal that eat only plant or <UNK>@10 of plant . <EOS>",
    "target": "herbivore := animal ^ A eat . ( plant U E <UNK>@10 of . ( plant ) ) <EOS>",
    "prediction": "herbivore := exactly <UNK>@3 ^ A ( animal U eat ) . ( plant of U <UNK>@10 of plant <EOS>"
  },
  "dump": {
    "sentence_idx": "[4058, 3728, 4082, 1, 5233, 1465, 2867, 3546, 526, 1048, 1, 2995, 526, 1710, 0]",
    "target_idx": "[19, 7, 23, 5, 14, 25, 16, 1, 27, 6, 13, 29, 30, 16, 1, 31, 2, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 14, 1, 23, 6, 25, 2, 16, 1, 27, 30, 6, 29, 30, 31, 0]"
  },
  "accuracy": 0.15,
  "tokens_OK": 3,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['exactly'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['<UNK>@3'] -> ['animal']",
      "delete    PRED[6:7] -> TAR[4:4] ['('] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['animal'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['U'] -> []",
      "delete    PRED[10:11] -> TAR[5:5] [')'] -> []",
      "replace   PRED[14:15] -> TAR[9:10] ['of'] -> ['U']",
      "replace   PRED[15:16] -> TAR[10:11] ['U'] -> ['E']",
      "insert    PRED[17:17] -> TAR[13:14] [] -> ['.']",
      "insert    PRED[17:17] -> TAR[14:15] [] -> ['(']",
      "insert    PRED[18:18] -> TAR[16:17] [] -> [')']",
      "insert    PRED[18:18] -> TAR[17:18] [] -> [')']"
    ]
  }
}


{
  "_ID": 40,
  "example": {
    "sentence": "tasty plant are plant <UNK>@4 both <UNK>@6 herbivore and carnivore . <EOS>",
    "target": "tasty plant := plant ^ E <UNK>@4 <UNK>@6 . ( herbivore ) ^ E <UNK>@4 <UNK>@6 . ( carnivore ) <EOS>",
    "prediction": "tasty plant := plant <UNK>@4 both <UNK>@6 ^ carnivore <EOS>"
  },
  "dump": {
    "sentence_idx": "[1260, 526, 3728, 526, 1, 3467, 1, 4058, 2258, 3741, 1710, 0]",
    "target_idx": "[19, 20, 7, 22, 5, 13, 23, 25, 16, 1, 26, 2, 5, 13, 23, 25, 16, 1, 28, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 25, 5, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.238,
  "tokens_OK": 5,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['<UNK>@6']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['herbivore']",
      "insert    PRED[4:4] -> TAR[11:12] [] -> [')']",
      "insert    PRED[4:4] -> TAR[12:13] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[13:14] [] -> ['E']",
      "replace   PRED[5:6] -> TAR[14:15] ['both'] -> ['<UNK>@4']",
      "insert    PRED[6:6] -> TAR[16:17] [] -> ['.']",
      "replace   PRED[7:8] -> TAR[17:18] ['^'] -> ['(']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> [')']"
    ]
  }
}


{
  "_ID": 43,
  "example": {
    "sentence": "tasty plant are <UNK>@3 both <UNK>@5 herbivore and carnivore . <EOS>",
    "target": "tasty plant := plant ^ E <UNK>@3 <UNK>@5 . ( herbivore ) ^ E <UNK>@3 <UNK>@5 . ( carnivore ) <EOS>",
    "prediction": "tasty plant := <UNK>@3 both <UNK>@5 herbivore ^ carnivore <EOS>"
  },
  "dump": {
    "sentence_idx": "[1260, 526, 3728, 1, 3467, 1, 4058, 2258, 3741, 1710, 0]",
    "target_idx": "[19, 20, 7, 20, 5, 13, 22, 24, 16, 1, 25, 2, 5, 13, 22, 24, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 25, 5, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.19,
  "tokens_OK": 4,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['plant']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['<UNK>@5']",
      "replace   PRED[4:5] -> TAR[8:9] ['both'] -> ['.']",
      "replace   PRED[5:6] -> TAR[9:10] ['<UNK>@5'] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['<UNK>@3']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['<UNK>@5']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> [')']"
    ]
  }
}


{
  "_ID": 48,
  "example": {
    "sentence": "the zeugopodial skeleton is the section of the forelimb skeleton located <UNK>@11 the stylopodium and the autopodium . <EOS>",
    "target": "zeugopodial skeleton := E section of . ( forelimb skeleton ) ^ E located <UNK>@11 . ( stylopodium ^ autopodium ) <EOS>",
    "prediction": "zeugopodial skeleton := section of forelimb forelimb <UNK>@11 located . ( stylopodium ) ^ E autopodium . ( autopodium ) ^ E <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3561, 4381, 296, 1496, 5310, 2995, 1496, 2014, 4381, 3886, 1, 1496, 4563, 2258, 1496, 3302, 1710, 0]",
    "target_idx": "[20, 21, 7, 13, 24, 25, 16, 1, 27, 28, 2, 5, 13, 29, 30, 16, 1, 32, 5, 35, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 27, 27, 30, 29, 16, 1, 32, 2, 5, 13, 35, 16, 1, 35, 2, 5, 13, 0]"
  },
  "accuracy": 0.174,
  "tokens_OK": 4,
  "tokens_tot": 23,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "delete    PRED[5:6] -> TAR[5:5] ['forelimb'] -> []",
      "delete    PRED[6:7] -> TAR[5:5] ['forelimb'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['<UNK>@11'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['located'] -> []",
      "insert    PRED[10:10] -> TAR[8:9] [] -> ['forelimb']",
      "replace   PRED[11:12] -> TAR[9:10] ['stylopodium'] -> ['skeleton']",
      "insert    PRED[14:14] -> TAR[13:14] [] -> ['located']",
      "replace   PRED[15:16] -> TAR[14:15] ['autopodium'] -> ['<UNK>@11']",
      "replace   PRED[18:19] -> TAR[17:18] ['autopodium'] -> ['stylopodium']",
      "replace   PRED[19:20] -> TAR[18:19] [')'] -> ['^']",
      "replace   PRED[20:21] -> TAR[19:20] ['^'] -> ['autopodium']",
      "replace   PRED[21:22] -> TAR[20:21] ['E'] -> [')']"
    ]
  }
}


{
  "_ID": 16,
  "example": {
    "sentence": "a currency is a unit of exchange , <UNK>@8 the transfer of goods and service . <EOS>",
    "target": "currency := unit of exchange ^ E <UNK>@8 . ( transfer of goods ) ^ E <UNK>@8 . ( transfer of service ) <EOS>",
    "prediction": "currency := unit of exchange ^ transfer of goods <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 695, 296, 1532, 1825, 2995, 776, 2317, 1, 1496, 3898, 2995, 4113, 2258, 4834, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 5, 13, 27, 16, 1, 29, 30, 31, 2, 5, 13, 27, 16, 1, 29, 30, 33, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 5, 29, 30, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.292,
  "tokens_OK": 7,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['<UNK>@8']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> ['<UNK>@8']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> ['transfer']",
      "insert    PRED[8:8] -> TAR[20:21] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[21:22] [] -> ['service']",
      "insert    PRED[8:8] -> TAR[22:23] [] -> [')']"
    ]
  }
}


{
  "_ID": 27,
  "example": {
    "sentence": "a island or isle is any piece of land that is <UNK>@11 <UNK>@12 <UNK>@13 water . <EOS>",
    "target": "island U isle := piece of land ^ A <UNK>@12 <UNK>@13 . ( water ) <EOS>",
    "prediction": "island := ! E ( isle ^ isle ) . ( piece of land ^ piece <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 805, 1048, 4640, 296, 2133, 25, 2995, 2899, 1465, 296, 1, 1, 1, 226, 1710, 0]",
    "target_idx": "[20, 6, 22, 7, 25, 26, 27, 5, 14, 31, 32, 16, 1, 33, 2, 0, 0]",
    "prediction_idx": "[20, 7, 15, 13, 1, 22, 5, 22, 2, 16, 1, 25, 26, 27, 5, 25, 0]"
  },
  "accuracy": 0.118,
  "tokens_OK": 2,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['U']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> ['isle']",
      "replace   PRED[2:3] -> TAR[4:5] ['!'] -> ['piece']",
      "replace   PRED[3:4] -> TAR[5:6] ['E'] -> ['of']",
      "replace   PRED[4:5] -> TAR[6:7] ['('] -> ['land']",
      "replace   PRED[5:6] -> TAR[7:8] ['isle'] -> ['^']",
      "replace   PRED[6:7] -> TAR[8:9] ['^'] -> ['A']",
      "replace   PRED[7:8] -> TAR[9:10] ['isle'] -> ['<UNK>@12']",
      "replace   PRED[8:9] -> TAR[10:11] [')'] -> ['<UNK>@13']",
      "delete    PRED[11:12] -> TAR[12:12] ['piece'] -> []",
      "delete    PRED[12:13] -> TAR[12:12] ['of'] -> []",
      "delete    PRED[13:14] -> TAR[12:12] ['land'] -> []",
      "replace   PRED[14:15] -> TAR[13:14] ['^'] -> ['water']",
      "replace   PRED[15:16] -> TAR[14:15] ['piece'] -> [')']"
    ]
  }
}


{
  "_ID": 49,
  "example": {
    "sentence": "the autopodial skeleton is the distal section of the limb skeleton , <UNK>@12 of the anterior autopodium or posterior autopodium . <EOS>",
    "target": "autopodial skeleton := E distal section of . ( limb skeleton ) ^ E <UNK>@12 of . ( anterior autopodium U posterior autopodium ) <EOS>",
    "prediction": "autopodial skeleton := distal section of ^ <UNK>@12 of of <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 103, 4381, 296, 1496, 999, 5310, 2995, 1496, 4294, 4381, 2317, 1, 2995, 1496, 4702, 3302, 1048, 1871, 3302, 1710, 0]",
    "target_idx": "[20, 21, 7, 13, 24, 25, 26, 16, 1, 28, 29, 2, 5, 13, 31, 32, 16, 1, 34, 35, 6, 37, 38, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 5, 31, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.16,
  "tokens_OK": 4,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 15,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['limb']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['skeleton']",
      "insert    PRED[5:5] -> TAR[11:12] [] -> [')']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['anterior']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> ['autopodium']",
      "insert    PRED[8:8] -> TAR[20:21] [] -> ['U']",
      "insert    PRED[8:8] -> TAR[21:22] [] -> ['posterior']",
      "insert    PRED[8:8] -> TAR[22:23] [] -> ['autopodium']",
      "replace   PRED[9:10] -> TAR[23:24] ['of'] -> [')']"
    ]
  }
}


{
  "_ID": 6,
  "example": {
    "sentence": "a american pizza is a pizza that <UNK>@7 topping of pepperoni , mozzarella and tomato . <EOS>",
    "target": "american pizza := pizza ^ E <UNK>@7 topping . ( pepperoni ) ^ E <UNK>@7 topping . ( mozzarella ) ^ E <UNK>@7 topping . ( tomato ) <EOS>",
    "prediction": "american pizza := pizza ^ E <UNK>@7 . ( topping of pepperoni ^ tomato U tomato tomato pepperoni <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2430, 296, 1532, 2430, 1465, 1, 1154, 2995, 5193, 2317, 494, 2258, 2475, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 2, 5, 13, 26, 27, 16, 1, 31, 2, 5, 13, 26, 27, 16, 1, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 28, 29, 5, 33, 6, 33, 33, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.31,
  "tokens_OK": 9,
  "tokens_tot": 29,
  "edit_distance": {
    "score": 16,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['topping']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['pepperoni']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> [')']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['<UNK>@7']",
      "insert    PRED[9:9] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[17:18] [] -> ['(']",
      "replace   PRED[10:11] -> TAR[18:19] ['of'] -> ['mozzarella']",
      "replace   PRED[11:12] -> TAR[19:20] ['pepperoni'] -> [')']",
      "insert    PRED[12:12] -> TAR[21:22] [] -> ['E']",
      "insert    PRED[12:12] -> TAR[22:23] [] -> ['<UNK>@7']",
      "replace   PRED[13:14] -> TAR[23:24] ['tomato'] -> ['topping']",
      "replace   PRED[14:15] -> TAR[24:25] ['U'] -> ['.']",
      "replace   PRED[15:16] -> TAR[25:26] ['tomato'] -> ['(']",
      "replace   PRED[17:18] -> TAR[27:28] ['pepperoni'] -> [')']"
    ]
  }
}


{
  "_ID": 26,
  "example": {
    "sentence": "axial skeleton is a skeletal subdivision of the central body axis <UNK>@11 the cranium , vertebra , notochord , rib , and sternum . <EOS>",
    "target": "axial skeleton := skeletal subdivision of central body axis ^ E <UNK>@11 . ( cranium ) ^ E <UNK>@11 . ( vertebra ) ^ E <UNK>@11 . ( notochord ) ^ E <UNK>@11 . ( rib ) ^ E <UNK>@11 . ( sternum ) <EOS>",
    "prediction": "axial skeleton := skeletal subdivision of ^ cranium body axis <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 4381, 296, 1532, 3051, 5142, 2995, 1496, 780, 5126, 2107, 1, 1496, 3862, 2317, 4362, 2317, 595, 2317, 1983, 2317, 2258, 218, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 25, 27, 28, 29, 5, 13, 30, 16, 1, 32, 2, 5, 13, 30, 16, 1, 34, 2, 5, 13, 30, 16, 1, 36, 2, 5, 13, 30, 16, 1, 38, 2, 5, 13, 30, 16, 1, 41, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 5, 32, 28, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.156,
  "tokens_OK": 7,
  "tokens_tot": 45,
  "edit_distance": {
    "score": 36,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['central']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['body']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['axis']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> [')']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[17:18] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[18:19] [] -> ['<UNK>@11']",
      "insert    PRED[7:7] -> TAR[19:20] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[21:22] [] -> ['vertebra']",
      "insert    PRED[7:7] -> TAR[22:23] [] -> [')']",
      "insert    PRED[7:7] -> TAR[23:24] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[24:25] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[25:26] [] -> ['<UNK>@11']",
      "insert    PRED[7:7] -> TAR[26:27] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[27:28] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[28:29] [] -> ['notochord']",
      "insert    PRED[7:7] -> TAR[29:30] [] -> [')']",
      "insert    PRED[7:7] -> TAR[30:31] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[31:32] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[32:33] [] -> ['<UNK>@11']",
      "insert    PRED[7:7] -> TAR[33:34] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[34:35] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[35:36] [] -> ['rib']",
      "insert    PRED[7:7] -> TAR[36:37] [] -> [')']",
      "insert    PRED[7:7] -> TAR[37:38] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[38:39] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[39:40] [] -> ['<UNK>@11']",
      "insert    PRED[7:7] -> TAR[40:41] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[41:42] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[42:43] ['body'] -> ['sternum']",
      "replace   PRED[9:10] -> TAR[43:44] ['axis'] -> [')']"
    ]
  }
}


