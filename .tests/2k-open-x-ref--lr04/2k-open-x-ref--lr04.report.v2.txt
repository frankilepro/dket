# ANALYTICS
#
# AVG. PER-FORMULA ACCURACY: 0.23294
# AVG. EDIT DISTANCE: 3.69412
# AVG. PER-TOKEN ACCURACY: 0.57985
#
# ED	#	%	% INC
# 0	99	23.29	23.29
# 1	64	15.06	38.35
# 2	54	12.71	51.06
# 3	37	8.71	59.76
# 4	31	7.29	67.06
# 5	38	8.94	76.00
# 6	30	7.06	83.06
# 7	14	3.29	86.35
# 8	12	2.82	89.18
# 9	8	1.88	91.06
# 10	12	2.82	93.88
# 11	3	0.71	94.59
# 12	6	1.41	96.00
# 13	3	0.71	96.71
# 14	4	0.94	97.65
# 15	1	0.24	97.88
# 16	3	0.71	98.59
# 17	1	0.24	98.82
# 18	1	0.24	99.06
# 19	1	0.24	99.29
# 21	1	0.24	99.53
# 32	1	0.24	99.76
# 37	1	0.24	100.00



{
  "_ID": 2,
  "example": {
    "sentence": "a solid compound organ is a compound organ that do not contain macroscopic anatomical space . <EOS>",
    "target": "solid compound organ := compound organ ^ ! E contain . ( macroscopic anatomical space ) <EOS>",
    "prediction": "solid compound organ := compound organ ^ ! E contain . ( macroscopic anatomical space ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 360, 816, 2521, 296, 1532, 816, 2521, 1465, 4823, 2015, 3577, 661, 2927, 1053, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 15, 13, 30, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 15, 13, 30, 16, 1, 31, 32, 33, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 17,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 8,
  "example": {
    "sentence": "a feature is a abstraction of real world phenomenon . <EOS>",
    "target": "feature := abstraction of real world phenomenon <EOS>",
    "prediction": "feature := abstraction of real world phenomenon <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 110, 296, 1532, 26, 2995, 3411, 2696, 5177, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 27, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 27, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 8,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 15,
  "example": {
    "sentence": "lion are animal that eat only herbivore . <EOS>",
    "target": "lion := animal ^ A eat . ( herbivore ) <EOS>",
    "prediction": "lion := animal ^ A eat . ( herbivore ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5233, 1465, 2867, 3546, 4058, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 16,
  "example": {
    "sentence": "a vector is a organism that carry or transmit a pathogen . <EOS>",
    "target": "vector := organism ^ E ( carry U transmit ) . ( pathogen ) <EOS>",
    "prediction": "vector := organism ^ E ( carry U transmit ) . ( pathogen ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 965, 296, 1532, 4122, 1465, 1252, 1048, 1102, 1532, 2359, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 1, 25, 6, 27, 2, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 1, 25, 6, 27, 2, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 15,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 20,
  "example": {
    "sentence": "a <UNK>@1 device is a device that implement <UNK>@8 . <EOS>",
    "target": "<UNK>@1 device := device ^ E implement . ( <UNK>@8 ) <EOS>",
    "prediction": "<UNK>@1 device := device ^ E implement . ( <UNK>@8 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1, 2016, 296, 1532, 2016, 1465, 3449, 1, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 22,
  "example": {
    "sentence": "a output is any information that is <UNK>@7 <UNK>@8 a process . <EOS>",
    "target": "output := information ^ E <UNK>@7 <UNK>@8 . ( process ) <EOS>",
    "prediction": "output := information ^ E <UNK>@7 <UNK>@8 . ( process ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1783, 296, 2133, 2786, 1465, 296, 1, 1, 1532, 1805, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 68,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that secretes dentine matrix . <EOS>",
    "target": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) <EOS>",
    "prediction": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 73,
  "example": {
    "sentence": "the hypertrophic chondrocyte is a chondrocyte that produce <UNK>@8 X collagen . <EOS>",
    "target": "hypertrophic chondrocyte := chondrocyte ^ E produce . ( <UNK>@8 X collagen ) <EOS>",
    "prediction": "hypertrophic chondrocyte := chondrocyte ^ E produce . ( <UNK>@8 X collagen ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4054, 1296, 296, 1532, 1296, 1465, 4253, 1, 3678, 3870, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 28, 29, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 28, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 75,
  "example": {
    "sentence": "the odontocyte is a skeletogenic cell that secretes dentine matrix . <EOS>",
    "target": "odontocyte := skeletogenic cell ^ E secretes . ( dentine matrix ) <EOS>",
    "prediction": "odontocyte := skeletogenic cell ^ E secretes . ( dentine matrix ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2626, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 81,
  "example": {
    "sentence": "a ossified tendon is a sesamoid that develop <UNK>@8 a tendon . <EOS>",
    "target": "ossified tendon := sesamoid ^ E develop <UNK>@8 . ( tendon ) <EOS>",
    "prediction": "ossified tendon := sesamoid ^ E develop <UNK>@8 . ( tendon ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1314, 4921, 296, 1532, 1530, 1465, 3102, 1, 1532, 4921, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 92,
  "example": {
    "sentence": "a migratory neural crest cell is a cell that is <UNK>@10 <UNK>@11 the specialized ectoderm . <EOS>",
    "target": "migratory neural crest cell := cell ^ E <UNK>@10 <UNK>@11 . ( specialized ectoderm ) <EOS>",
    "prediction": "migratory neural crest cell := cell ^ E <UNK>@10 <UNK>@11 . ( specialized ectoderm ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 641, 5343, 5025, 3311, 296, 1532, 3311, 1465, 296, 1, 1, 1496, 3343, 113, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 5, 13, 29, 30, 16, 1, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 23, 7, 26, 5, 13, 29, 30, 16, 1, 32, 33, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 16,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 120,
  "example": {
    "sentence": "a two-dimensional region is a spatial region that <UNK>@8 NUM dimension . <EOS>",
    "target": "two-dimensional region := spatial region = NUM <UNK>@8 dimension . ( T ) <EOS>",
    "prediction": "two-dimensional region := spatial region = NUM <UNK>@8 dimension . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1705, 4330, 296, 1532, 3634, 4330, 1465, 1, 2, 396, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 8, 28, 27, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 8, 28, 27, 29, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 128,
  "example": {
    "sentence": "a three-dimensional region is a spatial region that <UNK>@8 NUM dimension . <EOS>",
    "target": "three-dimensional region := spatial region = NUM <UNK>@8 dimension . ( T ) <EOS>",
    "prediction": "three-dimensional region := spatial region = NUM <UNK>@8 dimension . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1869, 4330, 296, 1532, 3634, 4330, 1465, 1, 2, 396, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 8, 28, 27, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 8, 28, 27, 29, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 136,
  "example": {
    "sentence": "the vertebral centrum is a skeletal element that surround the notochord . <EOS>",
    "target": "vertebral centrum := skeletal element ^ E surround . ( notochord ) <EOS>",
    "prediction": "vertebral centrum := skeletal element ^ E surround . ( notochord ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2620, 773, 296, 1532, 3051, 1791, 1465, 3288, 1496, 595, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 137,
  "example": {
    "sentence": "a basketball game is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "basketball game := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "basketball game := event ^ >= 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2203, 4354, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 156,
  "example": {
    "sentence": "a baseball game is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "baseball game := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "baseball game := event ^ >= 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4718, 4354, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 180,
  "example": {
    "sentence": "a cultural event is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "cultural event := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "cultural event := event ^ >= 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5120, 4512, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 184,
  "example": {
    "sentence": "a measurement unit label is a datum item label that denotes a unit of measure . <EOS>",
    "target": "measurement unit label := datum item label ^ E denotes . ( unit of measure ) <EOS>",
    "prediction": "measurement unit label := datum item label ^ E denotes . ( unit of measure ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2824, 1825, 3321, 296, 1532, 5275, 771, 3321, 1465, 3594, 1532, 1825, 2995, 752, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 16, 1, 31, 32, 33, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 17,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 201,
  "example": {
    "sentence": "lepton are fermion . <EOS>",
    "target": "lepton := fermion <EOS>",
    "prediction": "lepton := fermion <EOS>"
  },
  "dump": {
    "sentence_idx": "[2955, 3728, 2039, 1710, 0]",
    "target_idx": "[19, 7, 21, 0]",
    "prediction_idx": "[19, 7, 21, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 202,
  "example": {
    "sentence": "positron are beta particle . <EOS>",
    "target": "positron := beta particle <EOS>",
    "prediction": "positron := beta particle <EOS>"
  },
  "dump": {
    "sentence_idx": "[3626, 3728, 3161, 3081, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 0]",
    "prediction_idx": "[19, 7, 21, 22, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 211,
  "example": {
    "sentence": "trimestral activity are activity that take exactly NUM month . <EOS>",
    "target": "trimestral activity := activity ^ = NUM take . ( month ) <EOS>",
    "prediction": "trimestral activity := activity ^ = NUM take . ( month ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[2857, 2231, 3728, 2231, 1465, 2747, 4082, 2, 4569, 1710, 0]",
    "target_idx": "[19, 20, 7, 22, 5, 8, 26, 24, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 5, 8, 26, 24, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 214,
  "example": {
    "sentence": "the gadolinium atom is a atom . <EOS>",
    "target": "gadolinium atom := atom <EOS>",
    "prediction": "gadolinium atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 5222, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 219,
  "example": {
    "sentence": "the ununhexium atom is a atom . <EOS>",
    "target": "ununhexium atom := atom <EOS>",
    "prediction": "ununhexium atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4265, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 221,
  "example": {
    "sentence": "lepton are subatomic particle . <EOS>",
    "target": "lepton := subatomic particle <EOS>",
    "prediction": "lepton := subatomic particle <EOS>"
  },
  "dump": {
    "sentence_idx": "[2955, 3728, 660, 3081, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 0]",
    "prediction_idx": "[19, 7, 21, 22, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 222,
  "example": {
    "sentence": "the rhenium atom is a atom . <EOS>",
    "target": "rhenium atom := atom <EOS>",
    "prediction": "rhenium atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2479, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 226,
  "example": {
    "sentence": "the manganese atom is a atom . <EOS>",
    "target": "manganese atom := atom <EOS>",
    "prediction": "manganese atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 5322, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 227,
  "example": {
    "sentence": "the lanthanum atom is a atom . <EOS>",
    "target": "lanthanum atom := atom <EOS>",
    "prediction": "lanthanum atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 46, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 228,
  "example": {
    "sentence": "the unununium atom is a atom . <EOS>",
    "target": "unununium atom := atom <EOS>",
    "prediction": "unununium atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 347, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 232,
  "example": {
    "sentence": "the barium atom is a atom . <EOS>",
    "target": "barium atom := atom <EOS>",
    "prediction": "barium atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4754, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 233,
  "example": {
    "sentence": "the argon atom are a <UNK>@5 of atom . <EOS>",
    "target": "argon atom := atom <EOS>",
    "prediction": "argon atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 848, 2223, 3728, 1532, 1, 2995, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 26, 0]",
    "prediction_idx": "[20, 21, 7, 26, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 234,
  "example": {
    "sentence": "piece of furniture are artifact that furnish a room . <EOS>",
    "target": "piece of furniture := artifact ^ E furnish . ( room ) <EOS>",
    "prediction": "piece of furniture := artifact ^ E furnish . ( room ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[25, 2995, 4360, 3728, 30, 1465, 2509, 1532, 1027, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 236,
  "example": {
    "sentence": "all antimony atom <UNK>@3 NUM proton . <EOS>",
    "target": "antimony atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "antimony atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2991, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 239,
  "example": {
    "sentence": "all germanium atom <UNK>@3 NUM proton . <EOS>",
    "target": "germanium atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "germanium atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 529, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 242,
  "example": {
    "sentence": "every herbivor is also a animal that eat only plant . <EOS>",
    "target": "herbivor := animal ^ A eat . ( plant ) <EOS>",
    "prediction": "herbivor := animal ^ A eat . ( plant ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 213, 296, 5114, 1532, 5233, 1465, 2867, 3546, 526, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 14, 26, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 14, 26, 16, 1, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 245,
  "example": {
    "sentence": "all chromium atom <UNK>@3 NUM proton . <EOS>",
    "target": "chromium atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "chromium atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4833, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 246,
  "example": {
    "sentence": "the magnesium atom is a atom . <EOS>",
    "target": "magnesium atom := atom <EOS>",
    "prediction": "magnesium atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2891, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 248,
  "example": {
    "sentence": "a herbivor is a animal that eat only plant . <EOS>",
    "target": "herbivor := animal ^ A eat . ( plant ) <EOS>",
    "prediction": "herbivor := animal ^ A eat . ( plant ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 213, 296, 1532, 5233, 1465, 2867, 3546, 526, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 14, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 14, 25, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 249,
  "example": {
    "sentence": "the carbon atom <UNK>@3 NUM proton . <EOS>",
    "target": "carbon atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "carbon atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3871, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 251,
  "example": {
    "sentence": "all oxygen atom <UNK>@3 NUM proton . <EOS>",
    "target": "oxygen atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "oxygen atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1117, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 253,
  "example": {
    "sentence": "carnivor are also animal that eat only animal . <EOS>",
    "target": "carnivor := animal ^ A eat . ( animal ) <EOS>",
    "prediction": "carnivor := animal ^ A eat . ( animal ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[634, 3728, 5114, 5233, 1465, 2867, 3546, 5233, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 14, 24, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 14, 24, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 254,
  "example": {
    "sentence": "every mammal is also a animal that brestfeed puppy . <EOS>",
    "target": "mammal := animal ^ E brestfeed . ( puppy ) <EOS>",
    "prediction": "mammal := animal ^ E brestfeed . ( puppy ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1156, 296, 5114, 1532, 5233, 1465, 2304, 5188, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 255,
  "example": {
    "sentence": "the nickel atom <UNK>@3 NUM proton . <EOS>",
    "target": "nickel atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "nickel atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 703, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 256,
  "example": {
    "sentence": "the neon atom <UNK>@3 NUM proton . <EOS>",
    "target": "neon atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "neon atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 316, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 258,
  "example": {
    "sentence": "mammal are also animal that brestfeed puppy . <EOS>",
    "target": "mammal := animal ^ E brestfeed . ( puppy ) <EOS>",
    "prediction": "mammal := animal ^ E brestfeed . ( puppy ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1156, 3728, 5114, 5233, 1465, 2304, 5188, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 264,
  "example": {
    "sentence": "dolphin are acquatic mammal that live in the sea . <EOS>",
    "target": "dolphin := acquatic mammal ^ E live in . ( sea ) <EOS>",
    "prediction": "dolphin := acquatic mammal ^ E live in . ( sea ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4268, 3728, 5124, 1156, 1465, 593, 3574, 1496, 3785, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 24, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 13, 24, 25, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 265,
  "example": {
    "sentence": "the silicon atom <UNK>@3 NUM proton . <EOS>",
    "target": "silicon atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "silicon atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1379, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 266,
  "example": {
    "sentence": "every mammal is also a animal . <EOS>",
    "target": "mammal := animal <EOS>",
    "prediction": "mammal := animal <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1156, 296, 5114, 1532, 5233, 1710, 0]",
    "target_idx": "[20, 7, 24, 0]",
    "prediction_idx": "[20, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 267,
  "example": {
    "sentence": "the selenium atom is a atom . <EOS>",
    "target": "selenium atom := atom <EOS>",
    "prediction": "selenium atom := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2337, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0]",
    "prediction_idx": "[20, 21, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 268,
  "example": {
    "sentence": "all mammal are animal that brestfeed puppy . <EOS>",
    "target": "mammal := animal ^ E brestfeed . ( puppy ) <EOS>",
    "prediction": "mammal := animal ^ E brestfeed . ( puppy ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1156, 3728, 5233, 1465, 2304, 5188, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 270,
  "example": {
    "sentence": "every lion is also a carnivor that hunt the gazelle . <EOS>",
    "target": "lion := carnivor ^ E hunt . ( gazelle ) <EOS>",
    "prediction": "lion := carnivor ^ E hunt . ( gazelle ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 232, 296, 5114, 1532, 634, 1465, 3575, 1496, 2448, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 271,
  "example": {
    "sentence": "herbivor are animal . <EOS>",
    "target": "herbivor := animal <EOS>",
    "prediction": "herbivor := animal <EOS>"
  },
  "dump": {
    "sentence_idx": "[213, 3728, 5233, 1710, 0]",
    "target_idx": "[19, 7, 21, 0]",
    "prediction_idx": "[19, 7, 21, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 272,
  "example": {
    "sentence": "all dolphin are acquatic mammal that <UNK>@6 a long muzzle . <EOS>",
    "target": "dolphin := acquatic mammal ^ <UNK>@6 long muzzle . ( T ) <EOS>",
    "prediction": "dolphin := acquatic mammal ^ <UNK>@6 long muzzle . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4268, 3728, 5124, 1156, 1465, 1, 1532, 1584, 1374, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 25, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 25, 27, 28, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 273,
  "example": {
    "sentence": "cow are also herbivor that produce milk . <EOS>",
    "target": "cow := herbivor ^ E produce . ( milk ) <EOS>",
    "prediction": "cow := herbivor ^ E produce . ( milk ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 5114, 213, 1465, 4253, 3135, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 274,
  "example": {
    "sentence": "all lion are also mammal that <UNK>@6 long hair . <EOS>",
    "target": "lion := mammal ^ <UNK>@6 long hair . ( T ) <EOS>",
    "prediction": "lion := mammal ^ <UNK>@6 long hair . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 232, 3728, 5114, 1156, 1465, 1, 1584, 619, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 25, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 25, 26, 27, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 277,
  "example": {
    "sentence": "all lion are mammal . <EOS>",
    "target": "lion := mammal <EOS>",
    "prediction": "lion := mammal <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 232, 3728, 1156, 1710, 0]",
    "target_idx": "[20, 7, 22, 0]",
    "prediction_idx": "[20, 7, 22, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 279,
  "example": {
    "sentence": "cow are mammal . <EOS>",
    "target": "cow := mammal <EOS>",
    "prediction": "cow := mammal <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 1156, 1710, 0]",
    "target_idx": "[19, 7, 21, 0]",
    "prediction_idx": "[19, 7, 21, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 282,
  "example": {
    "sentence": "cow are also herbivor . <EOS>",
    "target": "cow := herbivor <EOS>",
    "prediction": "cow := herbivor <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 5114, 213, 1710, 0]",
    "target_idx": "[19, 7, 22, 0]",
    "prediction_idx": "[19, 7, 22, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 283,
  "example": {
    "sentence": "every tiger is also a mammal . <EOS>",
    "target": "tiger := mammal <EOS>",
    "prediction": "tiger := mammal <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4809, 296, 5114, 1532, 1156, 1710, 0]",
    "target_idx": "[20, 7, 24, 0]",
    "prediction_idx": "[20, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 285,
  "example": {
    "sentence": "all scandium atom <UNK>@3 NUM proton . <EOS>",
    "target": "scandium atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "scandium atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1699, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 288,
  "example": {
    "sentence": "tiger are carnivor . <EOS>",
    "target": "tiger := carnivor <EOS>",
    "prediction": "tiger := carnivor <EOS>"
  },
  "dump": {
    "sentence_idx": "[4809, 3728, 634, 1710, 0]",
    "target_idx": "[19, 7, 21, 0]",
    "prediction_idx": "[19, 7, 21, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 293,
  "example": {
    "sentence": "all lion are also carnivor that hunt the gazelle . <EOS>",
    "target": "lion := carnivor ^ E hunt . ( gazelle ) <EOS>",
    "prediction": "lion := carnivor ^ E hunt . ( gazelle ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 232, 3728, 5114, 634, 1465, 3575, 1496, 2448, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 295,
  "example": {
    "sentence": "every lion is a carnivor that live in africa . <EOS>",
    "target": "lion := carnivor ^ E live in . ( africa ) <EOS>",
    "prediction": "lion := carnivor ^ E live in . ( africa ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 232, 296, 1532, 634, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 297,
  "example": {
    "sentence": "every gazelle is also a fast herbivor that live in africa . <EOS>",
    "target": "gazelle := fast herbivor ^ E live in . ( africa ) <EOS>",
    "prediction": "gazelle := fast herbivor ^ E live in . ( africa ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2448, 296, 5114, 1532, 3746, 213, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 5, 13, 27, 28, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 24, 25, 5, 13, 27, 28, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 301,
  "example": {
    "sentence": "gazelle are also herbivor . <EOS>",
    "target": "gazelle := herbivor <EOS>",
    "prediction": "gazelle := herbivor <EOS>"
  },
  "dump": {
    "sentence_idx": "[2448, 3728, 5114, 213, 1710, 0]",
    "target_idx": "[19, 7, 22, 0]",
    "prediction_idx": "[19, 7, 22, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 302,
  "example": {
    "sentence": "all gazelle are also fast herbivor that live in africa . <EOS>",
    "target": "gazelle := fast herbivor ^ E live in . ( africa ) <EOS>",
    "prediction": "gazelle := fast herbivor ^ E live in . ( africa ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2448, 3728, 5114, 3746, 213, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 303,
  "example": {
    "sentence": "all thallium atom <UNK>@3 NUM proton . <EOS>",
    "target": "thallium atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "thallium atom = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1124, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 304,
  "example": {
    "sentence": "all giraffe are herbivor that live in africa . <EOS>",
    "target": "giraffe := herbivor ^ E live in . ( africa ) <EOS>",
    "prediction": "giraffe := herbivor ^ E live in . ( africa ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1909, 3728, 213, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 306,
  "example": {
    "sentence": "lion are also carnivor that hunt gazelle . <EOS>",
    "target": "lion := carnivor ^ E hunt . ( gazelle ) <EOS>",
    "prediction": "lion := carnivor ^ E hunt . ( gazelle ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5114, 634, 1465, 3575, 2448, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 311,
  "example": {
    "sentence": "all tiger are carnivor that live in asia . <EOS>",
    "target": "tiger := carnivor ^ E live in . ( asia ) <EOS>",
    "prediction": "tiger := carnivor ^ E live in . ( asia ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4809, 3728, 634, 1465, 593, 3574, 5198, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 315,
  "example": {
    "sentence": "lion are also carnivor that live in africa . <EOS>",
    "target": "lion := carnivor ^ E live in . ( africa ) <EOS>",
    "prediction": "lion := carnivor ^ E live in . ( africa ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5114, 634, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 318,
  "example": {
    "sentence": "every giraffe is also a mammal that <UNK>@7 a long neck . <EOS>",
    "target": "giraffe := mammal ^ <UNK>@7 long neck . ( T ) <EOS>",
    "prediction": "giraffe := mammal ^ <UNK>@7 long neck . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1909, 296, 5114, 1532, 1156, 1465, 1, 1532, 1584, 81, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 26, 28, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 26, 28, 29, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 321,
  "example": {
    "sentence": "rhinoceros are also pachyderm that live in africa . <EOS>",
    "target": "rhinoceros := pachyderm ^ E live in . ( africa ) <EOS>",
    "prediction": "rhinoceros := pachyderm ^ E live in . ( africa ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3985, 3728, 5114, 3371, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 328,
  "example": {
    "sentence": "a cat is also a animal that is <UNK>@8 <UNK>@9 the dog . <EOS>",
    "target": "cat := animal ^ E <UNK>@8 <UNK>@9 . ( dog ) <EOS>",
    "prediction": "cat := animal ^ E <UNK>@8 <UNK>@9 . ( dog ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 362, 296, 5114, 1532, 5233, 1465, 296, 1, 1, 1496, 777, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 27, 28, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 13, 27, 28, 16, 1, 30, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 329,
  "example": {
    "sentence": "all cat are also mammal that chase mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) <EOS>",
    "prediction": "cat := mammal ^ E chase . ( mouse ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 362, 3728, 5114, 1156, 1465, 2780, 4668, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 331,
  "example": {
    "sentence": "a elephant is also a mammal that <UNK>@7 a big trunk . <EOS>",
    "target": "elephant := mammal ^ <UNK>@7 big trunk . ( T ) <EOS>",
    "prediction": "elephant := mammal ^ <UNK>@7 big trunk . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1163, 296, 5114, 1532, 1156, 1465, 1, 1532, 1999, 1721, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 26, 28, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 26, 28, 29, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 333,
  "example": {
    "sentence": "elephant are also mammal that <UNK>@5 a big trunk . <EOS>",
    "target": "elephant := mammal ^ <UNK>@5 big trunk . ( T ) <EOS>",
    "prediction": "elephant := mammal ^ <UNK>@5 big trunk . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1163, 3728, 5114, 1156, 1465, 1, 1532, 1999, 1721, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 24, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 24, 26, 27, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 337,
  "example": {
    "sentence": "every elephant is a pachyderm that live in africa or asia . <EOS>",
    "target": "elephant := pachyderm ^ E live in . ( africa U asia ) <EOS>",
    "prediction": "elephant := pachyderm ^ E live in . ( africa U asia ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1163, 296, 1532, 3371, 1465, 593, 3574, 457, 1048, 5198, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 6, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 6, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 338,
  "example": {
    "sentence": "bee are also insect that live in hive . <EOS>",
    "target": "bee := insect ^ E live in . ( hive ) <EOS>",
    "prediction": "bee := insect ^ E live in . ( hive ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3210, 3728, 5114, 2975, 1465, 593, 3574, 2556, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 340,
  "example": {
    "sentence": "a bee is also a insect that produce honey . <EOS>",
    "target": "bee := insect ^ E produce . ( honey ) <EOS>",
    "prediction": "bee := insect ^ E produce . ( honey ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3210, 296, 5114, 1532, 2975, 1465, 4253, 1621, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 341,
  "example": {
    "sentence": "all bee are also insect that <UNK>@6 NUM leg . <EOS>",
    "target": "bee := insect ^ = NUM <UNK>@6 leg . ( T ) <EOS>",
    "prediction": "bee := insect ^ = NUM <UNK>@6 leg . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3210, 3728, 5114, 2975, 1465, 1, 2, 3227, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 26, 25, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 26, 25, 27, 16, 1, 17, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 342,
  "example": {
    "sentence": "every bycicle is a vehicle . <EOS>",
    "target": "bycicle := vehicle <EOS>",
    "prediction": "bycicle := vehicle <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3326, 296, 1532, 116, 1710, 0]",
    "target_idx": "[20, 7, 23, 0]",
    "prediction_idx": "[20, 7, 23, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 344,
  "example": {
    "sentence": "a cat is a animal that is <UNK>@7 <UNK>@8 dog . <EOS>",
    "target": "cat := animal ^ E <UNK>@7 <UNK>@8 . ( dog ) <EOS>",
    "prediction": "cat := animal ^ E <UNK>@7 <UNK>@8 . ( dog ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 362, 296, 1532, 5233, 1465, 296, 1, 1, 777, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 345,
  "example": {
    "sentence": "all cat are mammal that chase mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) <EOS>",
    "prediction": "cat := mammal ^ E chase . ( mouse ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 362, 3728, 1156, 1465, 2780, 4668, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 347,
  "example": {
    "sentence": "giraffe are also herbivor . <EOS>",
    "target": "giraffe := herbivor <EOS>",
    "prediction": "giraffe := herbivor <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 5114, 213, 1710, 0]",
    "target_idx": "[19, 7, 22, 0]",
    "prediction_idx": "[19, 7, 22, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 349,
  "example": {
    "sentence": "bee are insect that live in the hive . <EOS>",
    "target": "bee := insect ^ E live in . ( hive ) <EOS>",
    "prediction": "bee := insect ^ E live in . ( hive ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3210, 3728, 2975, 1465, 593, 3574, 1496, 2556, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 351,
  "example": {
    "sentence": "bee are also insect that live in the hive . <EOS>",
    "target": "bee := insect ^ E live in . ( hive ) <EOS>",
    "prediction": "bee := insect ^ E live in . ( hive ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3210, 3728, 5114, 2975, 1465, 593, 3574, 1496, 2556, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 352,
  "example": {
    "sentence": "a cat is also a animal that is <UNK>@8 <UNK>@9 dog . <EOS>",
    "target": "cat := animal ^ E <UNK>@8 <UNK>@9 . ( dog ) <EOS>",
    "prediction": "cat := animal ^ E <UNK>@8 <UNK>@9 . ( dog ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 362, 296, 5114, 1532, 5233, 1465, 296, 1, 1, 777, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 27, 28, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 13, 27, 28, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 372,
  "example": {
    "sentence": "a engine is a complex system that produce energy . <EOS>",
    "target": "engine := complex system ^ E produce . ( energy ) <EOS>",
    "prediction": "engine := complex system ^ E produce . ( energy ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 1532, 2924, 1484, 1465, 4253, 3667, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 373,
  "example": {
    "sentence": "engine are also complex system that produce energy . <EOS>",
    "target": "engine := complex system ^ E produce . ( energy ) <EOS>",
    "prediction": "engine := complex system ^ E produce . ( energy ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 2924, 1484, 1465, 4253, 3667, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 13, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 13, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 375,
  "example": {
    "sentence": "every hammer is also a tool . <EOS>",
    "target": "hammer := tool <EOS>",
    "prediction": "hammer := tool <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3367, 296, 5114, 1532, 3198, 1710, 0]",
    "target_idx": "[20, 7, 24, 0]",
    "prediction_idx": "[20, 7, 24, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 376,
  "example": {
    "sentence": "a engine is a complex energy production system that is <UNK>@10 of a motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E <UNK>@10 of . ( motorcycle ) <EOS>",
    "prediction": "engine := complex energy production system ^ E <UNK>@10 of . ( motorcycle ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 1532, 2924, 3667, 3702, 1484, 1465, 296, 1, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 5, 13, 29, 30, 16, 1, 32, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 5, 13, 29, 30, 16, 1, 32, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 15,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 389,
  "example": {
    "sentence": "weel are <UNK>@2 of the bycicle . <EOS>",
    "target": "weel := E <UNK>@2 of . ( bycicle ) <EOS>",
    "prediction": "weel := E <UNK>@2 of . ( bycicle ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[2371, 3728, 1, 2995, 1496, 3326, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 10,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 393,
  "example": {
    "sentence": "every saw is a tool . <EOS>",
    "target": "saw := tool <EOS>",
    "prediction": "saw := tool <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 307, 296, 1532, 3198, 1710, 0]",
    "target_idx": "[20, 7, 23, 0]",
    "prediction_idx": "[20, 7, 23, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 398,
  "example": {
    "sentence": "all rake are also tool . <EOS>",
    "target": "rake := tool <EOS>",
    "prediction": "rake := tool <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4741, 3728, 5114, 3198, 1710, 0]",
    "target_idx": "[20, 7, 23, 0]",
    "prediction_idx": "[20, 7, 23, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 407,
  "example": {
    "sentence": "every clamp is a tool that <UNK>@6 secure object . <EOS>",
    "target": "clamp := tool ^ >= 0 secure . ( object ) <EOS>",
    "prediction": "clamp := tool ^ >= 0 secure . ( object ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1785, 296, 1532, 3198, 1465, 1, 3770, 3093, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 12, 18, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 12, 18, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 409,
  "example": {
    "sentence": "engine are complex energy production system that are <UNK>@8 of a motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E <UNK>@8 of . ( motorcycle ) <EOS>",
    "prediction": "engine := complex energy production system ^ E <UNK>@8 of . ( motorcycle ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 2924, 3667, 3702, 1484, 1465, 3728, 1, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 5, 13, 27, 28, 16, 1, 30, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 13, 27, 28, 16, 1, 30, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 15,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 410,
  "example": {
    "sentence": "clamp are also tool . <EOS>",
    "target": "clamp := tool <EOS>",
    "prediction": "clamp := tool <EOS>"
  },
  "dump": {
    "sentence_idx": "[1785, 3728, 5114, 3198, 1710, 0]",
    "target_idx": "[19, 7, 22, 0]",
    "prediction_idx": "[19, 7, 22, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 4,
  "tokens_tot": 4,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 411,
  "example": {
    "sentence": "scissor are manual tool that cut paper or cardboard . <EOS>",
    "target": "scissor := manual tool ^ E cut . ( paper U cardboard ) <EOS>",
    "prediction": "scissor := manual tool ^ E cut . ( paper U cardboard ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4625, 3728, 3121, 3198, 1465, 3410, 2469, 1048, 2086, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 24, 16, 1, 25, 6, 27, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 13, 24, 16, 1, 25, 6, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 419,
  "example": {
    "sentence": "rake are tool that collect dead leaf . <EOS>",
    "target": "rake := tool ^ E collect . ( dead leaf ) <EOS>",
    "prediction": "rake := tool ^ E collect . ( dead leaf ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4741, 3728, 3198, 1465, 415, 815, 4585, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 16, 1, 24, 25, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 23, 16, 1, 24, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 4,
  "example": {
    "sentence": "a device is a system in a box . <EOS>",
    "target": "device := system in box <EOS>",
    "prediction": "device := system in U box <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2016, 296, 1532, 1484, 3574, 1532, 573, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 6, 26, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['U'] -> []"
    ]
  }
}


{
  "_ID": 7,
  "example": {
    "sentence": "vehicle are non-living means of transportation . <EOS>",
    "target": "vehicle := non-living means of transportation <EOS>",
    "prediction": "vehicle := non-living means of transportation ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[116, 3728, 4032, 1217, 2995, 1839, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 7,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []"
    ]
  }
}


{
  "_ID": 9,
  "example": {
    "sentence": "organism subdivision is a anatomical structure that is a primary subdivision of whole organism . <EOS>",
    "target": "organism subdivision := anatomical structure ^ primary subdivision of whole organism <EOS>",
    "prediction": "organism subdivision := anatomical structure ^ primary subdivision of whole <EOS>"
  },
  "dump": {
    "sentence_idx": "[4122, 5142, 296, 1532, 2927, 1743, 1465, 296, 1532, 3340, 5142, 2995, 5063, 4122, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 28, 29, 30, 31, 32, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 28, 29, 30, 31, 0, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['organism']"
    ]
  }
}


{
  "_ID": 10,
  "example": {
    "sentence": "a interesting pizza is a pizza that <UNK>@7 at least NUM topping . <EOS>",
    "target": "interesting pizza := pizza ^ >= NUM <UNK>@7 topping . ( topping ) <EOS>",
    "prediction": "interesting pizza := pizza ^ >= NUM <UNK>@7 topping . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2812, 2430, 296, 1532, 2430, 1465, 1, 2305, 4025, 2, 1154, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.929,
  "tokens_OK": 13,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[11:12] -> TAR[11:12] ['T'] -> ['topping']"
    ]
  }
}


{
  "_ID": 21,
  "example": {
    "sentence": "a stimulus is a event in the real world that trigger the sensor . <EOS>",
    "target": "stimulus := event in real world ^ E trigger . ( sensor ) <EOS>",
    "prediction": "stimulus := event in world ^ E trigger . ( sensor ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3305, 296, 1532, 4512, 3574, 1496, 3411, 2696, 1465, 1179, 1496, 2913, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 27, 5, 13, 29, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 27, 5, 13, 29, 16, 1, 31, 2, 0, 0]"
  },
  "accuracy": 0.357,
  "tokens_OK": 5,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['real']"
    ]
  }
}


{
  "_ID": 24,
  "example": {
    "sentence": "a observation value is the value of the result of a observation . <EOS>",
    "target": "observation value := value of result of observation <EOS>",
    "prediction": "observation value := value of result of observation observation <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3794, 1995, 296, 1496, 1995, 2995, 1496, 1120, 2995, 1532, 3794, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 27, 28, 30, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 27, 28, 30, 30, 0]"
  },
  "accuracy": 0.9,
  "tokens_OK": 9,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['observation'] -> []"
    ]
  }
}


{
  "_ID": 32,
  "example": {
    "sentence": "a device is a physical piece of technology . <EOS>",
    "target": "device := physical piece of technology <EOS>",
    "prediction": "device := physical piece of technology ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2016, 296, 1532, 1218, 25, 2995, 1561, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 5, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 7,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []"
    ]
  }
}


{
  "_ID": 45,
  "example": {
    "sentence": "a cheesey pizza is any pizza that <UNK>@7 at least NUM cheese topping . <EOS>",
    "target": "cheesey pizza := pizza ^ >= NUM <UNK>@7 topping . ( cheese topping ) <EOS>",
    "prediction": "cheesey pizza := pizza ^ >= NUM <UNK>@7 topping . ( T topping ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 134, 2430, 296, 2133, 2430, 1465, 1, 2305, 4025, 2, 1620, 1154, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 31, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 31, 16, 1, 17, 31, 2, 0]"
  },
  "accuracy": 0.933,
  "tokens_OK": 14,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[11:12] -> TAR[11:12] ['T'] -> ['cheese']"
    ]
  }
}


{
  "_ID": 84,
  "example": {
    "sentence": "the pelvic appendage is a posterior paired appendage . <EOS>",
    "target": "pelvic appendage := posterior paired appendage <EOS>",
    "prediction": "pelvic appendage := posterior paired appendage ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2465, 4287, 296, 1532, 1871, 2424, 4287, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 26, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 5, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 7,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []"
    ]
  }
}


{
  "_ID": 99,
  "example": {
    "sentence": "the pelvic fin skeleton is a paired fin skeleton located in the abdominal position that consists of <UNK>@17 endochondral radial and dermal fin ray or lepidotrichia . <EOS>",
    "target": "pelvic fin skeleton := paired fin skeleton ^ E located in . ( abdominal position ) ^ E consists of . ( <UNK>@17 endochondral radial ^ ( dermal fin ray U dermal fin lepidotrichia ) ) <EOS>",
    "prediction": "pelvic fin skeleton := paired fin skeleton ^ E located in . ( abdominal position ) ^ E consists of . ( <UNK>@17 endochondral radial ^ ( dermal fin ray U dermal fin ray ) ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2465, 613, 4381, 296, 1532, 2424, 613, 4381, 3886, 3574, 1496, 2832, 56, 1465, 4298, 2995, 1, 3425, 1415, 2258, 280, 613, 3098, 1048, 3483, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 28, 29, 16, 1, 31, 32, 2, 5, 13, 34, 35, 16, 1, 36, 37, 38, 5, 1, 40, 41, 42, 6, 40, 41, 44, 2, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 28, 29, 16, 1, 31, 32, 2, 5, 13, 34, 35, 16, 1, 36, 37, 38, 5, 1, 40, 41, 42, 6, 40, 41, 42, 2, 2, 0]"
  },
  "accuracy": 0.973,
  "tokens_OK": 36,
  "tokens_tot": 37,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[33:34] -> TAR[33:34] ['ray'] -> ['lepidotrichia']"
    ]
  }
}


{
  "_ID": 104,
  "example": {
    "sentence": "the pectoral appendage is the anterior paired appendage . <EOS>",
    "target": "pectoral appendage := anterior paired appendage <EOS>",
    "prediction": "pectoral appendage := anterior paired appendage ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 4287, 296, 1496, 4702, 2424, 4287, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 26, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 5, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 7,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []"
    ]
  }
}


{
  "_ID": 109,
  "example": {
    "sentence": "the limb skeleton is the skeletal subdivision that is <UNK>@9 of the paired limb . <EOS>",
    "target": "limb skeleton := skeletal subdivision ^ E <UNK>@9 of . ( paired limb ) <EOS>",
    "prediction": "limb skeleton := skeletal subdivision ^ E <UNK>@9 of . ( paired limb limb <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4294, 4381, 296, 1496, 3051, 5142, 1465, 296, 1, 2995, 1496, 2424, 4294, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 32, 32, 0]"
  },
  "accuracy": 0.933,
  "tokens_OK": 14,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[13:14] -> TAR[13:14] ['limb'] -> [')']"
    ]
  }
}


{
  "_ID": 113,
  "example": {
    "sentence": "<UNK>@0 osteoblast is a skeletogenic cell that secretes osteoid . <EOS>",
    "target": "osteoblast := skeletogenic cell ^ E secretes . ( osteoid ) <EOS>",
    "prediction": "<UNK>@0 osteoblast := skeletogenic cell ^ E secretes . ( osteoid ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 933, 296, 1532, 2254, 3311, 1465, 838, 1339, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 0.077,
  "tokens_OK": 1,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []"
    ]
  }
}


{
  "_ID": 122,
  "example": {
    "sentence": "a crowd is a major gathering of people that <UNK>@9 disrupt traffic . <EOS>",
    "target": "crowd := major gathering of people ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "crowd := major gathering of people ^ ! 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3164, 296, 1532, 4075, 3346, 2995, 2095, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 5, 12, 18, 29, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 5, 15, 18, 29, 16, 1, 30, 2, 0]"
  },
  "accuracy": 0.933,
  "tokens_OK": 14,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[7:8] -> TAR[7:8] ['!'] -> ['>=']"
    ]
  }
}


{
  "_ID": 124,
  "example": {
    "sentence": "the anal fin is a median fin that is located posterior <UNK>@11 the anus . <EOS>",
    "target": "anal fin := median fin ^ E located posterior <UNK>@11 . ( anus ) <EOS>",
    "prediction": "anal fin := median fin ^ E located posterior . ( anus ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 296, 1532, 3485, 613, 1465, 296, 3886, 1871, 1, 1496, 610, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 30, 16, 1, 32, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 32, 2, 0, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 10,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['<UNK>@11']"
    ]
  }
}


{
  "_ID": 125,
  "example": {
    "sentence": "the caudal fin is the most posterior median fin . <EOS>",
    "target": "caudal fin := most posterior median fin <EOS>",
    "prediction": "caudal fin := most posterior median fin U <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3008, 613, 296, 1496, 2880, 1871, 3485, 613, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 26, 27, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 27, 6, 0]"
  },
  "accuracy": 0.889,
  "tokens_OK": 8,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['U'] -> []"
    ]
  }
}


{
  "_ID": 134,
  "example": {
    "sentence": "a concert is <UNK>@3 event that <UNK>@6 disrupt traffic . <EOS>",
    "target": "concert := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "concert := <UNK>@3 ^ >= 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3168, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 12, 18, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 12, 18, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['<UNK>@3'] -> ['event']"
    ]
  }
}


{
  "_ID": 142,
  "example": {
    "sentence": "a football match is <UNK>@4 event that <UNK>@7 disrupt traffic . . <EOS>",
    "target": "football match := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "football match := event ^ ! 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4711, 5340, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 15, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.923,
  "tokens_OK": 12,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['!'] -> ['>=']"
    ]
  }
}


{
  "_ID": 143,
  "example": {
    "sentence": "a rugby match is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "rugby match := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "rugby match := event ^ ! 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2081, 5340, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 15, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.923,
  "tokens_OK": 12,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['!'] -> ['>=']"
    ]
  }
}


{
  "_ID": 145,
  "example": {
    "sentence": "the fin skeleton is the skeletal subdivision that is <UNK>@9 of the paired fin . <EOS>",
    "target": "fin skeleton := skeletal subdivision ^ E <UNK>@9 of . ( paired fin ) <EOS>",
    "prediction": "fin skeleton := skeletal subdivision ^ E <UNK>@9 of . ( paired fin fin <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 613, 4381, 296, 1496, 3051, 5142, 1465, 296, 1, 2995, 1496, 2424, 613, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 32, 32, 0]"
  },
  "accuracy": 0.933,
  "tokens_OK": 14,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[13:14] -> TAR[13:14] ['fin'] -> [')']"
    ]
  }
}


{
  "_ID": 151,
  "example": {
    "sentence": "a bull fight is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "bull fight := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "bull fight := event ^ ! 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3569, 5252, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 15, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.923,
  "tokens_OK": 12,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['!'] -> ['>=']"
    ]
  }
}


{
  "_ID": 152,
  "example": {
    "sentence": "a tennis tournament is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "tennis tournament := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "tennis tournament := <UNK>@4 ^ >= 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5021, 2983, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 23, 5, 12, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.923,
  "tokens_OK": 12,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['<UNK>@4'] -> ['event']"
    ]
  }
}


{
  "_ID": 154,
  "example": {
    "sentence": "heavy frost is a thick coating of frost . <EOS>",
    "target": "heavy frost := thick coating of frost <EOS>",
    "prediction": "heavy frost := thick coating of frost ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[463, 4532, 296, 1532, 3744, 4333, 2995, 4532, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 25, 26, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 26, 5, 0]"
  },
  "accuracy": 0.889,
  "tokens_OK": 8,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['^'] -> []"
    ]
  }
}


{
  "_ID": 187,
  "example": {
    "sentence": "a team is a group of employee . <EOS>",
    "target": "team := group of employee <EOS>",
    "prediction": "team := group of employee ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 296, 1532, 5034, 2995, 3976, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 5, 0]"
  },
  "accuracy": 0.857,
  "tokens_OK": 6,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []"
    ]
  }
}


{
  "_ID": 199,
  "example": {
    "sentence": "desk are piece of funriture . <EOS>",
    "target": "desk := piece of funriture <EOS>",
    "prediction": "desk := piece of funriture ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[27, 3728, 25, 2995, 579, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 0]"
  },
  "accuracy": 0.857,
  "tokens_OK": 6,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []"
    ]
  }
}


{
  "_ID": 210,
  "example": {
    "sentence": "a manager is <UNK>@3 employee that lead at least NUM team . <EOS>",
    "target": "manager := employee ^ >= NUM lead . ( team ) <EOS>",
    "prediction": "manager := <UNK>@3 employee ^ >= NUM lead . ( team ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5346, 296, 1, 3976, 1465, 554, 2305, 4025, 2, 2554, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 12, 28, 25, 16, 1, 29, 2, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 12, 28, 25, 16, 1, 29, 2, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []"
    ]
  }
}


{
  "_ID": 218,
  "example": {
    "sentence": "boson are subatomic particle . <EOS>",
    "target": "boson := subatomic particle <EOS>",
    "prediction": "boson := E subatomic particle <EOS>"
  },
  "dump": {
    "sentence_idx": "[90, 3728, 660, 3081, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 0, 0]",
    "prediction_idx": "[19, 7, 13, 21, 22, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 3,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['E'] -> []"
    ]
  }
}


{
  "_ID": 237,
  "example": {
    "sentence": "the xenon atom <UNK>@3 NUM proton . <EOS>",
    "target": "xenon atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "xenon := = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2591, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.909,
  "tokens_OK": 10,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']"
    ]
  }
}


{
  "_ID": 238,
  "example": {
    "sentence": "a chlorine atom <UNK>@3 NUM proton . <EOS>",
    "target": "chlorine atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "chlorine := = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4835, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.909,
  "tokens_OK": 10,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']"
    ]
  }
}


{
  "_ID": 243,
  "example": {
    "sentence": "the berkelium atom are also atom . <EOS>",
    "target": "berkelium atom := atom <EOS>",
    "prediction": "berkelium atom := atom ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 525, 2223, 3728, 5114, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 244,
  "example": {
    "sentence": "the neodymium atom is a atom . <EOS>",
    "target": "neodymium atom := atom <EOS>",
    "prediction": "neodymium atom := atom ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 527, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 247,
  "example": {
    "sentence": "a rhodium atom <UNK>@3 NUM proton . <EOS>",
    "target": "rhodium atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "rhodium := = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1024, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.909,
  "tokens_OK": 10,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']"
    ]
  }
}


{
  "_ID": 259,
  "example": {
    "sentence": "all insect are also small animal . <EOS>",
    "target": "insect := small animal <EOS>",
    "prediction": "insect := small animal ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2975, 3728, 5114, 2143, 5233, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 260,
  "example": {
    "sentence": "cow are also mammal that <UNK>@5 NUM long horn . <EOS>",
    "target": "cow := mammal ^ = NUM <UNK>@5 long horn . ( T ) <EOS>",
    "prediction": "cow := mammal ^ = NUM <UNK>@5 horn . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 5114, 1156, 1465, 1, 2, 1584, 4277, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 8, 25, 24, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 8, 25, 24, 27, 16, 1, 17, 2, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['long']"
    ]
  }
}


{
  "_ID": 263,
  "example": {
    "sentence": "rubidium atom are also atom . <EOS>",
    "target": "rubidium atom := atom <EOS>",
    "prediction": "rubidium := atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[3958, 2223, 3728, 5114, 2223, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 0]",
    "prediction_idx": "[19, 7, 23, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 2,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['atom']"
    ]
  }
}


{
  "_ID": 269,
  "example": {
    "sentence": "every dolphin is also a acquatic mammal . <EOS>",
    "target": "dolphin := acquatic mammal <EOS>",
    "prediction": "dolphin := acquatic mammal ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4268, 296, 5114, 1532, 5124, 1156, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 0, 0]",
    "prediction_idx": "[20, 7, 24, 25, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 276,
  "example": {
    "sentence": "a arsenic atom <UNK>@3 NUM proton . <EOS>",
    "target": "arsenic atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "arsenic := = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1570, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.909,
  "tokens_OK": 10,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']"
    ]
  }
}


{
  "_ID": 278,
  "example": {
    "sentence": "every lion is a mammal that <UNK>@6 a long hair . <EOS>",
    "target": "lion := mammal ^ <UNK>@6 long hair . ( T ) <EOS>",
    "prediction": "lion := mammal ^ <UNK>@6 long hair . ( hair ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 232, 296, 1532, 1156, 1465, 1, 1532, 1584, 619, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 25, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 25, 27, 28, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[9:10] -> TAR[9:10] ['hair'] -> ['T']"
    ]
  }
}


{
  "_ID": 280,
  "example": {
    "sentence": "every cow is a mammal that <UNK>@6 NUM long horn . <EOS>",
    "target": "cow := mammal ^ = NUM <UNK>@6 long horn . ( T ) <EOS>",
    "prediction": "cow := mammal ^ = NUM <UNK>@6 horn . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3193, 296, 1532, 1156, 1465, 1, 2, 1584, 4277, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 26, 25, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 26, 25, 28, 16, 1, 17, 2, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['long']"
    ]
  }
}


{
  "_ID": 300,
  "example": {
    "sentence": "a manganese atom <UNK>@3 NUM proton . <EOS>",
    "target": "manganese atom = NUM <UNK>@3 proton . ( T ) <EOS>",
    "prediction": "manganese := = NUM <UNK>@3 proton . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5322, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 8, 23, 22, 24, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.909,
  "tokens_OK": 10,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']"
    ]
  }
}


{
  "_ID": 314,
  "example": {
    "sentence": "a rhinoceros is a mammal that <UNK>@6 exactly NUM horn . <EOS>",
    "target": "rhinoceros := mammal ^ = NUM <UNK>@6 horn . ( T ) <EOS>",
    "prediction": "rhinoceros := mammal ^ = NUM exactly horn . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3985, 296, 1532, 1156, 1465, 1, 4082, 2, 4277, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 27, 25, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 27, 26, 28, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.923,
  "tokens_OK": 12,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['exactly'] -> ['<UNK>@6']"
    ]
  }
}


{
  "_ID": 316,
  "example": {
    "sentence": "all elephant are pachyderm . <EOS>",
    "target": "elephant := pachyderm <EOS>",
    "prediction": "elephant := pachyderm pachyderm <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1163, 3728, 3371, 1710, 0]",
    "target_idx": "[20, 7, 22, 0, 0]",
    "prediction_idx": "[20, 7, 22, 22, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 4,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['pachyderm'] -> []"
    ]
  }
}


{
  "_ID": 320,
  "example": {
    "sentence": "every rhinoceros is also a mammal that <UNK>@7 exactly NUM horn . <EOS>",
    "target": "rhinoceros := mammal ^ = NUM <UNK>@7 horn . ( T ) <EOS>",
    "prediction": "rhinoceros := mammal ^ = NUM exactly horn . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3985, 296, 5114, 1532, 1156, 1465, 1, 4082, 2, 4277, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 8, 28, 26, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 8, 28, 27, 29, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.923,
  "tokens_OK": 12,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['exactly'] -> ['<UNK>@7']"
    ]
  }
}


{
  "_ID": 322,
  "example": {
    "sentence": "every rhinoceros is a mammal that <UNK>@6 exactly NUM horn . <EOS>",
    "target": "rhinoceros := mammal ^ = NUM <UNK>@6 horn . ( T ) <EOS>",
    "prediction": "rhinoceros := mammal ^ = NUM exactly horn . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3985, 296, 1532, 1156, 1465, 1, 4082, 2, 4277, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 27, 25, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 27, 26, 28, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.923,
  "tokens_OK": 12,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['exactly'] -> ['<UNK>@6']"
    ]
  }
}


{
  "_ID": 323,
  "example": {
    "sentence": "all rhinoceros are pachyderm that live in africa . <EOS>",
    "target": "rhinoceros := pachyderm ^ E live in . ( africa ) <EOS>",
    "prediction": "rhinoceros := pachyderm ^ E in in . ( africa ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3985, 3728, 3371, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 25, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['in'] -> ['live']"
    ]
  }
}


{
  "_ID": 324,
  "example": {
    "sentence": "all cat are animal that are <UNK>@6 <UNK>@7 dog . <EOS>",
    "target": "cat := animal ^ E <UNK>@6 <UNK>@7 . ( dog ) <EOS>",
    "prediction": "cat := animal ^ E <UNK>@6 <UNK>@7 . ( <UNK>@6 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 362, 3728, 5233, 1465, 3728, 1, 1, 777, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 25, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 25, 26, 16, 1, 25, 2, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[9:10] -> TAR[9:10] ['<UNK>@6'] -> ['dog']"
    ]
  }
}


{
  "_ID": 334,
  "example": {
    "sentence": "all mouse are also small animal . <EOS>",
    "target": "mouse := small animal <EOS>",
    "prediction": "mouse := small animal ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4668, 3728, 5114, 2143, 5233, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 350,
  "example": {
    "sentence": "cat are also animal that are <UNK>@6 <UNK>@7 a dog . <EOS>",
    "target": "cat := animal ^ E <UNK>@6 <UNK>@7 . ( dog ) <EOS>",
    "prediction": "cat := animal ^ <UNK>@6 <UNK>@6 <UNK>@7 . ( dog ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 5114, 5233, 1465, 3728, 1, 1, 1532, 777, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 25, 26, 16, 1, 28, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 25, 25, 26, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['<UNK>@6'] -> ['E']"
    ]
  }
}


{
  "_ID": 365,
  "example": {
    "sentence": "motorcycle are vehicle . <EOS>",
    "target": "motorcycle := vehicle <EOS>",
    "prediction": "motorcycle vehicle := vehicle <EOS>"
  },
  "dump": {
    "sentence_idx": "[120, 3728, 116, 1710, 0]",
    "target_idx": "[19, 7, 21, 0, 0]",
    "prediction_idx": "[19, 21, 7, 21, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 2,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['vehicle'] -> []"
    ]
  }
}


{
  "_ID": 366,
  "example": {
    "sentence": "all pachyderm are also large animal . <EOS>",
    "target": "pachyderm := large animal <EOS>",
    "prediction": "pachyderm := large animal ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3371, 3728, 5114, 1650, 5233, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 368,
  "example": {
    "sentence": "weel are <UNK>@2 of the motorcycle . <EOS>",
    "target": "weel := E <UNK>@2 of . ( motorcycle ) <EOS>",
    "prediction": "weel := E <UNK>@2 of . ( motorcycle motorcycle <EOS>"
  },
  "dump": {
    "sentence_idx": "[2371, 3728, 1, 2995, 1496, 120, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 24, 0]"
  },
  "accuracy": 0.9,
  "tokens_OK": 9,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['motorcycle'] -> [')']"
    ]
  }
}


{
  "_ID": 371,
  "example": {
    "sentence": "car are vehicle . <EOS>",
    "target": "car := vehicle <EOS>",
    "prediction": "car := A vehicle <EOS>"
  },
  "dump": {
    "sentence_idx": "[1877, 3728, 116, 1710, 0]",
    "target_idx": "[19, 7, 21, 0, 0]",
    "prediction_idx": "[19, 7, 14, 21, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 3,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['A'] -> []"
    ]
  }
}


{
  "_ID": 377,
  "example": {
    "sentence": "<UNK>@0 weel are <UNK>@3 of car . <EOS>",
    "target": "<UNK>@0 weel := E <UNK>@3 of . ( car ) <EOS>",
    "prediction": "<UNK>@0 weel := E <UNK>@3 of . ( <UNK>@3 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 2371, 3728, 1, 2995, 1877, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 22, 23, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 20, 7, 13, 22, 23, 16, 1, 22, 2, 0]"
  },
  "accuracy": 0.909,
  "tokens_OK": 10,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['<UNK>@3'] -> ['car']"
    ]
  }
}


{
  "_ID": 378,
  "example": {
    "sentence": "engine are also energy production system . <EOS>",
    "target": "engine := energy production system <EOS>",
    "prediction": "engine := energy production system ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 3667, 3702, 1484, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 24, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 0]"
  },
  "accuracy": 0.857,
  "tokens_OK": 6,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []"
    ]
  }
}


{
  "_ID": 385,
  "example": {
    "sentence": "all engine are also energy production system . <EOS>",
    "target": "engine := energy production system <EOS>",
    "prediction": "engine := energy production system ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3592, 3728, 5114, 3667, 3702, 1484, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 5, 0]"
  },
  "accuracy": 0.857,
  "tokens_OK": 6,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []"
    ]
  }
}


{
  "_ID": 386,
  "example": {
    "sentence": "every cross blade screwdriver is also a screwdriver that <UNK>@9 a cross blade . <EOS>",
    "target": "cross blade screwdriver := screwdriver ^ E <UNK>@9 cross blade . ( T ) <EOS>",
    "prediction": "cross blade screwdriver := screwdriver ^ ! <UNK>@9 cross blade . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1420, 4716, 4051, 296, 5114, 1532, 4051, 1465, 1, 1532, 1420, 4716, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 26, 5, 13, 28, 30, 31, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 26, 5, 15, 28, 30, 31, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.933,
  "tokens_OK": 14,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['!'] -> ['E']"
    ]
  }
}


{
  "_ID": 395,
  "example": {
    "sentence": "all drill are power tool . <EOS>",
    "target": "drill := power tool <EOS>",
    "prediction": "drill := power tool ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1205, 3728, 4964, 3198, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 400,
  "example": {
    "sentence": "all gardern fork are tool . <EOS>",
    "target": "gardern fork := tool <EOS>",
    "prediction": "gardern fork := tool ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4047, 5086, 3728, 3198, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 0, 0]",
    "prediction_idx": "[20, 21, 7, 23, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 408,
  "example": {
    "sentence": "saddle are <UNK>@2 of the motorcycle . <EOS>",
    "target": "saddle := E <UNK>@2 of . ( motorcycle ) <EOS>",
    "prediction": "saddle := E <UNK>@2 of . ( motorcycle motorcycle <EOS>"
  },
  "dump": {
    "sentence_idx": "[3462, 3728, 1, 2995, 1496, 120, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 24, 0]"
  },
  "accuracy": 0.9,
  "tokens_OK": 9,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['motorcycle'] -> [')']"
    ]
  }
}


{
  "_ID": 412,
  "example": {
    "sentence": "a rake is a tool that collect dead leaf . <EOS>",
    "target": "rake := tool ^ E collect . ( dead leaf ) <EOS>",
    "prediction": "rake := tool ^ E collect . ( leaf leaf ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4741, 296, 1532, 3198, 1465, 415, 815, 4585, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 27, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 27, 27, 2, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['leaf'] -> ['dead']"
    ]
  }
}


{
  "_ID": 414,
  "example": {
    "sentence": "vehicle are mean of transportation . <EOS>",
    "target": "vehicle := mean of transportation <EOS>",
    "prediction": "vehicle := mean of transportation ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[116, 3728, 3357, 2995, 1839, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 0]"
  },
  "accuracy": 0.857,
  "tokens_OK": 6,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []"
    ]
  }
}


{
  "_ID": 415,
  "example": {
    "sentence": "all power tool are tool . <EOS>",
    "target": "power tool := tool <EOS>",
    "prediction": "power tool := tool ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4964, 3198, 3728, 3198, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 0, 0]",
    "prediction_idx": "[20, 21, 7, 23, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 421,
  "example": {
    "sentence": "a saw is a tool that <UNK>@6 a sharp blade . <EOS>",
    "target": "saw := tool ^ E <UNK>@6 sharp blade . ( T ) <EOS>",
    "prediction": "saw := tool ^ E <UNK>@6 sharp blade ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 307, 296, 1532, 3198, 1465, 1, 1532, 2772, 4716, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 27, 28, 1, 17, 2, 0, 0]"
  },
  "accuracy": 0.692,
  "tokens_OK": 9,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['.']"
    ]
  }
}


{
  "_ID": 422,
  "example": {
    "sentence": "all hand tool are also tool . <EOS>",
    "target": "hand tool := tool <EOS>",
    "prediction": "hand tool := tool ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 324, 3198, 3728, 5114, 3198, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 1,
  "example": {
    "sentence": "a direct ossification is a ossification that do not require the replacement of pre-existing tissue . <EOS>",
    "target": "direct ossification := ossification ^ ! E require . ( replacement of pre-existing tissue ) <EOS>",
    "prediction": "direct ossification := ossification ^ E not require . ( replacement of pre-existing tissue ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5240, 664, 296, 1532, 664, 1465, 4823, 2015, 4742, 1496, 4747, 2995, 3139, 3846, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 15, 13, 28, 16, 1, 30, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 33, 2, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 14,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['E'] -> ['!']",
      "replace   PRED[6:7] -> TAR[6:7] ['not'] -> ['E']"
    ]
  }
}


{
  "_ID": 6,
  "example": {
    "sentence": "tree are a <UNK>@3 of plant . <EOS>",
    "target": "tree := plant <EOS>",
    "prediction": "tree := <UNK>@3 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[420, 3728, 1532, 1, 2995, 526, 1710, 0]",
    "target_idx": "[19, 7, 24, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 3,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['of'] -> ['plant']"
    ]
  }
}


{
  "_ID": 34,
  "example": {
    "sentence": "pectoral fin is a paired fin that is located in the thoracic region of the body . <EOS>",
    "target": "pectoral fin := paired fin ^ E located in . ( thoracic region of body ) <EOS>",
    "prediction": "pectoral fin := paired fin ^ E located in . in thoracic region of ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[2918, 613, 296, 1532, 2424, 613, 1465, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 34, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 27, 28, 16, 28, 30, 31, 32, 2, 0, 0]"
  },
  "accuracy": 0.824,
  "tokens_OK": 14,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[10:11] -> TAR[10:11] ['in'] -> ['(']",
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['body']"
    ]
  }
}


{
  "_ID": 36,
  "example": {
    "sentence": "a rock dassie is a animal that eat grass and broad-leafed plant . <EOS>",
    "target": "rock dassie := animal ^ E eat . ( grass ) ^ E eat . ( broad-leafed plant ) <EOS>",
    "prediction": "rock dassie := animal ^ E eat grass . ( grass ) ^ E plant . ( broad-leafed plant ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5013, 3888, 296, 1532, 5233, 1465, 2867, 2256, 2258, 3508, 526, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 5, 13, 26, 16, 1, 29, 30, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 27, 2, 5, 13, 30, 16, 1, 29, 30, 2, 0]"
  },
  "accuracy": 0.381,
  "tokens_OK": 8,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['grass'] -> []",
      "replace   PRED[14:15] -> TAR[13:14] ['plant'] -> ['eat']"
    ]
  }
}


{
  "_ID": 41,
  "example": {
    "sentence": "the anal fin skeleton is a median fin skeleton that is located posterior <UNK>@13 the anus . <EOS>",
    "target": "anal fin skeleton := median fin skeleton ^ E located posterior <UNK>@13 . ( anus ) <EOS>",
    "prediction": "anal fin skeleton := median fin skeleton ^ E located posterior . ( the ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 4381, 296, 1532, 3485, 613, 4381, 1465, 296, 3886, 1871, 1, 1496, 610, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 31, 32, 16, 1, 34, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 31, 16, 1, 33, 2, 0, 0]"
  },
  "accuracy": 0.706,
  "tokens_OK": 12,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[10:10] -> TAR[11:12] [] -> ['<UNK>@13']",
      "replace   PRED[13:14] -> TAR[14:15] ['the'] -> ['anus']"
    ]
  }
}


{
  "_ID": 47,
  "example": {
    "sentence": "integument is the surface structure that is the outer protective covering of the body . <EOS>",
    "target": "integument := surface structure ^ outer protective covering of body <EOS>",
    "prediction": "integument := surface structure ^ body protective covering body <EOS>"
  },
  "dump": {
    "sentence_idx": "[4967, 296, 1496, 3458, 1743, 1465, 296, 1496, 4382, 4697, 3943, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 27, 28, 29, 30, 32, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 32, 28, 29, 32, 0, 0]"
  },
  "accuracy": 0.727,
  "tokens_OK": 8,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['body'] -> ['outer']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['of']"
    ]
  }
}


{
  "_ID": 56,
  "example": {
    "sentence": "a non-mineralized hyaline cartilage tissue is a hyaline cartilage tissue that is not mineralized . <EOS>",
    "target": "non-mineralized hyaline cartilage tissue := hyaline cartilage tissue ^ ! mineralized <EOS>",
    "prediction": "non-mineralized hyaline cartilage := := hyaline cartilage tissue ^ mineralized mineralized <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2137, 5040, 1005, 3846, 296, 1532, 5040, 1005, 3846, 1465, 296, 2015, 4878, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 27, 28, 5, 15, 32, 0]",
    "prediction_idx": "[20, 21, 22, 7, 7, 26, 27, 28, 5, 32, 32, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 10,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] [':='] -> ['tissue']",
      "replace   PRED[9:10] -> TAR[9:10] ['mineralized'] -> ['!']"
    ]
  }
}


{
  "_ID": 67,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that is <UNK>@8 <UNK>@9 the odontogenic papilla . <EOS>",
    "target": "odontoblast := skeletogenic cell ^ E <UNK>@8 <UNK>@9 . ( odontogenic papilla ) <EOS>",
    "prediction": "odontoblast := skeletogenic cell ^ <UNK>@8 <UNK>@8 <UNK>@9 . ( odontogenic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 296, 1, 1, 1496, 3698, 5055, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 27, 27, 28, 16, 1, 30, 2, 0, 0]"
  },
  "accuracy": 0.786,
  "tokens_OK": 11,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['<UNK>@8'] -> ['E']",
      "insert    PRED[10:10] -> TAR[11:12] [] -> ['papilla']"
    ]
  }
}


{
  "_ID": 74,
  "example": {
    "sentence": "carnivorous plant are plant that eat animal . <EOS>",
    "target": "carnivorous plant := plant ^ E eat . ( animal ) <EOS>",
    "prediction": "carnivorous plant := plant ^ E eat animal . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3758, 526, 3728, 526, 1465, 2867, 5233, 1710, 0]",
    "target_idx": "[19, 20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 22, 5, 13, 24, 25, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['animal'] -> []",
      "replace   PRED[10:11] -> TAR[9:10] ['T'] -> ['animal']"
    ]
  }
}


{
  "_ID": 90,
  "example": {
    "sentence": "frutti <UNK>@1 mare <UNK>@3 lack cheese . <EOS>",
    "target": "frutti <UNK>@1 mare := E lack . ( cheese ) <EOS>",
    "prediction": "frutti <UNK>@1 mare := ! E <UNK>@3 . ( cheese ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1836, 1, 4490, 1, 4971, 1620, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 13, 23, 16, 1, 24, 2, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 15, 13, 22, 16, 1, 24, 2, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['!'] -> []",
      "replace   PRED[6:7] -> TAR[5:6] ['<UNK>@3'] -> ['lack']"
    ]
  }
}


{
  "_ID": 100,
  "example": {
    "sentence": "a paired fin skeleton is a skeletal system that consists of the paired fin <UNK>@14 pectoral or pelvic fin <UNK>@19 . <EOS>",
    "target": "paired fin skeleton := skeletal system ^ E consists of . ( paired fin ) <EOS>",
    "prediction": "paired fin skeleton := skeletal system ^ E consists of . ( the paired fin U <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2424, 613, 4381, 296, 1532, 3051, 1484, 1465, 4298, 2995, 1496, 2424, 613, 1, 2918, 1048, 2465, 613, 1, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 28, 29, 16, 1, 31, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 28, 29, 16, 1, 30, 31, 32, 6, 0]"
  },
  "accuracy": 0.765,
  "tokens_OK": 13,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[12:13] -> TAR[11:11] ['the'] -> []",
      "replace   PRED[15:16] -> TAR[14:15] ['U'] -> [')']"
    ]
  }
}


{
  "_ID": 103,
  "example": {
    "sentence": "a paired fin skeleton is a skeletal system that consists of the paired fin <UNK>@14 pectoral or pelvic fin <UNK>@19 . <EOS>",
    "target": "paired fin skeleton := skeletal system ^ E consists of . ( paired fin ) <EOS>",
    "prediction": "paired fin skeleton := skeletal system ^ E consists of . ( the paired fin U <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2424, 613, 4381, 296, 1532, 3051, 1484, 1465, 4298, 2995, 1496, 2424, 613, 1, 2918, 1048, 2465, 613, 1, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 28, 29, 16, 1, 31, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 28, 29, 16, 1, 30, 31, 32, 6, 0]"
  },
  "accuracy": 0.765,
  "tokens_OK": 13,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[12:13] -> TAR[11:11] ['the'] -> []",
      "replace   PRED[15:16] -> TAR[14:15] ['U'] -> [')']"
    ]
  }
}


{
  "_ID": 116,
  "example": {
    "sentence": "the dorsal fin is a median fin located <UNK>@8 the dorsal surface of the organism . <EOS>",
    "target": "dorsal fin := median fin ^ E located <UNK>@8 . ( dorsal surface of organism ) <EOS>",
    "prediction": "dorsal fin := median fin ^ E <UNK>@8 <UNK>@8 . ( dorsal surface of ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3927, 613, 296, 1532, 3485, 613, 3886, 1, 1496, 3927, 3458, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 26, 27, 16, 1, 29, 30, 31, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 27, 16, 1, 29, 30, 31, 2, 0, 0]"
  },
  "accuracy": 0.824,
  "tokens_OK": 14,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[7:8] -> TAR[7:8] ['<UNK>@8'] -> ['located']",
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['organism']"
    ]
  }
}


{
  "_ID": 121,
  "example": {
    "sentence": "the embryonic cell is a cell of the embryo . <EOS>",
    "target": "embryonic cell := cell of the embryo <EOS>",
    "prediction": "embryonic cell := cell of embryo embryo ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4365, 3311, 296, 1532, 3311, 2995, 1496, 2020, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 26, 27, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 27, 27, 5, 0]"
  },
  "accuracy": 0.778,
  "tokens_OK": 7,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['embryo'] -> ['the']",
      "delete    PRED[7:8] -> TAR[6:6] ['^'] -> []"
    ]
  }
}


{
  "_ID": 138,
  "example": {
    "sentence": "a bicycle race is something that <UNK>@6 disrupt traffic . <EOS>",
    "target": "bicycle race := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "bicycle race := ! E disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5107, 839, 296, 1307, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 0.818,
  "tokens_OK": 9,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 149,
  "example": {
    "sentence": "a race meeting is something that <UNK>@6 disrupt traffic . <EOS>",
    "target": "race meeting := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "race meeting := ! E disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 839, 1370, 296, 1307, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 0.818,
  "tokens_OK": 9,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 155,
  "example": {
    "sentence": "a damaged bridge may cause traffic disruption . <EOS>",
    "target": "damaged bridge := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "damaged bridge := ! E cause . ( traffic disruption ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 313, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 23, 16, 1, 24, 25, 2, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 23, 16, 1, 24, 25, 2, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 10,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 164,
  "example": {
    "sentence": "a damaged gantry may cause traffic disruption . <EOS>",
    "target": "damaged gantry := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "damaged gantry := ! E cause . ( traffic disruption ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 3448, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 23, 16, 1, 24, 25, 2, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 23, 16, 1, 24, 25, 2, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 10,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 167,
  "example": {
    "sentence": "<UNK>@0 action is the exercise of a right . <EOS>",
    "target": "action := exercise of right <EOS>",
    "prediction": "<UNK>@0 action := exercise of a <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 1816, 296, 1496, 2881, 2995, 1532, 383, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 0]"
  },
  "accuracy": 0.143,
  "tokens_OK": 1,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[5:6] -> TAR[4:5] ['a'] -> ['right']"
    ]
  }
}


{
  "_ID": 168,
  "example": {
    "sentence": "hail are <UNK>@2 ice pellet or frozen rain . <EOS>",
    "target": "hail := <UNK>@2 ice pellet or frozen rain <EOS>",
    "prediction": "hail := <UNK>@2 ice pellet U rain rain <EOS>"
  },
  "dump": {
    "sentence_idx": "[4414, 3728, 1, 5244, 700, 1048, 1614, 1317, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 25, 26, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 6, 26, 26, 0]"
  },
  "accuracy": 0.778,
  "tokens_OK": 7,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['U'] -> ['or']",
      "replace   PRED[6:7] -> TAR[6:7] ['rain'] -> ['frozen']"
    ]
  }
}


{
  "_ID": 171,
  "example": {
    "sentence": "a damaged flyover may cause traffic disruption . <EOS>",
    "target": "damaged flyover := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "damaged flyover := ! E cause . ( traffic disruption ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 2868, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 23, 16, 1, 24, 25, 2, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 23, 16, 1, 24, 25, 2, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 10,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 183,
  "example": {
    "sentence": "every employee use a desk . <EOS>",
    "target": "employee := E use . ( desk ) <EOS>",
    "prediction": "employee use := E desk . ( desk ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3976, 4174, 1532, 27, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 16, 1, 23, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 23, 16, 1, 23, 2, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 2,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['use'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['desk'] -> ['use']"
    ]
  }
}


{
  "_ID": 185,
  "example": {
    "sentence": "a ski resort is a <UNK>@5 hill or cross-country ski facility . <EOS>",
    "target": "ski resort := <UNK>@5 hill ski facility U cross-country ski facility <EOS>",
    "prediction": "ski resort := <UNK>@5 hill U cross-country ski facility <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2011, 658, 296, 1532, 1, 3609, 1048, 1286, 2011, 3516, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 28, 29, 6, 27, 28, 29, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 6, 27, 28, 29, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['ski']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['facility']"
    ]
  }
}


{
  "_ID": 189,
  "example": {
    "sentence": "a top manager is a manager that lead more than NUM team . <EOS>",
    "target": "top manager := manager ^ >= NUM lead . ( team ) <EOS>",
    "prediction": "top manager := manager ^ >= NUM lead team . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3281, 5346, 296, 1532, 5346, 1465, 554, 4582, 668, 2, 2554, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 16, 1, 30, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.643,
  "tokens_OK": 9,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['team'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] ['T'] -> ['team']"
    ]
  }
}


{
  "_ID": 192,
  "example": {
    "sentence": "a damaged viaduct may cause traffic disruption . <EOS>",
    "target": "damaged viaduct := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "damaged viaduct := ! E cause . ( traffic disruption ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 1556, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 23, 16, 1, 24, 25, 2, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 23, 16, 1, 24, 25, 2, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 10,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 195,
  "example": {
    "sentence": "a motor show is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "motor show := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "motor := <UNK>@4 event ^ >= 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1867, 1588, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.846,
  "tokens_OK": 11,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['show']",
      "replace   PRED[2:3] -> TAR[2:3] ['<UNK>@4'] -> [':=']"
    ]
  }
}


{
  "_ID": 203,
  "example": {
    "sentence": "a dichotomous variable specification is a variable that <UNK>@8 NUM category . <EOS>",
    "target": "dichotomous variable specification := variable ^ = NUM <UNK>@8 category . ( T ) <EOS>",
    "prediction": "dichotomous variable specification := variable ^ = NUM <UNK>@8 category ( category ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4292, 33, 2632, 296, 1532, 33, 1465, 1, 2, 2822, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 8, 28, 27, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 8, 28, 27, 29, 1, 29, 2, 0, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['.']",
      "replace   PRED[11:12] -> TAR[12:13] ['category'] -> ['T']"
    ]
  }
}


{
  "_ID": 207,
  "example": {
    "sentence": "every project report <UNK>@3 at least NUM and at most NUM stakeholder . <EOS>",
    "target": "project := ( >= NUM && <= NUM ) report <UNK>@3 . ( stakeholder ) <EOS>",
    "prediction": "project report := ( >= NUM && <= NUM ) <UNK>@3 . ( stakeholder ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3722, 2491, 1, 2305, 4025, 2, 2258, 2305, 2880, 2, 4936, 1710, 0]",
    "target_idx": "[20, 7, 1, 12, 25, 3, 10, 29, 2, 21, 22, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 1, 12, 25, 3, 10, 29, 2, 22, 16, 1, 30, 2, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['report'] -> []",
      "insert    PRED[9:9] -> TAR[9:10] [] -> ['report']"
    ]
  }
}


{
  "_ID": 212,
  "example": {
    "sentence": "side project are a <UNK>@4 of project . <EOS>",
    "target": "side project := project <EOS>",
    "prediction": "side project := <UNK>@4 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[1844, 3722, 3728, 1532, 1, 2995, 3722, 1710, 0]",
    "target_idx": "[19, 20, 7, 25, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['<UNK>@4'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['of'] -> ['project']"
    ]
  }
}


{
  "_ID": 213,
  "example": {
    "sentence": "every employee report <UNK>@3 at least NUM manager . <EOS>",
    "target": "employee := >= NUM report <UNK>@3 . ( manager ) <EOS>",
    "prediction": "employee report := >= NUM <UNK>@3 . ( manager ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3976, 2491, 1, 2305, 4025, 2, 5346, 1710, 0]",
    "target_idx": "[20, 7, 12, 25, 21, 22, 16, 1, 26, 2, 0]",
    "prediction_idx": "[20, 21, 7, 12, 25, 22, 16, 1, 26, 2, 0]"
  },
  "accuracy": 0.636,
  "tokens_OK": 7,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['report'] -> []",
      "insert    PRED[4:4] -> TAR[4:5] [] -> ['report']"
    ]
  }
}


{
  "_ID": 216,
  "example": {
    "sentence": "a carbon atom is also a atom . <EOS>",
    "target": "carbon atom := atom <EOS>",
    "prediction": "carbon := atom ^ atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3871, 2223, 296, 5114, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 25, 0, 0]",
    "prediction_idx": "[20, 7, 25, 5, 25, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 2,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['^'] -> [':=']"
    ]
  }
}


{
  "_ID": 217,
  "example": {
    "sentence": "a team is a group of employee that report <UNK>@9 a manager . <EOS>",
    "target": "team := group of employee ^ E report <UNK>@9 . ( manager ) <EOS>",
    "prediction": "team := group of employee ^ E report . ( <UNK>@9 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 296, 1532, 5034, 2995, 3976, 1465, 2491, 1, 1532, 5346, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 5, 13, 27, 28, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 5, 13, 27, 16, 1, 28, 2, 0, 0]"
  },
  "accuracy": 0.643,
  "tokens_OK": 9,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['<UNK>@9']",
      "replace   PRED[10:11] -> TAR[11:12] ['<UNK>@9'] -> ['manager']"
    ]
  }
}


{
  "_ID": 241,
  "example": {
    "sentence": "phosphorus atom <UNK>@2 NUM proton . <EOS>",
    "target": "phosphorus atom = NUM <UNK>@2 proton . ( T ) <EOS>",
    "prediction": "phosphorus atom = NUM <UNK>@2 . ( proton ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1811, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 8, 22, 21, 16, 1, 23, 2, 0, 0]"
  },
  "accuracy": 0.545,
  "tokens_OK": 6,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['proton']",
      "replace   PRED[7:8] -> TAR[8:9] ['proton'] -> ['T']"
    ]
  }
}


{
  "_ID": 257,
  "example": {
    "sentence": "a team pursue <UNK>@3 goal . <EOS>",
    "target": "team := E pursue . ( goal ) <EOS>",
    "prediction": "team pursue := E goal . ( goal ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 3289, 1, 2249, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 16, 1, 23, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 23, 16, 1, 23, 2, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 2,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['pursue'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['goal'] -> ['pursue']"
    ]
  }
}


{
  "_ID": 262,
  "example": {
    "sentence": "carnivor are a <UNK>@3 of animal . <EOS>",
    "target": "carnivor := animal <EOS>",
    "prediction": "carnivor := <UNK>@3 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[634, 3728, 1532, 1, 2995, 5233, 1710, 0]",
    "target_idx": "[19, 7, 24, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 3,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['of'] -> ['animal']"
    ]
  }
}


{
  "_ID": 275,
  "example": {
    "sentence": "lion are mammal that <UNK>@4 a long hair . <EOS>",
    "target": "lion := mammal ^ <UNK>@4 long hair . ( T ) <EOS>",
    "prediction": "lion := mammal ^ E long hair . ( hair ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 1156, 1465, 1, 1532, 1584, 619, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 23, 25, 26, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 25, 26, 16, 1, 26, 2, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 10,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['<UNK>@4']",
      "replace   PRED[9:10] -> TAR[9:10] ['hair'] -> ['T']"
    ]
  }
}


{
  "_ID": 284,
  "example": {
    "sentence": "lion are a <UNK>@3 of carnivor . <EOS>",
    "target": "lion := carnivor <EOS>",
    "prediction": "lion := <UNK>@3 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 1532, 1, 2995, 634, 1710, 0]",
    "target_idx": "[19, 7, 24, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 3,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['of'] -> ['carnivor']"
    ]
  }
}


{
  "_ID": 307,
  "example": {
    "sentence": "all elephant are also pachyderm that <UNK>@6 exactly NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM <UNK>@6 large ear . ( T ) <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM <UNK>@6 large . ( T ear ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1163, 3728, 5114, 3371, 1465, 1, 4082, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 27, 25, 28, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 27, 25, 28, 16, 1, 17, 29, 2, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 10,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['ear']",
      "delete    PRED[11:12] -> TAR[11:11] ['ear'] -> []"
    ]
  }
}


{
  "_ID": 309,
  "example": {
    "sentence": "elephant are mammal that <UNK>@4 big trunk . <EOS>",
    "target": "elephant := mammal ^ <UNK>@4 big trunk . ( T ) <EOS>",
    "prediction": "elephant := mammal ^ = big trunk trunk ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1163, 3728, 1156, 1465, 1, 1999, 1721, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 23, 24, 25, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 8, 24, 25, 25, 1, 17, 2, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 10,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['='] -> ['<UNK>@4']",
      "replace   PRED[7:8] -> TAR[7:8] ['trunk'] -> ['.']"
    ]
  }
}


{
  "_ID": 310,
  "example": {
    "sentence": "elephant are pachyderm that <UNK>@4 exactly NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM <UNK>@4 large ear . ( T ) <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM <UNK>@4 large . ( T ear ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1163, 3728, 3371, 1465, 1, 4082, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 8, 25, 23, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 8, 25, 23, 26, 16, 1, 17, 27, 2, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 10,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['ear']",
      "delete    PRED[11:12] -> TAR[11:11] ['ear'] -> []"
    ]
  }
}


{
  "_ID": 312,
  "example": {
    "sentence": "all elephant are pachyderm that <UNK>@5 NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM <UNK>@5 large ear . ( T ) <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM <UNK>@5 large . ( ear ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1163, 3728, 3371, 1465, 1, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 8, 25, 24, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 8, 25, 24, 26, 16, 1, 27, 2, 0, 0]"
  },
  "accuracy": 0.643,
  "tokens_OK": 9,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['ear']",
      "replace   PRED[10:11] -> TAR[11:12] ['ear'] -> ['T']"
    ]
  }
}


{
  "_ID": 319,
  "example": {
    "sentence": "every elephant is also a pachyderm that <UNK>@7 NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM <UNK>@7 large ear . ( T ) <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM <UNK>@7 large . ( ear ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1163, 296, 5114, 1532, 3371, 1465, 1, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 8, 27, 26, 28, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 8, 27, 26, 28, 16, 1, 29, 2, 0, 0]"
  },
  "accuracy": 0.643,
  "tokens_OK": 9,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['ear']",
      "replace   PRED[10:11] -> TAR[11:12] ['ear'] -> ['T']"
    ]
  }
}


{
  "_ID": 326,
  "example": {
    "sentence": "rhinoceros are a <UNK>@3 of pachyderm . <EOS>",
    "target": "rhinoceros := pachyderm <EOS>",
    "prediction": "rhinoceros := <UNK>@3 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[3985, 3728, 1532, 1, 2995, 3371, 1710, 0]",
    "target_idx": "[19, 7, 24, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 3,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['of'] -> ['pachyderm']"
    ]
  }
}


{
  "_ID": 330,
  "example": {
    "sentence": "cat are also mammal that chase the mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) <EOS>",
    "prediction": "cat := E chase . ( mouse ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 5114, 1156, 1465, 2780, 1496, 4668, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 7, 13, 24, 16, 1, 26, 2, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['mammal']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['^']"
    ]
  }
}


{
  "_ID": 336,
  "example": {
    "sentence": "a mouse is a animal that is <UNK>@7 only <UNK>@9 cat . <EOS>",
    "target": "mouse := animal ^ A <UNK>@7 <UNK>@9 . ( cat ) <EOS>",
    "prediction": "mouse := animal ^ A <UNK>@7 . ( <UNK>@9 cat ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4668, 296, 1532, 5233, 1465, 296, 1, 3546, 1, 362, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 14, 26, 28, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 14, 26, 16, 1, 28, 29, 2, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 9,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['<UNK>@9']",
      "delete    PRED[8:9] -> TAR[8:8] ['<UNK>@9'] -> []"
    ]
  }
}


{
  "_ID": 339,
  "example": {
    "sentence": "mouse are also animal that are <UNK>@6 only <UNK>@8 cat . <EOS>",
    "target": "mouse := animal ^ A <UNK>@6 <UNK>@8 . ( cat ) <EOS>",
    "prediction": "mouse := animal ^ A <UNK>@6 cat . ( <UNK>@8 cat ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4668, 3728, 5114, 5233, 1465, 3728, 1, 3546, 1, 362, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 14, 25, 27, 16, 1, 28, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 5, 14, 25, 28, 16, 1, 27, 28, 2, 0]"
  },
  "accuracy": 0.692,
  "tokens_OK": 9,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['cat'] -> ['<UNK>@8']",
      "delete    PRED[9:10] -> TAR[8:8] ['<UNK>@8'] -> []"
    ]
  }
}


{
  "_ID": 343,
  "example": {
    "sentence": "every mouse is also a animal that is <UNK>@8 only <UNK>@10 cat . <EOS>",
    "target": "mouse := animal ^ A <UNK>@8 <UNK>@10 . ( cat ) <EOS>",
    "prediction": "mouse := animal ^ A <UNK>@8 . ( <UNK>@10 cat ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4668, 296, 5114, 1532, 5233, 1465, 296, 1, 3546, 1, 362, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 14, 27, 29, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 14, 27, 16, 1, 29, 30, 2, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 9,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['<UNK>@10']",
      "delete    PRED[8:9] -> TAR[8:8] ['<UNK>@10'] -> []"
    ]
  }
}


{
  "_ID": 348,
  "example": {
    "sentence": "all mouse are also animal that are <UNK>@7 only <UNK>@9 the cat . <EOS>",
    "target": "mouse := animal ^ A <UNK>@7 <UNK>@9 . ( cat ) <EOS>",
    "prediction": "mouse := animal ^ A <UNK>@7 . ( <UNK>@9 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4668, 3728, 5114, 5233, 1465, 3728, 1, 3546, 1, 1496, 362, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 14, 26, 28, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 14, 26, 16, 1, 28, 2, 0, 0]"
  },
  "accuracy": 0.583,
  "tokens_OK": 7,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['<UNK>@9']",
      "replace   PRED[8:9] -> TAR[9:10] ['<UNK>@9'] -> ['cat']"
    ]
  }
}


{
  "_ID": 353,
  "example": {
    "sentence": "every mouse is also a animal that is <UNK>@8 only <UNK>@10 the cat . <EOS>",
    "target": "mouse := animal ^ A <UNK>@8 <UNK>@10 . ( cat ) <EOS>",
    "prediction": "mouse := animal ^ A <UNK>@8 . ( <UNK>@10 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4668, 296, 5114, 1532, 5233, 1465, 296, 1, 3546, 1, 1496, 362, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 14, 27, 29, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 14, 27, 16, 1, 29, 2, 0, 0]"
  },
  "accuracy": 0.583,
  "tokens_OK": 7,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['<UNK>@10']",
      "replace   PRED[8:9] -> TAR[9:10] ['<UNK>@10'] -> ['cat']"
    ]
  }
}


{
  "_ID": 357,
  "example": {
    "sentence": "bycicle are mean of transportation that are <UNK>@7 only <UNK>@9 human power . <EOS>",
    "target": "bycicle := mean of transportation ^ A <UNK>@7 <UNK>@9 . ( human power ) <EOS>",
    "prediction": "bycicle := mean of transportation ^ A <UNK>@7 . ( <UNK>@9 human power ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3326, 3728, 3357, 2995, 1839, 1465, 3728, 1, 3546, 1, 3766, 4964, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 5, 14, 26, 28, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 14, 26, 16, 1, 28, 29, 30, 2, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 12,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['<UNK>@9']",
      "delete    PRED[10:11] -> TAR[10:10] ['<UNK>@9'] -> []"
    ]
  }
}


{
  "_ID": 388,
  "example": {
    "sentence": "screwdriver are also tool that handle screw . <EOS>",
    "target": "screwdriver := tool ^ E handle . ( screw ) <EOS>",
    "prediction": "screwdriver := tool ^ E handle screw . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4051, 3728, 5114, 3198, 1465, 179, 2809, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.583,
  "tokens_OK": 7,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['screw'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['T'] -> ['screw']"
    ]
  }
}


{
  "_ID": 392,
  "example": {
    "sentence": "all flat blade screwdriver are screwdriver that <UNK>@7 flat blade . <EOS>",
    "target": "flat blade screwdriver := screwdriver ^ E <UNK>@7 flat blade . ( T ) <EOS>",
    "prediction": "flat blade screwdriver := screwdriver ^ E <UNK>@7 flat . ( flat ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4041, 4716, 4051, 3728, 4051, 1465, 1, 4041, 4716, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 24, 5, 13, 26, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 24, 5, 13, 26, 27, 16, 1, 27, 2, 0, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 10,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['blade']",
      "replace   PRED[11:12] -> TAR[12:13] ['flat'] -> ['T']"
    ]
  }
}


{
  "_ID": 406,
  "example": {
    "sentence": "dog are a <UNK>@3 of animal . <EOS>",
    "target": "dog := animal <EOS>",
    "prediction": "dog := <UNK>@3 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[777, 3728, 1532, 1, 2995, 5233, 1710, 0]",
    "target_idx": "[19, 7, 24, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 3,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['of'] -> ['animal']"
    ]
  }
}


{
  "_ID": 416,
  "example": {
    "sentence": "ray rake are tool that are used only <UNK>@8 expert farmer . <EOS>",
    "target": "ray rake := tool ^ A used <UNK>@8 . ( expert farmer ) <EOS>",
    "prediction": "ray rake := tool ^ A used expert . ( <UNK>@8 expert farmer ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3098, 4741, 3728, 3198, 1465, 3728, 3942, 3546, 1, 4481, 753, 1710, 0]",
    "target_idx": "[19, 20, 7, 22, 5, 14, 25, 27, 16, 1, 28, 29, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 22, 5, 14, 25, 28, 16, 1, 27, 28, 29, 2, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 10,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[7:8] -> TAR[7:8] ['expert'] -> ['<UNK>@8']",
      "delete    PRED[10:11] -> TAR[9:9] ['<UNK>@8'] -> []"
    ]
  }
}


{
  "_ID": 13,
  "example": {
    "sentence": "a meaty pizza is any pizza that <UNK>@7 at least NUM topping of meat . <EOS>",
    "target": "meaty pizza := pizza ^ >= NUM <UNK>@7 topping . ( meat ) <EOS>",
    "prediction": "meaty pizza := pizza ^ >= NUM <UNK>@7 topping . ( T of meat <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3850, 2430, 296, 2133, 2430, 1465, 1, 2305, 4025, 2, 1154, 2995, 2605, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 17, 31, 32, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 12,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[11:12] -> TAR[10:10] ['T'] -> []",
      "replace   PRED[12:13] -> TAR[11:12] ['of'] -> ['meat']",
      "replace   PRED[13:14] -> TAR[12:13] ['meat'] -> [')']"
    ]
  }
}


{
  "_ID": 25,
  "example": {
    "sentence": "giraffe are herbivore , and <UNK>@5 eat only leaf . <EOS>",
    "target": "giraffe := herbivore ^ A eat . ( leaf ) <EOS>",
    "prediction": "giraffe := herbivore ^ <UNK>@5 <UNK>@5 eat ( ( leaf ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 4058, 2317, 2258, 1, 2867, 3546, 4585, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 25, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 24, 24, 25, 1, 1, 27, 2, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@5'] -> []",
      "replace   PRED[5:6] -> TAR[4:5] ['<UNK>@5'] -> ['A']",
      "replace   PRED[7:8] -> TAR[6:7] ['('] -> ['.']"
    ]
  }
}


{
  "_ID": 35,
  "example": {
    "sentence": "datum are fact that result <UNK>@5 measurement or observation . <EOS>",
    "target": "datum := fact ^ E result <UNK>@5 . ( measurement U observation ) <EOS>",
    "prediction": "datum := fact ^ E result <UNK>@5 . ( measurement ) ^ U ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[5275, 3728, 286, 1465, 1120, 1, 2824, 1048, 3794, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 25, 6, 27, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 25, 2, 5, 6, 2, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[10:11] -> TAR[9:9] [')'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] ['^'] -> ['U']",
      "replace   PRED[12:13] -> TAR[11:12] ['U'] -> ['observation']"
    ]
  }
}


{
  "_ID": 38,
  "example": {
    "sentence": "a male organism is a gonochoristic organism that <UNK>@8 produce male gamete . <EOS>",
    "target": "male organism := gonochoristic organism ^ >= 0 produce . ( male gamete ) <EOS>",
    "prediction": "male organism := gonochoristic organism ^ E <UNK>@8 . ( male gamete ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4420, 4122, 296, 1532, 567, 4122, 1465, 1, 4253, 4420, 3751, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 12, 18, 28, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 30, 2, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['>=']",
      "replace   PRED[6:7] -> TAR[7:8] ['E'] -> ['0']",
      "replace   PRED[7:8] -> TAR[8:9] ['<UNK>@8'] -> ['produce']"
    ]
  }
}


{
  "_ID": 85,
  "example": {
    "sentence": "the odontocyte is a skeletogenic cell that is <UNK>@8 <UNK>@9 odontogenic papilla . <EOS>",
    "target": "odontocyte := skeletogenic cell ^ E <UNK>@8 <UNK>@9 . ( odontogenic papilla ) <EOS>",
    "prediction": "odontocyte := skeletogenic cell ^ <UNK>@8 <UNK>@8 odontogenic . ( papilla ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2626, 296, 1532, 2254, 3311, 1465, 296, 1, 1, 3698, 5055, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 27, 27, 29, 16, 1, 30, 2, 0, 0]"
  },
  "accuracy": 0.643,
  "tokens_OK": 9,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['<UNK>@8'] -> ['E']",
      "replace   PRED[7:8] -> TAR[7:8] ['odontogenic'] -> ['<UNK>@9']",
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['odontogenic']"
    ]
  }
}


{
  "_ID": 97,
  "example": {
    "sentence": "intramembranous ossification is a direct ossification that occur <UNK>@8 mesenchyme or a accumulation of <UNK>@14 unspecialized cell . <EOS>",
    "target": "intramembranous ossification := direct ossification ^ E occur <UNK>@8 . ( mesenchyme U accumulation of <UNK>@14 unspecialized cell ) <EOS>",
    "prediction": "intramembranous ossification := direct ossification ^ E occur . ( <UNK>@8 mesenchyme U accumulation of <UNK>@14 unspecialized ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3269, 664, 296, 1532, 5240, 664, 1465, 542, 1, 3513, 1048, 1532, 2604, 2995, 1, 2329, 3311, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 6, 31, 32, 33, 34, 35, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 6, 31, 32, 33, 34, 2, 0, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 15,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['<UNK>@8']",
      "delete    PRED[10:11] -> TAR[10:10] ['<UNK>@8'] -> []",
      "insert    PRED[16:16] -> TAR[17:18] [] -> ['cell']"
    ]
  }
}


{
  "_ID": 118,
  "example": {
    "sentence": "the median fin is <UNK>@4 unpaired fin that is located in the sagittal plane of the organism . <EOS>",
    "target": "median fin := unpaired fin ^ E located in . ( sagittal plane of organism ) <EOS>",
    "prediction": "median fin := <UNK>@4 unpaired fin ^ E located . . ( sagittal plane of ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3485, 613, 296, 1, 4769, 613, 1465, 296, 3886, 3574, 1496, 5070, 710, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 32, 33, 35, 2, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 25, 5, 13, 28, 16, 16, 1, 31, 32, 33, 2, 0]"
  },
  "accuracy": 0.353,
  "tokens_OK": 6,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['<UNK>@4'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['.'] -> ['in']",
      "insert    PRED[14:14] -> TAR[14:15] [] -> ['organism']"
    ]
  }
}


{
  "_ID": 131,
  "example": {
    "sentence": "the bone element is a skeletal element that is <UNK>@9 of bone tissue . <EOS>",
    "target": "bone element := skeletal element ^ E <UNK>@9 of . ( bone tissue ) <EOS>",
    "prediction": "bone element := skeletal element ^ E <UNK>@9 of bone ( tissue bone tissue <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 432, 1791, 296, 1532, 3051, 1791, 1465, 296, 1, 2995, 432, 3846, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 30, 1, 31, 30, 31, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[9:10] -> TAR[9:10] ['bone'] -> ['.']",
      "delete    PRED[11:12] -> TAR[10:10] ['tissue'] -> []",
      "insert    PRED[13:13] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 158,
  "example": {
    "sentence": "rockfalls may obstruct transport infrastructure . <EOS>",
    "target": "rockfalls := >= 0 obstruct . ( transport infrastructure ) <EOS>",
    "prediction": "rockfalls may := E obstruct . ( transport infrastructure ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[5056, 1126, 2754, 2910, 3351, 1710, 0]",
    "target_idx": "[19, 7, 12, 18, 21, 16, 1, 22, 23, 2, 0]",
    "prediction_idx": "[19, 20, 7, 13, 21, 16, 1, 22, 23, 2, 0]"
  },
  "accuracy": 0.727,
  "tokens_OK": 8,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] ['may'] -> [':=']",
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['>=']",
      "replace   PRED[3:4] -> TAR[3:4] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 159,
  "example": {
    "sentence": "a damaged crash barrier may cause traffic disruption . <EOS>",
    "target": "damaged crash := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "damaged crash barrier := ! E cause . ( traffic disruption ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 485, 1416, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 24, 16, 1, 25, 26, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 15, 13, 24, 16, 1, 25, 26, 2, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['barrier'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[5:6] -> TAR[4:5] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 166,
  "example": {
    "sentence": "<UNK>@0 adaptor is a user that produce <UNK>@7 adaptation . <EOS>",
    "target": "adaptor := user ^ E produce . ( adaptation ) <EOS>",
    "prediction": "<UNK>@0 adaptor := user ^ E produce . ( <UNK>@7 adaptation <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 3715, 296, 1532, 5338, 1465, 4253, 1, 2447, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 13, 25, 16, 1, 26, 27, 0]"
  },
  "accuracy": 0.083,
  "tokens_OK": 1,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['<UNK>@7'] -> ['adaptation']",
      "replace   PRED[10:11] -> TAR[9:10] ['adaptation'] -> [')']"
    ]
  }
}


{
  "_ID": 175,
  "example": {
    "sentence": "shower are light rain or intermittent rain . <EOS>",
    "target": "shower := light rain U intermittent rain <EOS>",
    "prediction": "shower := light rain ^ = rain rain <EOS>"
  },
  "dump": {
    "sentence_idx": "[3364, 3728, 1459, 1317, 1048, 2135, 1317, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 6, 24, 25, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 8, 25, 25, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 6,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []",
      "replace   PRED[5:6] -> TAR[4:5] ['='] -> ['U']",
      "replace   PRED[6:7] -> TAR[5:6] ['rain'] -> ['intermittent']"
    ]
  }
}


{
  "_ID": 182,
  "example": {
    "sentence": "a ski lift station is the start point of a ski lift . <EOS>",
    "target": "ski lift station := start point of ski lift <EOS>",
    "prediction": "ski lift := start point of a ski lift of <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2011, 156, 3287, 296, 1496, 4589, 4106, 2995, 1532, 2011, 156, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 29, 30, 0, 0]",
    "prediction_idx": "[20, 21, 7, 25, 26, 27, 28, 29, 30, 27, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['station']",
      "delete    PRED[6:7] -> TAR[6:6] ['a'] -> []",
      "delete    PRED[9:10] -> TAR[8:8] ['of'] -> []"
    ]
  }
}


{
  "_ID": 188,
  "example": {
    "sentence": "a damaged tunnel may cause traffic disruption . <EOS>",
    "target": "damaged tunnel := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "damaged tunnel := ! E may . ( traffic disruption ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 902, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 23, 16, 1, 24, 25, 2, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 22, 16, 1, 24, 25, 2, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 9,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']",
      "replace   PRED[5:6] -> TAR[5:6] ['may'] -> ['cause']"
    ]
  }
}


{
  "_ID": 193,
  "example": {
    "sentence": "every team develop at least NUM leading project . <EOS>",
    "target": "team := >= NUM develop . ( leading project ) <EOS>",
    "prediction": "team develop := > NUM leading . ( leading project ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2554, 3102, 2305, 4025, 2, 4182, 3722, 1710, 0]",
    "target_idx": "[20, 7, 12, 24, 21, 16, 1, 25, 26, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 11, 24, 25, 16, 1, 25, 26, 2, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['develop'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['>'] -> ['>=']",
      "replace   PRED[5:6] -> TAR[4:5] ['leading'] -> ['develop']"
    ]
  }
}


{
  "_ID": 215,
  "example": {
    "sentence": "the ununpentium atom is a atom . <EOS>",
    "target": "ununpentium atom := atom <EOS>",
    "prediction": "ununpentium := atom atom ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3788, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0, 0]",
    "prediction_idx": "[20, 7, 24, 21, 5, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 2,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['atom'] -> [':=']",
      "replace   PRED[4:5] -> TAR[3:4] ['^'] -> ['atom']"
    ]
  }
}


{
  "_ID": 220,
  "example": {
    "sentence": "<UNK>@0 employee is a person that work <UNK>@7 a company . <EOS>",
    "target": "employee := person ^ E work <UNK>@7 . ( company ) <EOS>",
    "prediction": "<UNK>@0 employee := person ^ E work . ( <UNK>@7 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 3976, 296, 1532, 2848, 1465, 3275, 1, 1532, 4568, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 28, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "insert    PRED[6:6] -> TAR[6:7] [] -> ['<UNK>@7']",
      "replace   PRED[9:10] -> TAR[9:10] ['<UNK>@7'] -> ['company']"
    ]
  }
}


{
  "_ID": 223,
  "example": {
    "sentence": "the thallium atom is also a atom . <EOS>",
    "target": "thallium atom := atom <EOS>",
    "prediction": "thallium := atom atom ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1124, 2223, 296, 5114, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 25, 0, 0]",
    "prediction_idx": "[20, 7, 25, 21, 5, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 2,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['atom'] -> [':=']",
      "replace   PRED[4:5] -> TAR[3:4] ['^'] -> ['atom']"
    ]
  }
}


{
  "_ID": 229,
  "example": {
    "sentence": "the zirconium atom is a atom . <EOS>",
    "target": "zirconium atom := atom <EOS>",
    "prediction": "zirconium := atom atom ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3019, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0, 0]",
    "prediction_idx": "[20, 7, 24, 21, 5, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 2,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['atom'] -> [':=']",
      "replace   PRED[4:5] -> TAR[3:4] ['^'] -> ['atom']"
    ]
  }
}


{
  "_ID": 230,
  "example": {
    "sentence": "nickel atom is a atom . <EOS>",
    "target": "nickel atom := atom <EOS>",
    "prediction": "nickel := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[703, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 0, 0]",
    "prediction_idx": "[19, 7, 23, 20, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 2,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['atom'] -> [':=']",
      "replace   PRED[4:5] -> TAR[3:4] ['.'] -> ['atom']"
    ]
  }
}


{
  "_ID": 235,
  "example": {
    "sentence": "gallium atom <UNK>@2 NUM proton . <EOS>",
    "target": "gallium atom = NUM <UNK>@2 proton . ( T ) <EOS>",
    "prediction": "gallium := = NUM <UNK>@2 . ( proton ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4717, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 8, 22, 21, 16, 1, 23, 2, 0, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']",
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['proton']",
      "replace   PRED[7:8] -> TAR[8:9] ['proton'] -> ['T']"
    ]
  }
}


{
  "_ID": 240,
  "example": {
    "sentence": "radium atom <UNK>@2 NUM proton . <EOS>",
    "target": "radium atom = NUM <UNK>@2 proton . ( T ) <EOS>",
    "prediction": "radium atom := = NUM <UNK>@2 . ( . ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4173, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 7, 8, 22, 21, 16, 1, 24, 2, 0]"
  },
  "accuracy": 0.545,
  "tokens_OK": 6,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "insert    PRED[5:5] -> TAR[5:6] [] -> ['proton']",
      "replace   PRED[8:9] -> TAR[8:9] ['.'] -> ['T']"
    ]
  }
}


{
  "_ID": 250,
  "example": {
    "sentence": "iodine atom <UNK>@2 NUM proton . <EOS>",
    "target": "iodine atom = NUM <UNK>@2 proton . ( T ) <EOS>",
    "prediction": "iodine := = NUM <UNK>@2 . ( proton ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3151, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 8, 22, 21, 16, 1, 23, 2, 0, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']",
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['proton']",
      "replace   PRED[7:8] -> TAR[8:9] ['proton'] -> ['T']"
    ]
  }
}


{
  "_ID": 252,
  "example": {
    "sentence": "molybdenum atom <UNK>@2 NUM proton . <EOS>",
    "target": "molybdenum atom = NUM <UNK>@2 proton . ( T ) <EOS>",
    "prediction": "molybdenum := = NUM <UNK>@2 . ( proton ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[919, 2223, 1, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 8, 22, 21, 16, 1, 23, 2, 0, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['atom']",
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['proton']",
      "replace   PRED[7:8] -> TAR[8:9] ['proton'] -> ['T']"
    ]
  }
}


{
  "_ID": 261,
  "example": {
    "sentence": "carbon atom are a <UNK>@4 of atom . <EOS>",
    "target": "carbon atom := atom <EOS>",
    "prediction": "carbon := <UNK>@4 atom atom <EOS>"
  },
  "dump": {
    "sentence_idx": "[3871, 2223, 3728, 1532, 1, 2995, 2223, 1710, 0]",
    "target_idx": "[19, 20, 7, 25, 0, 0]",
    "prediction_idx": "[19, 7, 23, 25, 25, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 3,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "replace   PRED[2:3] -> TAR[1:2] ['<UNK>@4'] -> ['atom']",
      "replace   PRED[3:4] -> TAR[2:3] ['atom'] -> [':=']"
    ]
  }
}


{
  "_ID": 286,
  "example": {
    "sentence": "the male lion <UNK>@3 more than NUM female mate . <EOS>",
    "target": "male lion := >= NUM <UNK>@3 female mate . ( T ) <EOS>",
    "prediction": "male lion <UNK>@3 := >= NUM more mate . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4420, 232, 1, 4582, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 25, 22, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 12, 25, 23, 27, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "insert    PRED[5:5] -> TAR[5:6] [] -> ['<UNK>@3']",
      "replace   PRED[6:7] -> TAR[6:7] ['more'] -> ['female']"
    ]
  }
}


{
  "_ID": 292,
  "example": {
    "sentence": "the strontium atom is a atom . <EOS>",
    "target": "strontium atom := atom <EOS>",
    "prediction": "strontium := atom atom ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3589, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 0, 0]",
    "prediction_idx": "[20, 7, 24, 21, 5, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 2,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['atom'] -> [':=']",
      "replace   PRED[4:5] -> TAR[3:4] ['^'] -> ['atom']"
    ]
  }
}


{
  "_ID": 313,
  "example": {
    "sentence": "a elephant is a pachyderm that live in africa or asia . <EOS>",
    "target": "elephant := pachyderm ^ E live in . ( africa U asia ) <EOS>",
    "prediction": "elephant := pachyderm ^ E live in . ( africa ) ^ U ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1163, 296, 1532, 3371, 1465, 593, 3574, 457, 1048, 5198, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 6, 29, 2, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 2, 5, 6, 2, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[10:11] -> TAR[9:9] [')'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] ['^'] -> ['U']",
      "replace   PRED[12:13] -> TAR[11:12] ['U'] -> ['asia']"
    ]
  }
}


{
  "_ID": 327,
  "example": {
    "sentence": "cat are a <UNK>@3 of mammal that chase a mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) <EOS>",
    "prediction": "cat := <UNK>@3 mammal mammal ^ E chase . ( mouse <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 1532, 1, 2995, 1156, 1465, 2780, 1532, 4668, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 13, 26, 16, 1, 28, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 24, 24, 5, 13, 26, 16, 1, 28, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['mammal'] -> []",
      "insert    PRED[10:10] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 335,
  "example": {
    "sentence": "cat are a <UNK>@3 of mammal that chase the mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) <EOS>",
    "prediction": "cat := <UNK>@3 mammal mammal ^ E chase . ( mouse <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 1532, 1, 2995, 1156, 1465, 2780, 1496, 4668, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 13, 26, 16, 1, 28, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 24, 24, 5, 13, 26, 16, 1, 28, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['mammal'] -> []",
      "insert    PRED[10:10] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 362,
  "example": {
    "sentence": "all bycicle are mean of transportation that are <UNK>@8 only <UNK>@10 the human power . <EOS>",
    "target": "bycicle := mean of transportation ^ A <UNK>@8 <UNK>@10 . ( human power ) <EOS>",
    "prediction": "bycicle := mean of transportation ^ A <UNK>@8 . ( <UNK>@10 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3326, 3728, 3357, 2995, 1839, 1465, 3728, 1, 3546, 1, 1496, 3766, 4964, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 5, 14, 27, 29, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 5, 14, 27, 16, 1, 29, 2, 0, 0, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 9,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['<UNK>@10']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['human']",
      "replace   PRED[10:11] -> TAR[12:13] ['<UNK>@10'] -> ['power']"
    ]
  }
}


{
  "_ID": 369,
  "example": {
    "sentence": "a bycicle is a mean of transportation that is <UNK>@9 only <UNK>@11 the human power . <EOS>",
    "target": "bycicle := mean of transportation ^ A <UNK>@9 <UNK>@11 . ( human power ) <EOS>",
    "prediction": "bycicle := mean of transportation ^ A <UNK>@9 . ( <UNK>@11 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3326, 296, 1532, 3357, 2995, 1839, 1465, 296, 1, 3546, 1, 1496, 3766, 4964, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 5, 14, 28, 30, 16, 1, 32, 33, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 5, 14, 28, 16, 1, 30, 2, 0, 0, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 9,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['<UNK>@11']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['human']",
      "replace   PRED[10:11] -> TAR[12:13] ['<UNK>@11'] -> ['power']"
    ]
  }
}


{
  "_ID": 379,
  "example": {
    "sentence": "a screwdriver is also a tool that handle screw . <EOS>",
    "target": "screwdriver := tool ^ E handle . ( screw ) <EOS>",
    "prediction": "screwdriver := tool ^ >= handle screw . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4051, 296, 5114, 1532, 3198, 1465, 179, 2809, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[20, 7, 24, 5, 12, 26, 27, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['>='] -> ['E']",
      "delete    PRED[6:7] -> TAR[5:5] ['screw'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['T'] -> ['screw']"
    ]
  }
}


{
  "_ID": 383,
  "example": {
    "sentence": "a flat blade screwdriver is a screwdriver that <UNK>@8 a flat blade . <EOS>",
    "target": "flat blade screwdriver := screwdriver ^ E <UNK>@8 flat blade . ( T ) <EOS>",
    "prediction": "flat blade screwdriver := screwdriver ^ E <UNK>@8 flat . ( flat blade ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4041, 4716, 4051, 296, 1532, 4051, 1465, 1, 1532, 4041, 4716, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 27, 29, 30, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 13, 27, 29, 16, 1, 29, 30, 2, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['blade']",
      "delete    PRED[11:12] -> TAR[11:11] ['flat'] -> []",
      "replace   PRED[12:13] -> TAR[12:13] ['blade'] -> ['T']"
    ]
  }
}


{
  "_ID": 399,
  "example": {
    "sentence": "flat blade screwdriver are also screwdriver that <UNK>@7 a flat blade . <EOS>",
    "target": "flat blade screwdriver := screwdriver ^ E <UNK>@7 flat blade . ( T ) <EOS>",
    "prediction": "flat blade screwdriver := screwdriver ^ E <UNK>@7 flat . ( flat blade ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4041, 4716, 4051, 3728, 5114, 4051, 1465, 1, 1532, 4041, 4716, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 24, 5, 13, 26, 28, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 5, 13, 26, 28, 16, 1, 28, 29, 2, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['blade']",
      "delete    PRED[11:12] -> TAR[11:11] ['flat'] -> []",
      "replace   PRED[12:13] -> TAR[12:13] ['blade'] -> ['T']"
    ]
  }
}


{
  "_ID": 401,
  "example": {
    "sentence": "knife <UNK>@1 a blade . <EOS>",
    "target": "knife := E <UNK>@1 blade . ( T ) <EOS>",
    "prediction": "knife := ! E blade . ( . ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1834, 1, 1532, 4716, 1710, 0]",
    "target_idx": "[19, 7, 13, 20, 22, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 7, 15, 13, 22, 16, 1, 23, 2, 0]"
  },
  "accuracy": 0.7,
  "tokens_OK": 7,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['!'] -> ['E']",
      "replace   PRED[3:4] -> TAR[3:4] ['E'] -> ['<UNK>@1']",
      "replace   PRED[7:8] -> TAR[7:8] ['.'] -> ['T']"
    ]
  }
}


{
  "_ID": 405,
  "example": {
    "sentence": "saw <UNK>@1 cut wood . <EOS>",
    "target": "saw := >= 0 cut . ( wood ) <EOS>",
    "prediction": "saw <UNK>@1 := E cut . ( wood ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[307, 1, 3410, 1213, 1710, 0]",
    "target_idx": "[19, 7, 12, 18, 21, 16, 1, 22, 2, 0]",
    "prediction_idx": "[19, 20, 7, 13, 21, 16, 1, 22, 2, 0]"
  },
  "accuracy": 0.7,
  "tokens_OK": 7,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] ['<UNK>@1'] -> [':=']",
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['>=']",
      "replace   PRED[3:4] -> TAR[3:4] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 14,
  "example": {
    "sentence": "the sensor datum sheet is a object that record property of a sensor . <EOS>",
    "target": "sensor datum sheet := object ^ E record . ( property of sensor ) <EOS>",
    "prediction": "sensor datum sheet := object ^ ! E property . ( of a sensor ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2913, 5275, 1267, 296, 1532, 3093, 1465, 4583, 2664, 2995, 1532, 2913, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 27, 16, 1, 28, 29, 31, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 15, 13, 28, 16, 1, 29, 30, 31, 2, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 8,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['!'] -> []",
      "replace   PRED[8:9] -> TAR[7:8] ['property'] -> ['record']",
      "replace   PRED[11:12] -> TAR[10:11] ['of'] -> ['property']",
      "replace   PRED[12:13] -> TAR[11:12] ['a'] -> ['of']"
    ]
  }
}


{
  "_ID": 17,
  "example": {
    "sentence": "a american hot pizza is a <UNK>@6 of american pizza that <UNK>@11 jalapeno pepper <UNK>@14 <UNK>@15 . <EOS>",
    "target": "american hot pizza := american pizza ^ E <UNK>@11 <UNK>@14 . ( jalapeno pepper ) <EOS>",
    "prediction": "american hot pizza := <UNK>@6 of american pizza ^ E <UNK>@11 . ( jalapeno pepper <UNK>@14 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2872, 2430, 296, 1532, 1, 2995, 3347, 2430, 1465, 1, 1660, 3353, 1, 1, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 27, 28, 5, 13, 30, 33, 16, 1, 31, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 28, 5, 13, 30, 16, 1, 31, 32, 33, 0]"
  },
  "accuracy": 0.294,
  "tokens_OK": 5,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@6'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "insert    PRED[10:10] -> TAR[9:10] [] -> ['<UNK>@14']",
      "replace   PRED[15:16] -> TAR[14:15] ['<UNK>@14'] -> [')']"
    ]
  }
}


{
  "_ID": 18,
  "example": {
    "sentence": "a cell space is a anatomical space that is <UNK>@9 of a cell . <EOS>",
    "target": "cell space := anatomical space ^ E <UNK>@9 of . ( cell ) <EOS>",
    "prediction": "cell space := anatomical space ^ <UNK>@9 of a cell <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3311, 1053, 296, 1532, 2927, 1053, 1465, 296, 1, 2995, 1532, 3311, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 28, 29, 30, 31, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "replace   PRED[8:9] -> TAR[10:11] ['a'] -> ['(']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 42,
  "example": {
    "sentence": "<UNK>@0 endochondral bone is a replacement bone that form <UNK>@9 the cartilage . <EOS>",
    "target": "endochondral bone := replacement bone ^ E form <UNK>@9 . cartilage <EOS>",
    "prediction": "<UNK>@0 endochondral bone := replacement bone ^ E form . ( <UNK>@9 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 3425, 432, 296, 1532, 4747, 432, 1465, 2845, 1, 1496, 1005, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 28, 16, 30, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 0]"
  },
  "accuracy": 0.154,
  "tokens_OK": 2,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['.'] -> ['<UNK>@9']",
      "replace   PRED[10:11] -> TAR[9:10] ['('] -> ['.']",
      "replace   PRED[11:12] -> TAR[10:11] ['<UNK>@9'] -> ['cartilage']"
    ]
  }
}


{
  "_ID": 66,
  "example": {
    "sentence": "the free limb skeleton is a skeletal subdivision that is <UNK>@10 of the limb . <EOS>",
    "target": "free limb skeleton := skeletal subdivision ^ E <UNK>@10 of . ( limb ) <EOS>",
    "prediction": "free limb skeleton := skeletal subdivision ^ E ( of . ( of the limb <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4339, 4294, 4381, 296, 1532, 3051, 5142, 1465, 296, 1, 2995, 1496, 4294, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 29, 30, 16, 1, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 1, 30, 16, 1, 30, 31, 32, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 12,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[8:9] -> TAR[8:9] ['('] -> ['<UNK>@10']",
      "delete    PRED[12:13] -> TAR[11:11] ['of'] -> []",
      "replace   PRED[13:14] -> TAR[12:13] ['the'] -> ['limb']",
      "replace   PRED[14:15] -> TAR[13:14] ['limb'] -> [')']"
    ]
  }
}


{
  "_ID": 70,
  "example": {
    "sentence": "vasodentine is the dentine tissue that lack dentine tubule and that is <UNK>@12 <UNK>@13 blood capillary . <EOS>",
    "target": "vasodentine := dentine tissue ^ E lack . ( dentine tubule ) ^ E <UNK>@12 <UNK>@13 . ( blood capillary ) <EOS>",
    "prediction": "vasodentine := dentine tissue ^ E lack . ( dentine tubule ) ^ E lack . ( <UNK>@12 <UNK>@12 capillary ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4893, 296, 1496, 3471, 3846, 1465, 4971, 3471, 4658, 2258, 1465, 296, 1, 1, 1641, 798, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 13, 25, 16, 1, 26, 27, 2, 5, 13, 31, 32, 16, 1, 33, 34, 2, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 13, 25, 16, 1, 26, 27, 2, 5, 13, 25, 16, 1, 31, 31, 34, 2, 0]"
  },
  "accuracy": 0.773,
  "tokens_OK": 17,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['<UNK>@12']",
      "replace   PRED[14:15] -> TAR[15:16] ['lack'] -> ['<UNK>@13']",
      "delete    PRED[17:18] -> TAR[17:17] ['<UNK>@12'] -> []",
      "replace   PRED[18:19] -> TAR[18:19] ['<UNK>@12'] -> ['blood']"
    ]
  }
}


{
  "_ID": 71,
  "example": {
    "sentence": "a mineralized bone tissue is a bone tissue that is mineralized <UNK>@11 hydroxyapatite . <EOS>",
    "target": "mineralized bone tissue := bone tissue ^ E mineralized <UNK>@11 . ( hydroxyapatite ) <EOS>",
    "prediction": "mineralized bone tissue := bone tissue ^ mineralized <UNK>@11 hydroxyapatite <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4878, 432, 3846, 296, 1532, 432, 3846, 1465, 296, 4878, 1, 2628, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 29, 30, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 29, 30, 31, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 91,
  "example": {
    "sentence": "the periarticular chondrocyte is a chondrocyte that is located <UNK>@9 a joint surface and that is <UNK>@16 of articular cartilage . <EOS>",
    "target": "periarticular chondrocyte := chondrocyte ^ E located <UNK>@9 . ( joint surface ) ^ E <UNK>@16 of . ( articular cartilage ) <EOS>",
    "prediction": "periarticular chondrocyte := chondrocyte ^ E <UNK>@9 <UNK>@9 . ( joint surface ) ^ E of of . ( <UNK>@16 articular cartilage ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3731, 1296, 296, 1532, 1296, 1465, 296, 3886, 1, 1532, 1067, 3458, 2258, 1465, 296, 1, 2995, 760, 1005, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 2, 5, 13, 35, 36, 16, 1, 37, 38, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 28, 28, 16, 1, 30, 31, 2, 5, 13, 36, 36, 16, 1, 35, 37, 38, 5, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 18,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['<UNK>@9'] -> ['located']",
      "replace   PRED[15:16] -> TAR[15:16] ['of'] -> ['<UNK>@16']",
      "delete    PRED[19:20] -> TAR[18:18] ['<UNK>@16'] -> []",
      "replace   PRED[22:23] -> TAR[21:22] ['^'] -> [')']"
    ]
  }
}


{
  "_ID": 112,
  "example": {
    "sentence": "a sensor is any entity that <UNK>@6 follow a <UNK>@9 method . <EOS>",
    "target": "sensor := any entity ^ >= 0 follow . ( <UNK>@9 method ) <EOS>",
    "prediction": "sensor := entity entity ^ E <UNK>@6 follow ( <UNK>@9 method ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2913, 296, 2133, 4556, 1465, 1, 4922, 1532, 1, 271, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 12, 18, 26, 16, 1, 28, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 23, 5, 13, 25, 26, 1, 28, 29, 2, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['entity'] -> ['any']",
      "replace   PRED[5:6] -> TAR[5:6] ['E'] -> ['>=']",
      "replace   PRED[6:7] -> TAR[6:7] ['<UNK>@6'] -> ['0']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['.']"
    ]
  }
}


{
  "_ID": 139,
  "example": {
    "sentence": "<UNK>@0 athletics meeting is <UNK>@4 event that <UNK>@7 disrupt traffic . <EOS>",
    "target": "athletics meeting := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "<UNK>@0 athletics := <UNK>@4 event ^ E 0 disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 449, 1370, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 18, 27, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.143,
  "tokens_OK": 2,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[2:3] -> TAR[1:2] [':='] -> ['meeting']",
      "replace   PRED[3:4] -> TAR[2:3] ['<UNK>@4'] -> [':=']",
      "replace   PRED[6:7] -> TAR[5:6] ['E'] -> ['>=']"
    ]
  }
}


{
  "_ID": 157,
  "example": {
    "sentence": "animal <UNK>@1 the infrastructure may disrupt traffic . <EOS>",
    "target": "animal <UNK>@1 infrastructure := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "animal := E disrupt . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[5233, 1, 1496, 3351, 1126, 1876, 2176, 1710, 0]",
    "target_idx": "[19, 20, 22, 7, 12, 18, 24, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 7, 13, 24, 16, 1, 25, 2, 0, 0, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['<UNK>@1']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> ['infrastructure']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['>=']",
      "replace   PRED[2:3] -> TAR[5:6] ['E'] -> ['0']"
    ]
  }
}


{
  "_ID": 161,
  "example": {
    "sentence": "a damaged road surface may cause traffic disruption . <EOS>",
    "target": "damaged road := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "damaged road := ! E surface . ( cause traffic disruption ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 5178, 3458, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 24, 16, 1, 25, 26, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 22, 16, 1, 24, 25, 26, 2, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['0']",
      "replace   PRED[5:6] -> TAR[5:6] ['surface'] -> ['cause']",
      "delete    PRED[8:9] -> TAR[7:7] ['cause'] -> []"
    ]
  }
}


{
  "_ID": 169,
  "example": {
    "sentence": "a product is everything that is <UNK>@6 <UNK>@7 <UNK>@8 event . <EOS>",
    "target": "product := E <UNK>@6 <UNK>@7 . ( event ) <EOS>",
    "prediction": "product := is ^ <UNK>@6 <UNK>@7 <UNK>@8 . ( event <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3986, 296, 2495, 1465, 296, 1, 1, 1, 4512, 1710, 0]",
    "target_idx": "[20, 7, 13, 25, 26, 16, 1, 28, 2, 0, 0]",
    "prediction_idx": "[20, 7, 21, 5, 25, 26, 27, 16, 1, 28, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['is'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['^'] -> ['E']",
      "delete    PRED[6:7] -> TAR[4:4] ['<UNK>@8'] -> []",
      "insert    PRED[9:9] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 172,
  "example": {
    "sentence": "mud slide may obstruct transport infrastructure . <EOS>",
    "target": "mud := >= 0 obstruct . ( transport infrastructure ) <EOS>",
    "prediction": "mud slide := ! E may . ( transport infrastructure ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[417, 497, 1126, 2754, 2910, 3351, 1710, 0]",
    "target_idx": "[19, 7, 12, 18, 22, 16, 1, 23, 24, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 15, 13, 21, 16, 1, 23, 24, 2, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['slide'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['!'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[3:4] ['E'] -> ['0']",
      "replace   PRED[5:6] -> TAR[4:5] ['may'] -> ['obstruct']"
    ]
  }
}


{
  "_ID": 196,
  "example": {
    "sentence": "every team develop at most NUM project . <EOS>",
    "target": "team := <= NUM develop . ( project ) <EOS>",
    "prediction": "team develop := > NUM project . ( . ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2554, 3102, 2305, 2880, 2, 3722, 1710, 0]",
    "target_idx": "[20, 7, 10, 24, 21, 16, 1, 25, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 11, 24, 25, 16, 1, 26, 2, 0]"
  },
  "accuracy": 0.182,
  "tokens_OK": 2,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['develop'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['>'] -> ['<=']",
      "replace   PRED[5:6] -> TAR[4:5] ['project'] -> ['develop']",
      "replace   PRED[8:9] -> TAR[7:8] ['.'] -> ['project']"
    ]
  }
}


{
  "_ID": 200,
  "example": {
    "sentence": "the door are <UNK>@3 of room . <EOS>",
    "target": "door := E <UNK>@3 of . ( room ) <EOS>",
    "prediction": "door := <UNK>@3 of room ^ room <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3765, 3728, 1, 2995, 1027, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 24, 2, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 5, 24, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['room'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 206,
  "example": {
    "sentence": "each project <UNK>@2 a leader . <EOS>",
    "target": "project := E <UNK>@2 leader . ( T ) <EOS>",
    "prediction": "each project <UNK>@2 := E leader . ( leader ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1788, 3722, 1, 1532, 3159, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 23, 16, 1, 17, 2, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 13, 23, 16, 1, 23, 2, 0]"
  },
  "accuracy": 0.091,
  "tokens_OK": 1,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['each'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['<UNK>@2'] -> []",
      "insert    PRED[4:4] -> TAR[3:4] [] -> ['<UNK>@2']",
      "replace   PRED[8:9] -> TAR[7:8] ['leader'] -> ['T']"
    ]
  }
}


{
  "_ID": 208,
  "example": {
    "sentence": "a datum collection <UNK>@3 literature is a datum collection process that result in a collection of datum <UNK>@17 the literature . <EOS>",
    "target": "datum collection <UNK>@3 literature := datum collection process ^ E result in . ( collection of datum <UNK>@17 literature ) <EOS>",
    "prediction": "datum collection <UNK>@3 literature := datum collection process ^ E result in . ( collection of datum ^ E <UNK>@17 <UNK>@17"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 1, 4873, 296, 1532, 5275, 2683, 1805, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 1, 1496, 4873, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 27, 28, 5, 13, 30, 31, 16, 1, 33, 34, 35, 36, 38, 2, 0]",
    "prediction_idx": "[20, 21, 22, 23, 7, 26, 27, 28, 5, 13, 30, 31, 16, 1, 33, 34, 35, 5, 13, 36, 36]"
  },
  "accuracy": 0.81,
  "tokens_OK": 17,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[17:18] -> TAR[17:18] ['^'] -> ['<UNK>@17']",
      "replace   PRED[18:19] -> TAR[18:19] ['E'] -> ['literature']",
      "replace   PRED[19:20] -> TAR[19:20] ['<UNK>@17'] -> [')']",
      "replace   PRED[20:21] -> TAR[20:21] ['<UNK>@17'] -> ['<EOS>']"
    ]
  }
}


{
  "_ID": 291,
  "example": {
    "sentence": "every gazelle is also a mammal that is <UNK>@8 <UNK>@9 lion . <EOS>",
    "target": "gazelle := mammal ^ E <UNK>@8 <UNK>@9 . ( lion ) <EOS>",
    "prediction": "gazelle := mammal ^ <UNK>@8 <UNK>@9 lion <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2448, 296, 5114, 1532, 1156, 1465, 296, 1, 1, 232, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 27, 28, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 24, 5, 27, 28, 29, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 294,
  "example": {
    "sentence": "all gazelle are mammal that are <UNK>@6 <UNK>@7 lion . <EOS>",
    "target": "gazelle := mammal ^ E <UNK>@6 <UNK>@7 . ( lion ) <EOS>",
    "prediction": "gazelle := mammal ^ <UNK>@6 <UNK>@7 lion <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2448, 3728, 1156, 1465, 3728, 1, 1, 232, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 25, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 25, 26, 27, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 317,
  "example": {
    "sentence": "every tiger is also a large feline that <UNK>@8 black stripe . <EOS>",
    "target": "tiger := large feline ^ E <UNK>@8 black stripe . ( T ) <EOS>",
    "prediction": "tiger := large feline ^ E <UNK>@8 . ( black stripe ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4809, 296, 5114, 1532, 1650, 887, 1465, 1, 5296, 2417, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 5, 13, 27, 28, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 7, 24, 25, 5, 13, 27, 16, 1, 28, 29, 2, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['black']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['stripe']",
      "delete    PRED[9:10] -> TAR[10:10] ['black'] -> []",
      "replace   PRED[10:11] -> TAR[11:12] ['stripe'] -> ['T']"
    ]
  }
}


{
  "_ID": 325,
  "example": {
    "sentence": "rhinoceros are a <UNK>@3 of mammal that <UNK>@7 NUM horn . <EOS>",
    "target": "rhinoceros := mammal ^ = NUM <UNK>@7 horn . ( T ) <EOS>",
    "prediction": "rhinoceros := <UNK>@3 of mammal ^ = NUM <UNK>@7 . ( . ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3985, 3728, 1532, 1, 2995, 1156, 1465, 1, 2, 4277, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 8, 27, 26, 28, 16, 1, 17, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 8, 27, 26, 16, 1, 29, 2, 0]"
  },
  "accuracy": 0.214,
  "tokens_OK": 3,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "insert    PRED[8:8] -> TAR[7:8] [] -> ['horn']",
      "replace   PRED[11:12] -> TAR[10:11] ['.'] -> ['T']"
    ]
  }
}


{
  "_ID": 354,
  "example": {
    "sentence": "frame are <UNK>@2 of the bycicle . <EOS>",
    "target": "frame := E <UNK>@2 of . ( bycicle ) <EOS>",
    "prediction": "frame := <UNK>@2 of bycicle ^ bycicle <EOS>"
  },
  "dump": {
    "sentence_idx": "[1251, 3728, 1, 2995, 1496, 3326, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 5, 24, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['bycicle'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 361,
  "example": {
    "sentence": "a engine is also a complex system that is <UNK>@9 of car . <EOS>",
    "target": "engine := complex system ^ E <UNK>@9 of . ( car ) <EOS>",
    "prediction": "engine := complex system ^ <UNK>@9 of car <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 5114, 1532, 2924, 1484, 1465, 296, 1, 2995, 1877, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 5, 13, 28, 29, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 24, 25, 5, 28, 29, 30, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 364,
  "example": {
    "sentence": "a bee <UNK>@2 black stripe . <EOS>",
    "target": "bee := E <UNK>@2 black stripe . ( T ) <EOS>",
    "prediction": "bee <UNK>@2 := = stripe black . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3210, 1, 5296, 2417, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 22, 23, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.545,
  "tokens_OK": 6,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['<UNK>@2'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['='] -> ['E']",
      "replace   PRED[4:5] -> TAR[3:4] ['stripe'] -> ['<UNK>@2']",
      "insert    PRED[5:5] -> TAR[5:6] [] -> ['stripe']"
    ]
  }
}


{
  "_ID": 367,
  "example": {
    "sentence": "bycicle are a <UNK>@3 of vehicle that <UNK>@7 NUM weel . <EOS>",
    "target": "bycicle := vehicle ^ = NUM <UNK>@7 weel . ( T ) <EOS>",
    "prediction": "bycicle := <UNK>@3 of vehicle ^ = NUM <UNK>@7 . ( weel ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3326, 3728, 1532, 1, 2995, 116, 1465, 1, 2, 2371, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 8, 27, 26, 28, 16, 1, 17, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 8, 27, 26, 16, 1, 28, 2, 0]"
  },
  "accuracy": 0.214,
  "tokens_OK": 3,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "insert    PRED[8:8] -> TAR[7:8] [] -> ['weel']",
      "replace   PRED[11:12] -> TAR[10:11] ['weel'] -> ['T']"
    ]
  }
}


{
  "_ID": 374,
  "example": {
    "sentence": "all engine are also complex energy production system that are <UNK>@10 of a motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E <UNK>@10 of . ( motorcycle ) <EOS>",
    "prediction": "engine := complex energy production system ^ <UNK>@10 of a motorcycle <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3592, 3728, 5114, 2924, 3667, 3702, 1484, 1465, 3728, 1, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 5, 13, 29, 30, 16, 1, 32, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 5, 29, 30, 31, 32, 0, 0, 0, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "replace   PRED[9:10] -> TAR[11:12] ['a'] -> ['(']",
      "insert    PRED[10:10] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 382,
  "example": {
    "sentence": "engine are also complex energy production system that are <UNK>@9 of motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E <UNK>@9 of . ( motorcycle ) <EOS>",
    "prediction": "engine := complex energy production system ^ <UNK>@9 of motorcycle <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 2924, 3667, 3702, 1484, 1465, 3728, 1, 2995, 120, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 24, 25, 5, 13, 28, 29, 16, 1, 30, 2, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 25, 5, 28, 29, 30, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 404,
  "example": {
    "sentence": "a grind is <UNK>@3 of the blade . <EOS>",
    "target": "grind := E <UNK>@3 of . ( blade ) <EOS>",
    "prediction": "grind := <UNK>@3 of blade ^ blade <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2919, 296, 1, 2995, 1496, 4716, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[20, 7, 22, 23, 25, 5, 25, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['blade'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 418,
  "example": {
    "sentence": "thoot are <UNK>@2 of the rake . <EOS>",
    "target": "thoot := E <UNK>@2 of . ( rake ) <EOS>",
    "prediction": "thoot := <UNK>@2 of rake ^ rake <EOS>"
  },
  "dump": {
    "sentence_idx": "[1340, 3728, 1, 2995, 1496, 4741, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 5, 24, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['rake'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 420,
  "example": {
    "sentence": "the handle is <UNK>@3 of the knife . <EOS>",
    "target": "handle := E <UNK>@3 of . ( knife ) <EOS>",
    "prediction": "handle := <UNK>@3 of the ^ knife <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 179, 296, 1, 2995, 1496, 1834, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 5, 25, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['the'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 30,
  "example": {
    "sentence": "a spicy pizza is any pizza that <UNK>@7 a topping that is spicy . <EOS>",
    "target": "spicy pizza := any pizza ^ E <UNK>@7 topping . ( spicy topping ) <EOS>",
    "prediction": "spicy pizza := pizza ^ E <UNK>@7 topping . ( spicy ) ^ E <UNK>@7 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 611, 2430, 296, 2133, 2430, 1465, 1, 1532, 1154, 1465, 296, 611, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 28, 16, 1, 31, 28, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 28, 16, 1, 31, 2, 5, 13, 26, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 4,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['any']",
      "delete    PRED[11:12] -> TAR[11:11] [')'] -> []",
      "delete    PRED[12:13] -> TAR[11:11] ['^'] -> []",
      "replace   PRED[13:14] -> TAR[12:13] ['E'] -> ['topping']",
      "replace   PRED[14:15] -> TAR[13:14] ['<UNK>@7'] -> [')']"
    ]
  }
}


{
  "_ID": 31,
  "example": {
    "sentence": "axial ossicle is a ossicle that is <UNK>@7 of the axial skeleton . <EOS>",
    "target": "axial ossicle := ossicle ^ E <UNK>@7 of . ( axial skeleton ) <EOS>",
    "prediction": "axial ossicle := ossicle ^ <UNK>@7 of the skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 3968, 296, 1532, 3968, 1465, 296, 1, 2995, 1496, 4722, 4381, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 26, 27, 28, 30, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "replace   PRED[7:8] -> TAR[10:11] ['the'] -> ['axial']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 33,
  "example": {
    "sentence": "branch are <UNK>@2 of tree . <EOS>",
    "target": "branch := E <UNK>@2 of . ( tree ) <EOS>",
    "prediction": "branch := <UNK>@2 of tree ^ tree <UNK>@2 tree <EOS>"
  },
  "dump": {
    "sentence_idx": "[4358, 3728, 1, 2995, 420, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 23, 21, 23, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['tree'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "delete    PRED[7:8] -> TAR[7:7] ['<UNK>@2'] -> []",
      "replace   PRED[8:9] -> TAR[8:9] ['tree'] -> [')']"
    ]
  }
}


{
  "_ID": 58,
  "example": {
    "sentence": "the dorsal fin skeleton is a median fin skeleton located <UNK>@10 the dorsal surface of the organism . <EOS>",
    "target": "dorsal fin skeleton := median fin skeleton ^ E located <UNK>@10 . ( dorsal surface of organism ) <EOS>",
    "prediction": "dorsal fin skeleton := median fin skeleton U dorsal <UNK>@10 surface . ( dorsal surface of ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3927, 613, 4381, 296, 1532, 3485, 613, 4381, 3886, 1, 1496, 3927, 3458, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 28, 29, 16, 1, 31, 32, 33, 35, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 6, 31, 29, 32, 16, 1, 31, 32, 33, 2, 0, 0]"
  },
  "accuracy": 0.684,
  "tokens_OK": 13,
  "tokens_tot": 19,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[7:8] -> TAR[7:8] ['U'] -> ['^']",
      "replace   PRED[8:9] -> TAR[8:9] ['dorsal'] -> ['E']",
      "replace   PRED[9:10] -> TAR[9:10] ['<UNK>@10'] -> ['located']",
      "replace   PRED[10:11] -> TAR[10:11] ['surface'] -> ['<UNK>@10']",
      "insert    PRED[15:15] -> TAR[16:17] [] -> ['organism']"
    ]
  }
}


{
  "_ID": 59,
  "example": {
    "sentence": "the odontocyte is a skeletogenic cell that secretes dentine matrix and is <UNK>@12 <UNK>@13 odontogenic papilla . <EOS>",
    "target": "odontocyte := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E <UNK>@12 <UNK>@13 . ( odontogenic papilla ) <EOS>",
    "prediction": "odontocyte := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E secretes . ( <UNK>@12 <UNK>@13 odontogenic papilla <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2626, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 2258, 296, 1, 1, 3698, 5055, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 31, 32, 16, 1, 33, 34, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 26, 16, 1, 31, 32, 33, 34, 0]"
  },
  "accuracy": 0.682,
  "tokens_OK": 15,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['<UNK>@12']",
      "replace   PRED[14:15] -> TAR[15:16] ['secretes'] -> ['<UNK>@13']",
      "delete    PRED[17:18] -> TAR[17:17] ['<UNK>@12'] -> []",
      "delete    PRED[18:19] -> TAR[17:17] ['<UNK>@13'] -> []",
      "insert    PRED[20:20] -> TAR[20:21] [] -> [')']"
    ]
  }
}


{
  "_ID": 72,
  "example": {
    "sentence": "the hypertrophic chondrocyte is a chondrocyte that is <UNK>@8 differentiated . <EOS>",
    "target": "hypertrophic chondrocyte := chondrocyte ^ E <UNK>@8 differentiated . ( T ) <EOS>",
    "prediction": "hypertrophic chondrocyte := chondrocyte ^ <UNK>@8 differentiated <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4054, 1296, 296, 1532, 1296, 1465, 296, 1, 2457, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 27, 28, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['T']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 94,
  "example": {
    "sentence": "the girdle skeleton is a skeletal subdivision that is <UNK>@9 of the appendage girdle region . <EOS>",
    "target": "girdle skeleton := skeletal subdivision ^ E <UNK>@9 of . ( appendage girdle region ) <EOS>",
    "prediction": "girdle skeleton := skeletal subdivision ^ E ( of . ( the of appendage region <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3852, 4381, 296, 1532, 3051, 5142, 1465, 296, 1, 2995, 1496, 4287, 3852, 4330, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 1, 29, 16, 1, 30, 29, 31, 33, 0]"
  },
  "accuracy": 0.688,
  "tokens_OK": 11,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[7:8] -> TAR[7:8] ['('] -> ['<UNK>@9']",
      "replace   PRED[11:12] -> TAR[11:12] ['the'] -> ['appendage']",
      "replace   PRED[12:13] -> TAR[12:13] ['of'] -> ['girdle']",
      "replace   PRED[13:14] -> TAR[13:14] ['appendage'] -> ['region']",
      "replace   PRED[14:15] -> TAR[14:15] ['region'] -> [')']"
    ]
  }
}


{
  "_ID": 95,
  "example": {
    "sentence": "a ligamentous replacement element is a replacement element that form <UNK>@10 a replacement of a ligament . <EOS>",
    "target": "ligamentous replacement element := replacement element ^ E form <UNK>@10 . ( replacement of ligament ) <EOS>",
    "prediction": "ligamentous replacement element := replacement element ^ E form . ( <UNK>@10 of a ligament replacement of <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4235, 4747, 1791, 296, 1532, 4747, 1791, 1465, 2845, 1, 1532, 4747, 2995, 1532, 2431, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 28, 29, 16, 1, 31, 32, 34, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 13, 28, 16, 1, 29, 32, 33, 34, 31, 32, 0]"
  },
  "accuracy": 0.611,
  "tokens_OK": 11,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['<UNK>@10']",
      "replace   PRED[11:12] -> TAR[12:13] ['<UNK>@10'] -> ['replacement']",
      "delete    PRED[13:14] -> TAR[13:13] ['a'] -> []",
      "delete    PRED[15:16] -> TAR[14:14] ['replacement'] -> []",
      "replace   PRED[16:17] -> TAR[15:16] ['of'] -> [')']"
    ]
  }
}


{
  "_ID": 98,
  "example": {
    "sentence": "the perichordal bone is the bone element that is adjacent <UNK>@10 the notochord . <EOS>",
    "target": "perichordal bone := bone element ^ E adjacent <UNK>@10 . ( notochord ) <EOS>",
    "prediction": "perichordal bone := bone element ^ adjacent <UNK>@10 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1321, 432, 296, 1496, 432, 1791, 1465, 296, 2938, 1, 1496, 595, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 28, 29, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['notochord']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 101,
  "example": {
    "sentence": "the vertebral column is the anatomical cluster that consists of vertebra of the body . <EOS>",
    "target": "vertebral column := anatomical cluster ^ E consists of . ( vertebra of body ) <EOS>",
    "prediction": "vertebral column := anatomical cluster ^ E of vertebra . ( vertebra of of ^ E <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2620, 3304, 296, 1496, 2927, 2663, 1465, 4298, 2995, 4362, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 28, 16, 1, 29, 30, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 29, 30, 30, 5, 13, 0]"
  },
  "accuracy": 0.706,
  "tokens_OK": 12,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[7:8] -> TAR[7:8] ['of'] -> ['consists']",
      "replace   PRED[8:9] -> TAR[8:9] ['vertebra'] -> ['of']",
      "delete    PRED[12:13] -> TAR[11:11] ['of'] -> []",
      "replace   PRED[14:15] -> TAR[13:14] ['^'] -> ['body']",
      "replace   PRED[15:16] -> TAR[14:15] ['E'] -> [')']"
    ]
  }
}


{
  "_ID": 107,
  "example": {
    "sentence": "the caudal fin skeleton is a median fin skeleton <UNK>@9 the caudal fin . <EOS>",
    "target": "caudal fin skeleton := median fin skeleton ^ E <UNK>@9 . ( caudal fin ) <EOS>",
    "prediction": "caudal fin skeleton := median fin skeleton <UNK>@9 ^ caudal fin fin <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3008, 613, 4381, 296, 1532, 3485, 613, 4381, 1, 1496, 3008, 613, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 28, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 28, 5, 30, 31, 31, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 8,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "replace   PRED[8:9] -> TAR[11:12] ['^'] -> ['(']",
      "replace   PRED[11:12] -> TAR[14:15] ['fin'] -> [')']"
    ]
  }
}


{
  "_ID": 140,
  "example": {
    "sentence": "a boat show is something which <UNK>@6 disrupt traffic . <EOS>",
    "target": "boat show := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "boat show := which <UNK>@6 disrupt traffic traffic <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 537, 1588, 296, 1307, 4518, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 27, 27, 0, 0, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['which'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['<UNK>@6'] -> ['0']",
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['(']",
      "replace   PRED[7:8] -> TAR[9:10] ['traffic'] -> [')']"
    ]
  }
}


{
  "_ID": 174,
  "example": {
    "sentence": "a broken <UNK>@2 vehicle <UNK>@4 <UNK>@5 <UNK>@6 may cause traffic disruption . <EOS>",
    "target": "broken <UNK>@2 vehicle := >= 0 cause . ( traffic disruption ) <EOS>",
    "prediction": "broken <UNK>@2 vehicle := E <UNK>@4 . ( <UNK>@5 <UNK>@6 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1359, 1, 116, 1, 1, 1, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 12, 18, 27, 16, 1, 28, 29, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 13, 23, 16, 1, 24, 25, 2, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['>=']",
      "replace   PRED[4:5] -> TAR[5:6] ['E'] -> ['0']",
      "replace   PRED[5:6] -> TAR[6:7] ['<UNK>@4'] -> ['cause']",
      "replace   PRED[8:9] -> TAR[9:10] ['<UNK>@5'] -> ['traffic']",
      "replace   PRED[9:10] -> TAR[10:11] ['<UNK>@6'] -> ['disruption']"
    ]
  }
}


{
  "_ID": 179,
  "example": {
    "sentence": "a kindergarten is the location that is used <UNK>@8 pre-school education . <EOS>",
    "target": "kindergarten := location ^ E used <UNK>@8 . ( pre-school education ) <EOS>",
    "prediction": "kindergarten := location ^ used <UNK>@8 pre-school <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3226, 296, 1496, 267, 1465, 296, 3942, 1, 3183, 1174, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 28, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 26, 27, 28, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['education']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 190,
  "example": {
    "sentence": "window are <UNK>@2 of a room . <EOS>",
    "target": "window := E <UNK>@2 of . ( room ) <EOS>",
    "prediction": "window := <UNK>@2 of a room ^ room <EOS>"
  },
  "dump": {
    "sentence_idx": "[1986, 3728, 1, 2995, 1532, 1027, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 24, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 4,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['a'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['room'] -> ['(']",
      "replace   PRED[6:7] -> TAR[7:8] ['^'] -> ['room']",
      "replace   PRED[7:8] -> TAR[8:9] ['room'] -> [')']"
    ]
  }
}


{
  "_ID": 198,
  "example": {
    "sentence": "room are <UNK>@2 of the building . <EOS>",
    "target": "room := E <UNK>@2 of . ( building ) <EOS>",
    "prediction": "room := <UNK>@2 of building ^ building <UNK>@2 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[1027, 3728, 1, 2995, 1496, 4707, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 5, 24, 21, 22, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['building'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "delete    PRED[7:8] -> TAR[7:7] ['<UNK>@2'] -> []",
      "replace   PRED[8:9] -> TAR[8:9] ['of'] -> [')']"
    ]
  }
}


{
  "_ID": 204,
  "example": {
    "sentence": "activity are <UNK>@2 of a process . <EOS>",
    "target": "activity := E <UNK>@2 of . ( process ) <EOS>",
    "prediction": "activity := <UNK>@2 of a process ^ process activity <EOS>"
  },
  "dump": {
    "sentence_idx": "[2231, 3728, 1, 2995, 1532, 1805, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 24, 19, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 4,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "delete    PRED[4:5] -> TAR[4:4] ['a'] -> []",
      "replace   PRED[5:6] -> TAR[5:6] ['process'] -> ['.']",
      "replace   PRED[6:7] -> TAR[6:7] ['^'] -> ['(']",
      "replace   PRED[8:9] -> TAR[8:9] ['activity'] -> [')']"
    ]
  }
}


{
  "_ID": 205,
  "example": {
    "sentence": "each project <UNK>@2 exactly NUM deadline . <EOS>",
    "target": "project := = NUM <UNK>@2 deadline . ( T ) <EOS>",
    "prediction": "each project <UNK>@2 := = NUM exactly . ( deadline ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1788, 3722, 1, 4082, 2, 191, 1710, 0]",
    "target_idx": "[20, 7, 8, 23, 21, 24, 16, 1, 17, 2, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 8, 23, 22, 16, 1, 24, 2, 0]"
  },
  "accuracy": 0.083,
  "tokens_OK": 1,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['each'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['<UNK>@2'] -> []",
      "insert    PRED[5:5] -> TAR[4:5] [] -> ['<UNK>@2']",
      "replace   PRED[6:7] -> TAR[5:6] ['exactly'] -> ['deadline']",
      "replace   PRED[9:10] -> TAR[8:9] ['deadline'] -> ['T']"
    ]
  }
}


{
  "_ID": 209,
  "example": {
    "sentence": "fermion are <UNK>@2 of complex particle . <EOS>",
    "target": "fermion := E <UNK>@2 of . ( complex particle ) <EOS>",
    "prediction": "fermion := <UNK>@2 of complex particle ^ particle <EOS>"
  },
  "dump": {
    "sentence_idx": "[2039, 3728, 1, 2995, 2924, 3081, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 24, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "delete    PRED[6:7] -> TAR[8:8] ['^'] -> []",
      "replace   PRED[7:8] -> TAR[9:10] ['particle'] -> [')']"
    ]
  }
}


{
  "_ID": 225,
  "example": {
    "sentence": "a team implement trimestral activity . <EOS>",
    "target": "team := E implement . ( trimestral activity ) <EOS>",
    "prediction": "team implement trimestral := E activity . ( . ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 3449, 2857, 2231, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 16, 1, 22, 23, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 13, 23, 16, 1, 24, 2, 0]"
  },
  "accuracy": 0.182,
  "tokens_OK": 2,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['implement'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['trimestral'] -> []",
      "replace   PRED[5:6] -> TAR[3:4] ['activity'] -> ['implement']",
      "insert    PRED[7:7] -> TAR[6:7] [] -> ['trimestral']",
      "replace   PRED[8:9] -> TAR[7:8] ['.'] -> ['activity']"
    ]
  }
}


{
  "_ID": 290,
  "example": {
    "sentence": "female tiger <UNK>@2 at most NUM male mate . <EOS>",
    "target": "female tiger := <= NUM <UNK>@2 male mate . ( T ) <EOS>",
    "prediction": "female tiger := > NUM <UNK>@2 . ( male mate ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[123, 4809, 1, 2305, 2880, 2, 4420, 5315, 1710, 0]",
    "target_idx": "[19, 20, 7, 10, 24, 21, 25, 26, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 7, 11, 24, 21, 16, 1, 25, 26, 2, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['>'] -> ['<=']",
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['male']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['mate']",
      "delete    PRED[8:9] -> TAR[9:9] ['male'] -> []",
      "replace   PRED[9:10] -> TAR[10:11] ['mate'] -> ['T']"
    ]
  }
}


{
  "_ID": 305,
  "example": {
    "sentence": "female tiger <UNK>@2 at most NUM male mate . <EOS>",
    "target": "female tiger := <= NUM <UNK>@2 male mate . ( T ) <EOS>",
    "prediction": "female tiger := > NUM <UNK>@2 . ( male mate ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[123, 4809, 1, 2305, 2880, 2, 4420, 5315, 1710, 0]",
    "target_idx": "[19, 20, 7, 10, 24, 21, 25, 26, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 7, 11, 24, 21, 16, 1, 25, 26, 2, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['>'] -> ['<=']",
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['male']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['mate']",
      "delete    PRED[8:9] -> TAR[9:9] ['male'] -> []",
      "replace   PRED[9:10] -> TAR[10:11] ['mate'] -> ['T']"
    ]
  }
}


{
  "_ID": 308,
  "example": {
    "sentence": "task are <UNK>@2 of a project . <EOS>",
    "target": "task := E <UNK>@2 of . ( project ) <EOS>",
    "prediction": "task := <UNK>@2 of a project ^ project <EOS>"
  },
  "dump": {
    "sentence_idx": "[864, 3728, 1, 2995, 1532, 3722, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 24, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 4,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['a'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['project'] -> ['(']",
      "replace   PRED[6:7] -> TAR[7:8] ['^'] -> ['project']",
      "replace   PRED[7:8] -> TAR[8:9] ['project'] -> [')']"
    ]
  }
}


{
  "_ID": 332,
  "example": {
    "sentence": "gazelle are mammal that are <UNK>@5 <UNK>@6 the lion . <EOS>",
    "target": "gazelle := mammal ^ E <UNK>@5 <UNK>@6 . ( lion ) <EOS>",
    "prediction": "gazelle := mammal ^ <UNK>@5 <UNK>@6 <EOS>"
  },
  "dump": {
    "sentence_idx": "[2448, 3728, 1156, 1465, 3728, 1, 1, 1496, 232, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 24, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 24, 25, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['lion']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 346,
  "example": {
    "sentence": "gazelle are also mammal that are <UNK>@6 <UNK>@7 the lion . <EOS>",
    "target": "gazelle := mammal ^ E <UNK>@6 <UNK>@7 . ( lion ) <EOS>",
    "prediction": "gazelle := mammal ^ <UNK>@6 <UNK>@7 <EOS>"
  },
  "dump": {
    "sentence_idx": "[2448, 3728, 5114, 1156, 1465, 3728, 1, 1, 1496, 232, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 25, 26, 16, 1, 28, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 25, 26, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['lion']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 355,
  "example": {
    "sentence": "handle bar are <UNK>@3 of bycicle . <EOS>",
    "target": "handle bar := E <UNK>@3 of . ( bycicle ) <EOS>",
    "prediction": "handle bar := <UNK>@3 of bycicle ^ bycicle bycicle bycicle <EOS>"
  },
  "dump": {
    "sentence_idx": "[179, 2886, 3728, 1, 2995, 3326, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 22, 23, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 5, 24, 24, 24, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "delete    PRED[5:6] -> TAR[5:5] ['bycicle'] -> []",
      "replace   PRED[6:7] -> TAR[6:7] ['^'] -> ['.']",
      "replace   PRED[7:8] -> TAR[7:8] ['bycicle'] -> ['(']",
      "replace   PRED[9:10] -> TAR[9:10] ['bycicle'] -> [')']"
    ]
  }
}


{
  "_ID": 356,
  "example": {
    "sentence": "engine are also complex system that are <UNK>@7 of the car . <EOS>",
    "target": "engine := complex system ^ E <UNK>@7 of . ( car ) <EOS>",
    "prediction": "engine := complex system ^ <UNK>@7 of the <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 2924, 1484, 1465, 3728, 1, 2995, 1496, 1877, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 13, 26, 27, 16, 1, 29, 2, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 26, 27, 28, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['car']",
      "replace   PRED[7:8] -> TAR[11:12] ['the'] -> [')']"
    ]
  }
}


{
  "_ID": 360,
  "example": {
    "sentence": "all engine are complex system that are <UNK>@7 of the car . <EOS>",
    "target": "engine := complex system ^ E <UNK>@7 of . ( car ) <EOS>",
    "prediction": "engine := complex system ^ <UNK>@7 of the <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3592, 3728, 2924, 1484, 1465, 3728, 1, 2995, 1496, 1877, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 13, 26, 27, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 26, 27, 28, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['car']",
      "replace   PRED[7:8] -> TAR[11:12] ['the'] -> [')']"
    ]
  }
}


{
  "_ID": 363,
  "example": {
    "sentence": "bycicle are a <UNK>@3 of mean of transportation that are <UNK>@10 only <UNK>@12 human power . <EOS>",
    "target": "bycicle := mean of transportation ^ A <UNK>@10 <UNK>@12 . ( human power ) <EOS>",
    "prediction": "bycicle := <UNK>@3 of mean of ^ A <UNK>@10 . ( <UNK>@12 human power ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3326, 3728, 1532, 1, 2995, 3357, 2995, 1839, 1465, 3728, 1, 3546, 1, 3766, 4964, 1710, 0]",
    "target_idx": "[19, 7, 24, 25, 26, 5, 14, 29, 31, 16, 1, 32, 33, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 25, 5, 14, 29, 16, 1, 31, 32, 33, 2, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['<UNK>@3'] -> ['mean']",
      "delete    PRED[4:5] -> TAR[3:3] ['mean'] -> []",
      "replace   PRED[5:6] -> TAR[4:5] ['of'] -> ['transportation']",
      "insert    PRED[8:8] -> TAR[8:9] [] -> ['<UNK>@12']",
      "delete    PRED[11:12] -> TAR[10:10] ['<UNK>@12'] -> []"
    ]
  }
}


{
  "_ID": 370,
  "example": {
    "sentence": "engine are complex system that are <UNK>@6 of a car . <EOS>",
    "target": "engine := complex system ^ E <UNK>@6 of . ( car ) <EOS>",
    "prediction": "engine := complex system ^ <UNK>@6 of a <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 2924, 1484, 1465, 3728, 1, 2995, 1532, 1877, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 25, 26, 16, 1, 28, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 25, 26, 27, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['car']",
      "replace   PRED[7:8] -> TAR[11:12] ['a'] -> [')']"
    ]
  }
}


{
  "_ID": 380,
  "example": {
    "sentence": "engine are complex system that are <UNK>@6 of the car . <EOS>",
    "target": "engine := complex system ^ E <UNK>@6 of . ( car ) <EOS>",
    "prediction": "engine := complex system ^ <UNK>@6 of the <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 2924, 1484, 1465, 3728, 1, 2995, 1496, 1877, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 25, 26, 16, 1, 28, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 25, 26, 27, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['car']",
      "replace   PRED[7:8] -> TAR[11:12] ['the'] -> [')']"
    ]
  }
}


{
  "_ID": 381,
  "example": {
    "sentence": "a engine is a complex system that is <UNK>@8 of a car . <EOS>",
    "target": "engine := complex system ^ E <UNK>@8 of . ( car ) <EOS>",
    "prediction": "engine := complex system ^ <UNK>@8 of a <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 1532, 2924, 1484, 1465, 296, 1, 2995, 1532, 1877, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 27, 28, 29, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['car']",
      "replace   PRED[7:8] -> TAR[11:12] ['a'] -> [')']"
    ]
  }
}


{
  "_ID": 384,
  "example": {
    "sentence": "all cross blade screwdriver are also screwdriver that <UNK>@8 cross blade . <EOS>",
    "target": "cross blade screwdriver := screwdriver ^ E <UNK>@8 cross blade . ( T ) <EOS>",
    "prediction": "cross blade screwdriver := screwdriver ^ <UNK>@8 cross blade <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1420, 4716, 4051, 3728, 5114, 4051, 1465, 1, 1420, 4716, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 27, 28, 29, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 27, 28, 29, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['T']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 387,
  "example": {
    "sentence": "a power screwdriver is also a screwdriver that is <UNK>@9 <UNK>@10 electric energy . <EOS>",
    "target": "power screwdriver := screwdriver ^ E <UNK>@9 <UNK>@10 . ( electric energy ) <EOS>",
    "prediction": "power screwdriver := screwdriver ^ <UNK>@9 <UNK>@10 electric <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4964, 4051, 296, 5114, 1532, 4051, 1465, 296, 1, 1, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 21, 7, 25, 5, 13, 28, 29, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 25, 5, 28, 29, 30, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['energy']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 390,
  "example": {
    "sentence": "every power screwdriver is a screwdriver that is <UNK>@8 <UNK>@9 electric energy . <EOS>",
    "target": "power screwdriver := screwdriver ^ E <UNK>@8 <UNK>@9 . ( electric energy ) <EOS>",
    "prediction": "power screwdriver := screwdriver ^ <UNK>@8 <UNK>@9 electric <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4964, 4051, 296, 1532, 4051, 1465, 296, 1, 1, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 27, 28, 29, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['energy']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 396,
  "example": {
    "sentence": "frame are <UNK>@2 of motorcycle . <EOS>",
    "target": "frame := E <UNK>@2 of . ( motorcycle ) <EOS>",
    "prediction": "frame := <UNK>@2 of motorcycle ^ motorcycle <UNK>@2 motorcycle <EOS>"
  },
  "dump": {
    "sentence_idx": "[1251, 3728, 1, 2995, 120, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 23, 21, 23, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['motorcycle'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "delete    PRED[7:8] -> TAR[7:7] ['<UNK>@2'] -> []",
      "replace   PRED[8:9] -> TAR[8:9] ['motorcycle'] -> [')']"
    ]
  }
}


{
  "_ID": 403,
  "example": {
    "sentence": "handle bar are <UNK>@3 of the bycicle . <EOS>",
    "target": "handle bar := E <UNK>@3 of . ( bycicle ) <EOS>",
    "prediction": "handle bar := <UNK>@3 of the bycicle ^ bycicle <EOS>"
  },
  "dump": {
    "sentence_idx": "[179, 2886, 3728, 1, 2995, 1496, 3326, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 22, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 25, 5, 25, 0, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "replace   PRED[5:6] -> TAR[6:7] ['the'] -> ['.']",
      "replace   PRED[6:7] -> TAR[7:8] ['bycicle'] -> ['(']",
      "replace   PRED[7:8] -> TAR[8:9] ['^'] -> ['bycicle']",
      "replace   PRED[8:9] -> TAR[9:10] ['bycicle'] -> [')']"
    ]
  }
}


{
  "_ID": 425,
  "example": {
    "sentence": "the pole is <UNK>@3 of the rake . <EOS>",
    "target": "pole := E <UNK>@3 of . ( rake ) <EOS>",
    "prediction": "pole := <UNK>@3 of rake rake ^ rake <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3011, 296, 1, 2995, 1496, 4741, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[20, 7, 22, 23, 25, 25, 5, 25, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 4,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['rake'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['rake'] -> ['(']",
      "replace   PRED[6:7] -> TAR[7:8] ['^'] -> ['rake']",
      "replace   PRED[7:8] -> TAR[8:9] ['rake'] -> [')']"
    ]
  }
}


{
  "_ID": 3,
  "example": {
    "sentence": "spicy topping is any topping that <UNK>@6 a hot spiciness . <EOS>",
    "target": "spicy topping := topping ^ E <UNK>@6 spiciness . ( hot spiciness ) <EOS>",
    "prediction": "spicy topping := topping ^ E ( <UNK>@6 ^ <UNK>@6 ) . ( hot <EOS>"
  },
  "dump": {
    "sentence_idx": "[611, 1154, 296, 2133, 1154, 1465, 1, 1532, 2872, 390, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 5, 13, 25, 28, 16, 1, 27, 28, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 13, 1, 25, 5, 25, 2, 16, 1, 27, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['('] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['<UNK>@6'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['^'] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['spiciness']",
      "insert    PRED[13:13] -> TAR[11:12] [] -> ['spiciness']",
      "insert    PRED[13:13] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 11,
  "example": {
    "sentence": "a property is a observable quality of a event or object . <EOS>",
    "target": "property := observable quality of event U observable quality of object <EOS>",
    "prediction": "property := observable of of ^ = object <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2664, 296, 1532, 369, 4980, 2995, 1532, 4512, 1048, 3093, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 27, 6, 23, 24, 25, 29, 0]",
    "prediction_idx": "[20, 7, 23, 25, 25, 5, 8, 29, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['quality']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['event']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['U']",
      "replace   PRED[4:5] -> TAR[7:8] ['of'] -> ['observable']",
      "replace   PRED[5:6] -> TAR[8:9] ['^'] -> ['quality']",
      "replace   PRED[6:7] -> TAR[9:10] ['='] -> ['of']"
    ]
  }
}


{
  "_ID": 26,
  "example": {
    "sentence": "anal fin lepidotrichium is a lepidotrichium that is <UNK>@8 of the anal fin skeleton . <EOS>",
    "target": "anal fin lepidotrichium := lepidotrichium ^ E <UNK>@8 of . ( anal fin skeleton ) <EOS>",
    "prediction": "anal fin lepidotrichium := lepidotrichium ^ <UNK>@8 of the fin <EOS>"
  },
  "dump": {
    "sentence_idx": "[701, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 701, 613, 4381, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 5, 27, 28, 29, 31, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[11:12] ['the'] -> ['anal']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['skeleton']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 27,
  "example": {
    "sentence": "leaf are <UNK>@2 of branch . <EOS>",
    "target": "leaf := E <UNK>@2 of . ( branch ) <EOS>",
    "prediction": "leaf := <UNK>@2 of branch ^ <UNK>@2 <UNK>@2 branch . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4585, 3728, 1, 2995, 4358, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 21, 21, 23, 16, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "delete    PRED[4:5] -> TAR[4:4] ['branch'] -> []",
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []",
      "replace   PRED[6:7] -> TAR[5:6] ['<UNK>@2'] -> ['.']",
      "replace   PRED[7:8] -> TAR[6:7] ['<UNK>@2'] -> ['(']",
      "replace   PRED[9:10] -> TAR[8:9] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 37,
  "example": {
    "sentence": "a american pizza is a pizza that <UNK>@7 topping of pepperoni , mozzarella and tomato . <EOS>",
    "target": "american pizza := pizza ^ E <UNK>@7 topping . ( pepperoni ) ^ E <UNK>@7 topping . ( mozzarella ) ^ E <UNK>@7 topping . ( tomato ) <EOS>",
    "prediction": "american pizza := pizza ^ <UNK>@7 topping of pepperoni ( mozzarella ) ^ E <UNK>@7 . ( mozzarella ) ^ E <UNK>@7 . ( tomato ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2430, 296, 1532, 2430, 1465, 1, 1154, 2995, 5193, 2317, 494, 2258, 2475, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 2, 5, 13, 26, 27, 16, 1, 31, 2, 5, 13, 26, 27, 16, 1, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 26, 27, 28, 29, 1, 31, 2, 5, 13, 26, 16, 1, 31, 2, 5, 13, 26, 16, 1, 33, 2, 0, 0, 0]"
  },
  "accuracy": 0.379,
  "tokens_OK": 11,
  "tokens_tot": 29,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "delete    PRED[7:8] -> TAR[7:7] ['of'] -> []",
      "replace   PRED[8:9] -> TAR[8:9] ['pepperoni'] -> ['.']",
      "replace   PRED[10:11] -> TAR[10:11] ['mozzarella'] -> ['pepperoni']",
      "insert    PRED[14:14] -> TAR[15:16] [] -> ['topping']",
      "insert    PRED[21:21] -> TAR[23:24] [] -> ['topping']"
    ]
  }
}


{
  "_ID": 40,
  "example": {
    "sentence": "caudal fin lepidotrichium is a lepidotrichium that is <UNK>@8 of the caudal fin skeleton . <EOS>",
    "target": "caudal fin lepidotrichium := lepidotrichium ^ E <UNK>@8 of . ( caudal fin skeleton ) <EOS>",
    "prediction": "caudal fin lepidotrichium := lepidotrichium ^ <UNK>@8 of the fin <EOS>"
  },
  "dump": {
    "sentence_idx": "[3008, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 3008, 613, 4381, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 5, 27, 28, 29, 31, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[11:12] ['the'] -> ['caudal']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['skeleton']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 44,
  "example": {
    "sentence": "the perichordal tissue is <UNK>@4 <UNK>@5 cell surrounding the notochord . <EOS>",
    "target": "perichordal tissue := <UNK>@4 <UNK>@5 ( cell ^ E surrounding . ( notochord ) ) <EOS>",
    "prediction": "perichordal tissue := <UNK>@4 <UNK>@5 cell ^ E surrounding <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1321, 3846, 296, 1, 1, 3311, 1799, 1496, 595, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 1, 25, 5, 13, 26, 16, 1, 28, 2, 2, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 25, 5, 13, 26, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 6,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['notochord']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 52,
  "example": {
    "sentence": "a <UNK>@1 pizza is a pizza that <UNK>@7 <UNK>@8 found <UNK>@10 a pizza menu . <EOS>",
    "target": "<UNK>@1 pizza := pizza ^ E found <UNK>@10 . ( pizza menu ) <EOS>",
    "prediction": "<UNK>@1 pizza := pizza ^ E <UNK>@8 found . ( <UNK>@10 ) ^ E <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1, 2430, 296, 1532, 2430, 1465, 1, 1, 4454, 1, 1532, 2430, 1372, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 28, 29, 16, 1, 31, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 29, 2, 5, 13, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 9,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[6:7] -> TAR[6:7] ['<UNK>@8'] -> ['found']",
      "replace   PRED[7:8] -> TAR[7:8] ['found'] -> ['<UNK>@10']",
      "delete    PRED[10:11] -> TAR[9:9] ['<UNK>@10'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] [')'] -> ['pizza']",
      "replace   PRED[12:13] -> TAR[11:12] ['^'] -> ['menu']",
      "replace   PRED[13:14] -> TAR[12:13] ['E'] -> [')']"
    ]
  }
}


{
  "_ID": 69,
  "example": {
    "sentence": "the columnar chondrocyte is a chondrocyte that is <UNK>@8 <UNK>@9 <UNK>@10 other columnar chondrocytes . <EOS>",
    "target": "columnar chondrocyte := chondrocyte ^ E <UNK>@8 <UNK>@9 <UNK>@10 . ( columnar chondrocytes ) <EOS>",
    "prediction": "columnar chondrocyte := chondrocyte ^ <UNK>@8 <UNK>@9 <UNK>@10 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1221, 1296, 296, 1532, 1296, 1465, 296, 1, 1, 1, 5342, 1221, 3745, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 29, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 27, 28, 29, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['columnar']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['chondrocytes']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 80,
  "example": {
    "sentence": "a cellular bone tissue is a mineralized bone tissue that <UNK>@10 include <UNK>@12 differentiated osteoblast and osteocyte . <EOS>",
    "target": "cellular bone tissue := mineralized bone tissue ^ E include . ( <UNK>@12 differentiated osteoblast U osteocyte ) <EOS>",
    "prediction": "cellular bone tissue := mineralized bone tissue ^ E <UNK>@10 . ( include <UNK>@12 differentiated ) ^ E <UNK>@10 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2112, 432, 3846, 296, 1532, 4878, 432, 3846, 1465, 1, 3459, 1, 2457, 933, 2258, 4758, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 16, 1, 31, 32, 33, 6, 35, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 16, 1, 30, 31, 32, 2, 5, 13, 29, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 12,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[9:10] -> TAR[9:10] ['<UNK>@10'] -> ['include']",
      "delete    PRED[12:13] -> TAR[11:11] ['include'] -> []",
      "replace   PRED[15:16] -> TAR[14:15] [')'] -> ['osteoblast']",
      "replace   PRED[16:17] -> TAR[15:16] ['^'] -> ['U']",
      "replace   PRED[17:18] -> TAR[16:17] ['E'] -> ['osteocyte']",
      "replace   PRED[18:19] -> TAR[17:18] ['<UNK>@10'] -> [')']"
    ]
  }
}


{
  "_ID": 82,
  "example": {
    "sentence": "a craniofacial skeleton is a cranial skeleton <UNK>@7 <UNK>@8 neural crest cell . <EOS>",
    "target": "craniofacial skeleton := cranial skeleton ^ E <UNK>@7 <UNK>@8 . ( neural crest cell ) <EOS>",
    "prediction": "craniofacial skeleton := cranial skeleton <UNK>@7 ^ <UNK>@8 neural crest . ( neural cell cell <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3598, 4381, 296, 1532, 4495, 4381, 1, 1, 5343, 5025, 3311, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 26, 27, 16, 1, 28, 29, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 5, 27, 28, 29, 16, 1, 28, 30, 30, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['<UNK>@7'] -> []",
      "replace   PRED[7:8] -> TAR[6:7] ['<UNK>@8'] -> ['E']",
      "replace   PRED[8:9] -> TAR[7:8] ['neural'] -> ['<UNK>@7']",
      "replace   PRED[9:10] -> TAR[8:9] ['crest'] -> ['<UNK>@8']",
      "insert    PRED[12:12] -> TAR[12:13] [] -> ['crest']",
      "replace   PRED[14:15] -> TAR[14:15] ['cell'] -> [')']"
    ]
  }
}


{
  "_ID": 108,
  "example": {
    "sentence": "the caudal fin lepidotrichium is a lepidotrichium that is <UNK>@9 of the caudal fin skeleton . <EOS>",
    "target": "caudal fin lepidotrichium := lepidotrichium ^ E <UNK>@9 of . ( caudal fin skeleton ) <EOS>",
    "prediction": "caudal fin lepidotrichium := lepidotrichium ^ <UNK>@9 of the skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3008, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 3008, 613, 4381, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 28, 29, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 28, 29, 30, 33, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['caudal']",
      "replace   PRED[8:9] -> TAR[12:13] ['the'] -> ['fin']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 117,
  "example": {
    "sentence": "the articular system is <UNK>@4 anatomical system that consists of all the joint of the body . <EOS>",
    "target": "articular system := anatomical system ^ E consists of . ( joint of body ) <EOS>",
    "prediction": "articular system := <UNK>@4 anatomical system ^ E consists consists . ( all all <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 760, 1484, 296, 1, 2927, 1484, 1465, 4298, 2995, 3633, 1496, 1067, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 28, 16, 1, 31, 32, 34, 2, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 25, 5, 13, 27, 27, 16, 1, 29, 29, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 4,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['<UNK>@4'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['consists'] -> ['of']",
      "insert    PRED[11:11] -> TAR[11:12] [] -> ['joint']",
      "insert    PRED[11:11] -> TAR[12:13] [] -> ['of']",
      "replace   PRED[12:13] -> TAR[13:14] ['all'] -> ['body']",
      "replace   PRED[13:14] -> TAR[14:15] ['all'] -> [')']"
    ]
  }
}


{
  "_ID": 123,
  "example": {
    "sentence": "the dorsal fin lepidotrichium is a lepidotrichium that is <UNK>@9 of the dorsal fin skeleton . <EOS>",
    "target": "dorsal fin lepidotrichium := lepidotrichium ^ E <UNK>@9 of . ( dorsal fin skeleton ) <EOS>",
    "prediction": "dorsal fin lepidotrichium := lepidotrichium ^ <UNK>@9 of the skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3927, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 3927, 613, 4381, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 28, 29, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 28, 29, 30, 33, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['dorsal']",
      "replace   PRED[8:9] -> TAR[12:13] ['the'] -> ['fin']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 127,
  "example": {
    "sentence": "the pelvic fin lepidotrichium is a lepidotrichium that is <UNK>@9 of the pelvic fin skeleton . <EOS>",
    "target": "pelvic fin lepidotrichium := lepidotrichium ^ E <UNK>@9 of . ( pelvic fin skeleton ) <EOS>",
    "prediction": "pelvic fin lepidotrichium := lepidotrichium ^ <UNK>@9 of the skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2465, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 2465, 613, 4381, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 28, 29, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 28, 29, 30, 33, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['pelvic']",
      "replace   PRED[8:9] -> TAR[12:13] ['the'] -> ['fin']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 129,
  "example": {
    "sentence": "the anal fin lepidotrichium is a lepidotrichium that is <UNK>@9 of the anal fin skeleton . <EOS>",
    "target": "anal fin lepidotrichium := lepidotrichium ^ E <UNK>@9 of . ( anal fin skeleton ) <EOS>",
    "prediction": "anal fin lepidotrichium := lepidotrichium ^ <UNK>@9 of the skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 701, 613, 4381, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 28, 29, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 28, 29, 30, 33, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['anal']",
      "replace   PRED[8:9] -> TAR[12:13] ['the'] -> ['fin']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 135,
  "example": {
    "sentence": "the fin is a surface structure involved in locomotion . <EOS>",
    "target": "fin := surface structure ^ E involved in . ( locomotion ) <EOS>",
    "prediction": "fin := surface structure involved U in locomotion <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 613, 296, 1532, 3458, 1743, 3787, 3574, 2060, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 25, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 6, 26, 27, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['in']",
      "replace   PRED[5:6] -> TAR[8:9] ['U'] -> ['.']",
      "replace   PRED[6:7] -> TAR[9:10] ['in'] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 146,
  "example": {
    "sentence": "the pectoral fin lepidotrichium is a lepidotrichium that is <UNK>@9 of the pectoral fin skeleton . <EOS>",
    "target": "pectoral fin lepidotrichium := lepidotrichium ^ E <UNK>@9 of . ( pectoral fin skeleton ) <EOS>",
    "prediction": "pectoral fin lepidotrichium := lepidotrichium ^ <UNK>@9 of the skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 2918, 613, 4381, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 28, 29, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 28, 29, 30, 33, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['pectoral']",
      "replace   PRED[8:9] -> TAR[12:13] ['the'] -> ['fin']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 153,
  "example": {
    "sentence": "large animal <UNK>@2 the infrastructure may disrupt traffic . <EOS>",
    "target": "large animal <UNK>@2 infrastructure := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "large animal := infrastructure ^ E traffic traffic . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1650, 5233, 1, 1496, 3351, 1126, 1876, 2176, 1710, 0]",
    "target_idx": "[19, 20, 21, 23, 7, 12, 18, 25, 16, 1, 26, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 13, 26, 26, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['<UNK>@2']",
      "replace   PRED[4:5] -> TAR[4:5] ['^'] -> [':=']",
      "replace   PRED[5:6] -> TAR[5:6] ['E'] -> ['>=']",
      "replace   PRED[6:7] -> TAR[6:7] ['traffic'] -> ['0']",
      "replace   PRED[7:8] -> TAR[7:8] ['traffic'] -> ['disrupt']",
      "replace   PRED[10:11] -> TAR[10:11] ['T'] -> ['traffic']"
    ]
  }
}


{
  "_ID": 194,
  "example": {
    "sentence": "each employee is <UNK>@3 of a team . <EOS>",
    "target": "employee := E <UNK>@3 of . ( team ) <EOS>",
    "prediction": "each employee := <UNK>@3 of a team ^ a <EOS>"
  },
  "dump": {
    "sentence_idx": "[1788, 3976, 296, 1, 2995, 1532, 2554, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 25, 5, 24, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['each'] -> []",
      "insert    PRED[2:2] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[5:6] -> TAR[5:6] ['a'] -> ['.']",
      "replace   PRED[6:7] -> TAR[6:7] ['team'] -> ['(']",
      "replace   PRED[7:8] -> TAR[7:8] ['^'] -> ['team']",
      "replace   PRED[8:9] -> TAR[8:9] ['a'] -> [')']"
    ]
  }
}


{
  "_ID": 231,
  "example": {
    "sentence": "a team follow more than NUM side project . <EOS>",
    "target": "team := >= NUM more . ( project . ) <EOS>",
    "prediction": "team follow = NUM NUM side . ( side project ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 4922, 4582, 668, 2, 1844, 3722, 1710, 0]",
    "target_idx": "[20, 7, 12, 24, 22, 16, 1, 26, 27, 2, 0, 0]",
    "prediction_idx": "[20, 21, 8, 24, 24, 25, 16, 1, 25, 26, 2, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['follow'] -> []",
      "replace   PRED[2:3] -> TAR[1:2] ['='] -> [':=']",
      "replace   PRED[3:4] -> TAR[2:3] ['NUM'] -> ['>=']",
      "replace   PRED[5:6] -> TAR[4:5] ['side'] -> ['more']",
      "replace   PRED[8:9] -> TAR[7:8] ['side'] -> ['project']",
      "replace   PRED[9:10] -> TAR[8:9] ['project'] -> ['.']"
    ]
  }
}


{
  "_ID": 296,
  "example": {
    "sentence": "tiger are a <UNK>@3 of large feline that <UNK>@8 black stripe . <EOS>",
    "target": "tiger := large feline ^ E <UNK>@8 black stripe . ( T ) <EOS>",
    "prediction": "tiger := <UNK>@3 of large feline ^ E <UNK>@8 . ( black stripe ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4809, 3728, 1532, 1, 2995, 1650, 887, 1465, 1, 5296, 2417, 1710, 0]",
    "target_idx": "[19, 7, 24, 25, 5, 13, 27, 28, 29, 16, 1, 17, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 25, 5, 13, 27, 16, 1, 28, 29, 2, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 5,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "insert    PRED[8:8] -> TAR[7:8] [] -> ['black']",
      "insert    PRED[8:8] -> TAR[8:9] [] -> ['stripe']",
      "delete    PRED[11:12] -> TAR[10:10] ['black'] -> []",
      "replace   PRED[12:13] -> TAR[11:12] ['stripe'] -> ['T']"
    ]
  }
}


{
  "_ID": 298,
  "example": {
    "sentence": "a male lion <UNK>@3 not less than NUM female mate . <EOS>",
    "target": "male lion := >= NUM <UNK>@3 female mate . ( T ) <EOS>",
    "prediction": "male lion not NUM NUM not not . ( T ) ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4420, 232, 1, 2015, 2803, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 26, 22, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 23, 26, 26, 23, 23, 16, 1, 17, 2, 2, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> [':=']",
      "replace   PRED[2:3] -> TAR[3:4] ['not'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[5:6] ['NUM'] -> ['<UNK>@3']",
      "replace   PRED[5:6] -> TAR[6:7] ['not'] -> ['female']",
      "replace   PRED[6:7] -> TAR[7:8] ['not'] -> ['mate']",
      "delete    PRED[10:11] -> TAR[10:10] [')'] -> []"
    ]
  }
}


{
  "_ID": 299,
  "example": {
    "sentence": "giraffe are a <UNK>@3 of mammal that <UNK>@7 a long neck . <EOS>",
    "target": "giraffe := mammal ^ <UNK>@7 long neck . ( T ) <EOS>",
    "prediction": "giraffe := <UNK>@3 of mammal ^ E <UNK>@7 neck . ( long <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 1532, 1, 2995, 1156, 1465, 1, 1532, 1584, 81, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 26, 28, 29, 16, 1, 17, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 13, 26, 29, 16, 1, 28, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "replace   PRED[6:7] -> TAR[4:5] ['E'] -> ['<UNK>@7']",
      "replace   PRED[7:8] -> TAR[5:6] ['<UNK>@7'] -> ['long']",
      "insert    PRED[10:10] -> TAR[9:10] [] -> ['T']",
      "replace   PRED[11:12] -> TAR[10:11] ['long'] -> [')']"
    ]
  }
}


{
  "_ID": 359,
  "example": {
    "sentence": "gear are <UNK>@2 of engine . <EOS>",
    "target": "gear := E <UNK>@2 of . ( engine ) <EOS>",
    "prediction": "gear := <UNK>@2 of engine ^ <UNK>@2 <UNK>@2 engine . <EOS>"
  },
  "dump": {
    "sentence_idx": "[673, 3728, 1, 2995, 3592, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 21, 21, 23, 16, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "delete    PRED[4:5] -> TAR[4:4] ['engine'] -> []",
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []",
      "replace   PRED[6:7] -> TAR[5:6] ['<UNK>@2'] -> ['.']",
      "replace   PRED[7:8] -> TAR[6:7] ['<UNK>@2'] -> ['(']",
      "replace   PRED[9:10] -> TAR[8:9] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 394,
  "example": {
    "sentence": "every engine is also a complex energy production system that is <UNK>@11 of a motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E <UNK>@11 of . ( motorcycle ) <EOS>",
    "prediction": "engine := complex energy production system ^ <UNK>@11 <UNK>@11 a <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3592, 296, 5114, 1532, 2924, 3667, 3702, 1484, 1465, 296, 1, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 26, 27, 5, 13, 30, 31, 16, 1, 33, 2, 0]",
    "prediction_idx": "[20, 7, 24, 25, 26, 27, 5, 30, 30, 32, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 9,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['of']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[12:13] ['<UNK>@11'] -> ['motorcycle']",
      "replace   PRED[9:10] -> TAR[13:14] ['a'] -> [')']"
    ]
  }
}


{
  "_ID": 397,
  "example": {
    "sentence": "a power screwdriver is also a screwdriver that is <UNK>@9 <UNK>@10 the electric energy . <EOS>",
    "target": "power screwdriver := screwdriver ^ E <UNK>@9 <UNK>@10 . ( electric energy ) <EOS>",
    "prediction": "power screwdriver := screwdriver ^ <UNK>@9 <UNK>@10 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4964, 4051, 296, 5114, 1532, 4051, 1465, 296, 1, 1, 1496, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 21, 7, 25, 5, 13, 28, 29, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 21, 7, 25, 5, 28, 29, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['electric']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['energy']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 413,
  "example": {
    "sentence": "chainsaw are used only <UNK>@4 expert operator . <EOS>",
    "target": "chainsaw := A used <UNK>@4 . ( expert operator ) <EOS>",
    "prediction": "chainsaw := used expert operator ^ <UNK>@4 expert operator <EOS>"
  },
  "dump": {
    "sentence_idx": "[1225, 3728, 3942, 3546, 1, 4481, 2996, 1710, 0]",
    "target_idx": "[19, 7, 14, 21, 23, 16, 1, 24, 25, 2, 0]",
    "prediction_idx": "[19, 7, 21, 24, 25, 5, 23, 24, 25, 0, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['used'] -> ['A']",
      "replace   PRED[3:4] -> TAR[3:4] ['expert'] -> ['used']",
      "replace   PRED[4:5] -> TAR[4:5] ['operator'] -> ['<UNK>@4']",
      "replace   PRED[5:6] -> TAR[5:6] ['^'] -> ['.']",
      "replace   PRED[6:7] -> TAR[6:7] ['<UNK>@4'] -> ['(']",
      "insert    PRED[8:8] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 417,
  "example": {
    "sentence": "chainsaw are a <UNK>@3 of saw that are <UNK>@8 <UNK>@9 electric energy . <EOS>",
    "target": "chainsaw := saw ^ E <UNK>@8 <UNK>@9 . ( electric energy ) <EOS>",
    "prediction": "chainsaw := <UNK>@3 of saw ^ <UNK>@8 <UNK>@9 electric energy <EOS>"
  },
  "dump": {
    "sentence_idx": "[1225, 3728, 1532, 1, 2995, 307, 1465, 3728, 1, 1, 2493, 3667, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 13, 27, 28, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 27, 28, 29, 30, 0, 0, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "insert    PRED[5:5] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 424,
  "example": {
    "sentence": "all power screwdriver are also screwdriver that are <UNK>@8 <UNK>@9 the electric energy . <EOS>",
    "target": "power screwdriver := screwdriver ^ E <UNK>@8 <UNK>@9 . ( electric energy ) <EOS>",
    "prediction": "power screwdriver := screwdriver ^ <UNK>@8 <UNK>@9 <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4964, 4051, 3728, 5114, 4051, 1465, 3728, 1, 1, 1496, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 27, 28, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['electric']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['energy']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 23,
  "example": {
    "sentence": "a gonochoristic organism is a multi-cellular organism that <UNK>@8 male and female sex . <EOS>",
    "target": "gonochoristic organism := multi-cellular organism ^ E <UNK>@8 sex . ( male sex ) ^ E <UNK>@8 sex . ( female sex ) <EOS>",
    "prediction": "gonochoristic organism := multi-cellular organism ^ E <UNK>@8 . ( male sex ^ female sex ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 567, 4122, 296, 1532, 1946, 4122, 1465, 1, 4420, 2258, 123, 5155, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 31, 16, 1, 28, 31, 2, 5, 13, 27, 31, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 31, 5, 30, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 9,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['sex']",
      "insert    PRED[11:11] -> TAR[13:14] [] -> [')']",
      "insert    PRED[12:12] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[12:12] -> TAR[16:17] [] -> ['<UNK>@8']",
      "insert    PRED[12:12] -> TAR[17:18] [] -> ['sex']",
      "insert    PRED[12:12] -> TAR[18:19] [] -> ['.']",
      "insert    PRED[12:12] -> TAR[19:20] [] -> ['(']"
    ]
  }
}


{
  "_ID": 28,
  "example": {
    "sentence": "craniofacial skeleton is a cranial skeleton <UNK>@6 <UNK>@7 neural crest cell . <EOS>",
    "target": "craniofacial skeleton := cranial skeleton ^ E <UNK>@6 <UNK>@7 . ( neural crest cell ) <EOS>",
    "prediction": "craniofacial skeleton := cranial skeleton <UNK>@6 ^ <UNK>@7 neural crest <EOS>"
  },
  "dump": {
    "sentence_idx": "[3598, 4381, 296, 1532, 4495, 4381, 1, 1, 5343, 5025, 3311, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 25, 26, 16, 1, 27, 28, 29, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 5, 26, 27, 28, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 6,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['<UNK>@7']",
      "replace   PRED[6:7] -> TAR[9:10] ['^'] -> ['.']",
      "replace   PRED[7:8] -> TAR[10:11] ['<UNK>@7'] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['cell']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 126,
  "example": {
    "sentence": "the pectoral fin skeleton is a paired fin skeleton that consists of the <UNK>@13 endochondral proximal and distal radial and the dermal fin ray or lepidotrichia . <EOS>",
    "target": "pectoral fin skeleton := paired fin skeleton ^ E consists of . ( <UNK>@13 endochondral proximal U distal radial U dermal fin ray U dermal fin lepidotrichia ) <EOS>",
    "prediction": "pectoral fin skeleton := paired fin skeleton ^ E consists of . ( the <UNK>@13 endochondral U distal fin ray U lepidotrichia fin ray ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 4381, 296, 1532, 2424, 613, 4381, 1465, 4298, 2995, 1496, 1, 3425, 2134, 2258, 999, 1415, 2258, 1496, 280, 613, 3098, 1048, 3483, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 30, 16, 1, 32, 33, 34, 6, 36, 37, 6, 40, 41, 42, 6, 40, 41, 44, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 30, 16, 1, 31, 32, 33, 6, 36, 41, 42, 6, 44, 41, 42, 2, 0, 0, 0, 0]"
  },
  "accuracy": 0.552,
  "tokens_OK": 16,
  "tokens_tot": 29,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[13:14] -> TAR[12:12] ['the'] -> []",
      "insert    PRED[15:15] -> TAR[15:16] [] -> ['proximal']",
      "insert    PRED[17:17] -> TAR[18:19] [] -> ['radial']",
      "insert    PRED[17:17] -> TAR[19:20] [] -> ['U']",
      "insert    PRED[17:17] -> TAR[20:21] [] -> ['dermal']",
      "replace   PRED[21:22] -> TAR[24:25] ['lepidotrichia'] -> ['dermal']",
      "replace   PRED[23:24] -> TAR[26:27] ['ray'] -> ['lepidotrichia']"
    ]
  }
}


{
  "_ID": 147,
  "example": {
    "sentence": "a boat race or regatta is something that <UNK>@8 disrupt traffic . <EOS>",
    "target": "boat race := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "boat race := ! E ( disrupt ^ disrupt ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 537, 839, 1048, 1489, 296, 1307, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 18, 28, 16, 1, 29, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 15, 13, 1, 28, 5, 28, 2, 16, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['!'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['E'] -> ['>=']",
      "replace   PRED[5:6] -> TAR[4:5] ['('] -> ['0']",
      "replace   PRED[7:8] -> TAR[6:7] ['^'] -> ['.']",
      "replace   PRED[8:9] -> TAR[7:8] ['disrupt'] -> ['(']",
      "replace   PRED[9:10] -> TAR[8:9] [')'] -> ['traffic']",
      "replace   PRED[10:11] -> TAR[9:10] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 160,
  "example": {
    "sentence": "a commercial event is <UNK>@4 event which <UNK>@7 disrupt traffic . <EOS>",
    "target": "commercial event := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "commercial event := event which <UNK>@7 U traffic <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 122, 4512, 296, 1, 4512, 4518, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 18, 27, 16, 1, 28, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 6, 28, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['>=']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['0']",
      "replace   PRED[4:5] -> TAR[7:8] ['which'] -> ['disrupt']",
      "replace   PRED[5:6] -> TAR[8:9] ['<UNK>@7'] -> ['.']",
      "replace   PRED[6:7] -> TAR[9:10] ['U'] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 165,
  "example": {
    "sentence": "herd of animal <UNK>@3 the infrastructure may disrupt traffic . <EOS>",
    "target": "herd of animal <UNK>@3 infrastructure := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "herd of animal := infrastructure may ^ E traffic traffic . ( <EOS> ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4055, 2995, 5233, 1, 1496, 3351, 1126, 1876, 2176, 1710, 0]",
    "target_idx": "[19, 20, 21, 22, 24, 7, 12, 18, 26, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 25, 5, 13, 27, 27, 16, 1, 29, 2, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 5,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] [':='] -> ['<UNK>@3']",
      "delete    PRED[5:6] -> TAR[4:4] ['may'] -> []",
      "replace   PRED[6:7] -> TAR[5:6] ['^'] -> [':=']",
      "replace   PRED[7:8] -> TAR[6:7] ['E'] -> ['>=']",
      "replace   PRED[8:9] -> TAR[7:8] ['traffic'] -> ['0']",
      "replace   PRED[9:10] -> TAR[8:9] ['traffic'] -> ['disrupt']",
      "replace   PRED[12:13] -> TAR[11:12] ['<EOS>'] -> ['traffic']"
    ]
  }
}


{
  "_ID": 173,
  "example": {
    "sentence": "a university or a college is <UNK>@6 institution of <UNK>@9 education . <EOS>",
    "target": "university U college := institution of <UNK>@9 education <EOS>",
    "prediction": "university := ! E <UNK>@6 of ^ college ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2271, 1048, 1532, 4190, 296, 1, 4110, 2995, 1, 1174, 1710, 0]",
    "target_idx": "[20, 6, 23, 7, 26, 27, 28, 29, 0, 0]",
    "prediction_idx": "[20, 7, 15, 13, 25, 27, 5, 23, 2, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['U']",
      "replace   PRED[2:3] -> TAR[2:3] ['!'] -> ['college']",
      "replace   PRED[3:4] -> TAR[3:4] ['E'] -> [':=']",
      "replace   PRED[4:5] -> TAR[4:5] ['<UNK>@6'] -> ['institution']",
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []",
      "replace   PRED[7:8] -> TAR[6:7] ['college'] -> ['<UNK>@9']",
      "replace   PRED[8:9] -> TAR[7:8] [')'] -> ['education']"
    ]
  }
}


{
  "_ID": 197,
  "example": {
    "sentence": "<UNK>@0 integumentary papilla is <UNK>@4 odontogenic papilla that is located in the integument . <EOS>",
    "target": "integumentary papilla := odontogenic papilla ^ E located in . ( integument ) <EOS>",
    "prediction": "<UNK>@0 integumentary papilla := <UNK>@4 odontogenic papilla ^ located in <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 2639, 5055, 296, 1, 3698, 5055, 1465, 296, 3886, 3574, 1496, 4967, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 23, 24, 25, 5, 28, 29, 0, 0, 0, 0]"
  },
  "accuracy": 0.071,
  "tokens_OK": 1,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['<UNK>@4'] -> []",
      "insert    PRED[7:7] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[9:9] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['integument']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 281,
  "example": {
    "sentence": "male lion <UNK>@2 not less than NUM female mate . <EOS>",
    "target": "male lion := >= NUM <UNK>@2 female mate . ( T ) <EOS>",
    "prediction": "male <UNK>@2 := = NUM not . ( female mate ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[4420, 232, 1, 2015, 2803, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[19, 20, 7, 12, 25, 21, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 21, 7, 8, 25, 22, 16, 1, 26, 27, 2, 0, 0]"
  },
  "accuracy": 0.308,
  "tokens_OK": 4,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] ['<UNK>@2'] -> ['lion']",
      "replace   PRED[3:4] -> TAR[3:4] ['='] -> ['>=']",
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['<UNK>@2']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['female']",
      "replace   PRED[5:6] -> TAR[7:8] ['not'] -> ['mate']",
      "delete    PRED[8:9] -> TAR[9:9] ['female'] -> []",
      "replace   PRED[9:10] -> TAR[10:11] ['mate'] -> ['T']"
    ]
  }
}


{
  "_ID": 289,
  "example": {
    "sentence": "the male lion <UNK>@3 not less than NUM female mate . <EOS>",
    "target": "male lion := >= NUM <UNK>@3 female mate . ( T ) <EOS>",
    "prediction": "male lion <UNK>@3 := = NUM not . ( female mate ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4420, 232, 1, 2015, 2803, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 26, 22, 27, 28, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 8, 26, 23, 16, 1, 27, 28, 2, 0]"
  },
  "accuracy": 0.308,
  "tokens_OK": 4,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['='] -> ['>=']",
      "insert    PRED[5:5] -> TAR[5:6] [] -> ['<UNK>@3']",
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['female']",
      "replace   PRED[6:7] -> TAR[7:8] ['not'] -> ['mate']",
      "delete    PRED[9:10] -> TAR[9:9] ['female'] -> []",
      "replace   PRED[10:11] -> TAR[10:11] ['mate'] -> ['T']"
    ]
  }
}


{
  "_ID": 358,
  "example": {
    "sentence": "car are mean of transportation that are <UNK>@7 <UNK>@8 fuel or electric energy . <EOS>",
    "target": "car := mean of transportation ^ E <UNK>@7 <UNK>@8 . ( fuel U electric energy ) <EOS>",
    "prediction": "car := mean <UNK>@7 . ( <UNK>@7 <UNK>@8 U electric energy ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1877, 3728, 3357, 2995, 1839, 1465, 3728, 1, 1, 4783, 1048, 2493, 3667, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 5, 13, 26, 27, 16, 1, 28, 6, 30, 31, 2, 0]",
    "prediction_idx": "[19, 7, 21, 26, 16, 1, 26, 27, 6, 30, 31, 2, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.235,
  "tokens_OK": 4,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['of']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['transportation']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> ['<UNK>@8']",
      "delete    PRED[6:7] -> TAR[10:10] ['<UNK>@7'] -> []",
      "replace   PRED[7:8] -> TAR[11:12] ['<UNK>@8'] -> ['fuel']"
    ]
  }
}


{
  "_ID": 391,
  "example": {
    "sentence": "cross blade screwdriver are a <UNK>@5 of screwdriver that <UNK>@9 cross blade . <EOS>",
    "target": "cross blade screwdriver := screwdriver ^ E <UNK>@9 cross blade . ( T ) <EOS>",
    "prediction": "cross blade screwdriver := <UNK>@5 of screwdriver ^ <UNK>@9 cross blade <EOS>"
  },
  "dump": {
    "sentence_idx": "[1420, 4716, 4051, 3728, 1532, 1, 2995, 4051, 1465, 1, 1420, 4716, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 26, 5, 13, 28, 29, 30, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 25, 26, 5, 28, 29, 30, 0, 0, 0, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 5,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@5'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "insert    PRED[7:7] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[10:10] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[10:10] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[10:10] -> TAR[12:13] [] -> ['T']",
      "insert    PRED[10:10] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 402,
  "example": {
    "sentence": "flat blade screwdriver are a <UNK>@5 of screwdriver that <UNK>@9 a flat blade . <EOS>",
    "target": "flat blade screwdriver := screwdriver ^ E <UNK>@9 flat blade . ( T ) <EOS>",
    "prediction": "flat blade screwdriver := <UNK>@5 of screwdriver ^ E <UNK>@9 . ( flat blade )"
  },
  "dump": {
    "sentence_idx": "[4041, 4716, 4051, 3728, 1532, 1, 2995, 4051, 1465, 1, 1532, 4041, 4716, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 26, 5, 13, 28, 30, 31, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 25, 26, 5, 13, 28, 16, 1, 30, 31, 2]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@5'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "insert    PRED[9:9] -> TAR[8:9] [] -> ['flat']",
      "insert    PRED[9:9] -> TAR[9:10] [] -> ['blade']",
      "replace   PRED[12:13] -> TAR[12:13] ['flat'] -> ['T']",
      "replace   PRED[13:14] -> TAR[13:14] ['blade'] -> [')']",
      "replace   PRED[14:15] -> TAR[14:15] [')'] -> ['<EOS>']"
    ]
  }
}


{
  "_ID": 423,
  "example": {
    "sentence": "rake are used in <UNK>@4 activity . <EOS>",
    "target": "rake := E used in . ( <UNK>@4 activity ) <EOS>",
    "prediction": "rake := used in <UNK>@4 ^ E <UNK>@4 . ( . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4741, 3728, 3942, 3574, 1, 2231, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 24, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 13, 23, 16, 1, 25, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "delete    PRED[4:5] -> TAR[4:4] ['<UNK>@4'] -> []",
      "replace   PRED[5:6] -> TAR[5:6] ['^'] -> ['.']",
      "replace   PRED[6:7] -> TAR[6:7] ['E'] -> ['(']",
      "delete    PRED[8:9] -> TAR[7:7] ['.'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['('] -> ['activity']",
      "replace   PRED[10:11] -> TAR[9:10] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 12,
  "example": {
    "sentence": "carnivore are exactly <UNK>@3 animal that eat also animal . <EOS>",
    "target": "carnivore := animal ^ E eat . ( animal ) <EOS>",
    "prediction": "carnivore := exactly <EOS>"
  },
  "dump": {
    "sentence_idx": "[3741, 3728, 4082, 1, 5233, 1465, 2867, 5114, 5233, 1710, 0]",
    "target_idx": "[19, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 7, 21, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['animal']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['^']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[1:1] -> TAR[5:6] [] -> ['eat']",
      "insert    PRED[1:1] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[1:1] -> TAR[7:8] [] -> ['(']",
      "insert    PRED[1:1] -> TAR[8:9] [] -> ['animal']",
      "replace   PRED[2:3] -> TAR[9:10] ['exactly'] -> [')']"
    ]
  }
}


{
  "_ID": 29,
  "example": {
    "sentence": "caprina pizza <UNK>@2 a very high-calorie content . <EOS>",
    "target": "caprina pizza := E <UNK>@2 content . ( very high-calorie content ) <EOS>",
    "prediction": "caprina pizza <UNK>@2 := very <EOS>"
  },
  "dump": {
    "sentence_idx": "[4998, 2430, 1, 1532, 2027, 3803, 2436, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 21, 25, 16, 1, 23, 24, 25, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 23, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> [':=']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['content']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['.']",
      "replace   PRED[3:4] -> TAR[7:8] [':='] -> ['(']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['high-calorie']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['content']",
      "insert    PRED[4:4] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 46,
  "example": {
    "sentence": "a real italian pizza is a <UNK>@6 of pizza that <UNK>@10 only <UNK>@12 thin and crispy basis . <EOS>",
    "target": "real italian pizza := pizza ^ A <UNK>@12 . ( thin basis ^ crispy basis ) <EOS>",
    "prediction": "real italian pizza := <UNK>@6 of pizza ^ A <UNK>@10 . ( <UNK>@12 thin ) ^ A <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3411, 2728, 2430, 296, 1532, 1, 2995, 2430, 1465, 1, 3546, 1, 4782, 2258, 5121, 2472, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 27, 5, 14, 31, 16, 1, 32, 35, 5, 34, 35, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 14, 29, 16, 1, 31, 32, 2, 5, 14, 0]"
  },
  "accuracy": 0.278,
  "tokens_OK": 5,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@6'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "replace   PRED[9:10] -> TAR[7:8] ['<UNK>@10'] -> ['<UNK>@12']",
      "delete    PRED[12:13] -> TAR[9:9] ['<UNK>@12'] -> []",
      "replace   PRED[14:15] -> TAR[11:12] [')'] -> ['basis']",
      "insert    PRED[15:15] -> TAR[13:14] [] -> ['crispy']",
      "insert    PRED[15:15] -> TAR[14:15] [] -> ['basis']",
      "replace   PRED[16:17] -> TAR[15:16] ['A'] -> [')']"
    ]
  }
}


{
  "_ID": 49,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that secretes dentine matrix , is <UNK>@12 <UNK>@13 the odontogenic papilla , and develop <UNK>@20 a preodontoblast cell . <EOS>",
    "target": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E <UNK>@12 <UNK>@13 . ( odontogenic papilla ) ^ E develop <UNK>@20 . ( preodontoblast cell ) <EOS>",
    "prediction": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E secretes . ( <UNK>@12 <UNK>@13 ) ^ E secretes . ( develop <UNK>@20 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 2317, 296, 1, 1, 1496, 3698, 5055, 2317, 2258, 3102, 1, 1532, 381, 3311, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 31, 32, 16, 1, 34, 35, 2, 5, 13, 38, 39, 16, 1, 41, 42, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 26, 16, 1, 31, 32, 2, 5, 13, 26, 16, 1, 38, 39, 2, 0, 0, 0]"
  },
  "accuracy": 0.484,
  "tokens_OK": 15,
  "tokens_tot": 31,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['<UNK>@12']",
      "replace   PRED[14:15] -> TAR[15:16] ['secretes'] -> ['<UNK>@13']",
      "replace   PRED[17:18] -> TAR[18:19] ['<UNK>@12'] -> ['odontogenic']",
      "replace   PRED[18:19] -> TAR[19:20] ['<UNK>@13'] -> ['papilla']",
      "insert    PRED[21:21] -> TAR[23:24] [] -> ['develop']",
      "replace   PRED[22:23] -> TAR[24:25] ['secretes'] -> ['<UNK>@20']",
      "replace   PRED[25:26] -> TAR[27:28] ['develop'] -> ['preodontoblast']",
      "replace   PRED[26:27] -> TAR[28:29] ['<UNK>@20'] -> ['cell']"
    ]
  }
}


{
  "_ID": 51,
  "example": {
    "sentence": "a tetraploid is cell or organism <UNK>@6 NUM set of chromosome . <EOS>",
    "target": "tetraploid := ( cell U organism ) ^ = NUM <UNK>@6 chromosome . ( set ) <EOS>",
    "prediction": "tetraploid := cell ^ >= NUM <UNK>@6 set . ( set of chromosome ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3421, 296, 3311, 1048, 4122, 1, 2, 1238, 2995, 3493, 1710, 0]",
    "target_idx": "[20, 7, 1, 22, 6, 24, 2, 5, 8, 26, 25, 29, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 12, 26, 25, 27, 16, 1, 27, 28, 29, 2, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['U']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['organism']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> [')']",
      "replace   PRED[4:5] -> TAR[8:9] ['>='] -> ['=']",
      "replace   PRED[7:8] -> TAR[11:12] ['set'] -> ['chromosome']",
      "delete    PRED[11:12] -> TAR[14:14] ['of'] -> []",
      "delete    PRED[12:13] -> TAR[14:14] ['chromosome'] -> []"
    ]
  }
}


{
  "_ID": 64,
  "example": {
    "sentence": "integumentary skeleton is a skeletal subdivision that is <UNK>@8 of the extra-oral dermal skeletal system . <EOS>",
    "target": "integumentary skeleton := skeletal subdivision ^ E <UNK>@8 of . ( extra-oral dermal skeletal system ) <EOS>",
    "prediction": "integumentary skeleton := skeletal subdivision ^ E ( of ^ <UNK>@8 ) . ( extra-oral the dermal <EOS>"
  },
  "dump": {
    "sentence_idx": "[2639, 4381, 296, 1532, 3051, 5142, 1465, 296, 1, 2995, 1496, 4137, 280, 3051, 1484, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 33, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 1, 28, 5, 27, 2, 16, 1, 30, 29, 31, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 9,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['('] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['of'] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['^'] -> []",
      "replace   PRED[11:12] -> TAR[8:9] [')'] -> ['of']",
      "insert    PRED[14:14] -> TAR[12:13] [] -> ['dermal']",
      "insert    PRED[14:14] -> TAR[13:14] [] -> ['skeletal']",
      "replace   PRED[15:16] -> TAR[14:15] ['the'] -> ['system']",
      "replace   PRED[16:17] -> TAR[15:16] ['dermal'] -> [')']"
    ]
  }
}


{
  "_ID": 76,
  "example": {
    "sentence": "the acellular bone tissue is a mineralized bone tissue that <UNK>@10 <UNK>@11 differentiated osteoblast but lack osteocyte . <EOS>",
    "target": "acellular bone tissue := mineralized bone tissue ^ E <UNK>@10 <UNK>@11 differentiated osteoblast . ( T ) ^ E lack . ( osteocyte ) <EOS>",
    "prediction": "acellular bone tissue := mineralized bone tissue ^ E <UNK>@10 . ( <UNK>@11 differentiated osteoblast U ^ E osteocyte . ( lack osteocyte ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1200, 432, 3846, 296, 1532, 4878, 432, 3846, 1465, 1, 1, 2457, 933, 3926, 4971, 4758, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 30, 31, 32, 16, 1, 17, 2, 5, 13, 34, 16, 1, 35, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 16, 1, 30, 31, 32, 6, 5, 13, 35, 16, 1, 34, 35, 2, 0]"
  },
  "accuracy": 0.52,
  "tokens_OK": 13,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[10:11] -> TAR[9:9] ['.'] -> []",
      "delete    PRED[11:12] -> TAR[9:9] ['('] -> []",
      "insert    PRED[14:14] -> TAR[13:14] [] -> ['.']",
      "insert    PRED[14:14] -> TAR[14:15] [] -> ['(']",
      "insert    PRED[14:14] -> TAR[15:16] [] -> ['T']",
      "replace   PRED[15:16] -> TAR[16:17] ['U'] -> [')']",
      "replace   PRED[18:19] -> TAR[19:20] ['osteocyte'] -> ['lack']",
      "delete    PRED[21:22] -> TAR[21:21] ['lack'] -> []"
    ]
  }
}


{
  "_ID": 114,
  "example": {
    "sentence": "the perichondral bone is the bone element that is located <UNK>@10 the surface of a cartilage element . <EOS>",
    "target": "perichondral bone := bone element ^ E located <UNK>@10 . ( surface of cartilage element ) <EOS>",
    "prediction": "perichondral bone := bone element ^ located <UNK>@10 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1598, 432, 296, 1496, 432, 1791, 1465, 296, 3886, 1, 1496, 3458, 2995, 1532, 1005, 1791, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 32, 34, 35, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 28, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.412,
  "tokens_OK": 7,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['surface']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['of']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['cartilage']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['element']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 132,
  "example": {
    "sentence": "a public event is <UNK>@4 organized event which <UNK>@8 disrupt traffic . <EOS>",
    "target": "public event := organized event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "public event := organized organized which <UNK>@8 U traffic <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4918, 4512, 296, 1, 4006, 4512, 4518, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 12, 18, 28, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 24, 26, 27, 6, 29, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.357,
  "tokens_OK": 5,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['event']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['>=']",
      "replace   PRED[4:5] -> TAR[7:8] ['organized'] -> ['0']",
      "replace   PRED[5:6] -> TAR[8:9] ['which'] -> ['disrupt']",
      "replace   PRED[6:7] -> TAR[9:10] ['<UNK>@8'] -> ['.']",
      "replace   PRED[7:8] -> TAR[10:11] ['U'] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 170,
  "example": {
    "sentence": "a school is a building or location that is used <UNK>@10 instructional class . <EOS>",
    "target": "school := ( building U location ) ^ E used <UNK>@10 . ( instructional class ) <EOS>",
    "prediction": "school := building ^ E ( <UNK>@10 ^ used ) . ( <UNK>@10 instructional class ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3514, 296, 1532, 4707, 1048, 267, 1465, 296, 3942, 1, 4876, 5095, 1710, 0]",
    "target_idx": "[20, 7, 1, 23, 6, 25, 2, 5, 13, 28, 29, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 1, 29, 5, 28, 2, 16, 1, 29, 30, 31, 2, 0]"
  },
  "accuracy": 0.412,
  "tokens_OK": 7,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "replace   PRED[3:4] -> TAR[4:5] ['^'] -> ['U']",
      "replace   PRED[4:5] -> TAR[5:6] ['E'] -> ['location']",
      "replace   PRED[5:6] -> TAR[6:7] ['('] -> [')']",
      "replace   PRED[6:7] -> TAR[7:8] ['<UNK>@10'] -> ['^']",
      "replace   PRED[7:8] -> TAR[8:9] ['^'] -> ['E']",
      "replace   PRED[9:10] -> TAR[10:11] [')'] -> ['<UNK>@10']",
      "delete    PRED[12:13] -> TAR[12:12] ['<UNK>@10'] -> []"
    ]
  }
}


{
  "_ID": 224,
  "example": {
    "sentence": "every stakeholder is involved in more than NUM project . <EOS>",
    "target": "stakeholder := > NUM involved in . ( project ) <EOS>",
    "prediction": "stakeholder := involved in ^ = NUM NUM . ( T <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4936, 296, 3787, 3574, 4582, 668, 2, 3722, 1710, 0]",
    "target_idx": "[20, 7, 11, 26, 22, 23, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 8, 26, 26, 16, 1, 17, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['involved'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['in'] -> []",
      "replace   PRED[4:5] -> TAR[2:3] ['^'] -> ['>']",
      "replace   PRED[5:6] -> TAR[3:4] ['='] -> ['NUM']",
      "replace   PRED[6:7] -> TAR[4:5] ['NUM'] -> ['involved']",
      "replace   PRED[7:8] -> TAR[5:6] ['NUM'] -> ['in']",
      "insert    PRED[9:9] -> TAR[8:9] [] -> ['project']",
      "replace   PRED[10:11] -> TAR[9:10] ['T'] -> [')']"
    ]
  }
}


{
  "_ID": 287,
  "example": {
    "sentence": "<UNK>@0 male lion <UNK>@3 at least NUM female mate . <EOS>",
    "target": "male lion := >= NUM <UNK>@3 female mate . ( T ) <EOS>",
    "prediction": "<UNK>@0 male := > NUM lion . ( female ) ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 4420, 232, 1, 2305, 4025, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 25, 22, 26, 27, 16, 1, 17, 2, 0]",
    "prediction_idx": "[19, 20, 7, 11, 25, 21, 16, 1, 26, 2, 2, 0, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "replace   PRED[0:1] -> TAR[0:1] ['<UNK>@0'] -> ['male']",
      "replace   PRED[1:2] -> TAR[1:2] ['male'] -> ['lion']",
      "replace   PRED[3:4] -> TAR[3:4] ['>'] -> ['>=']",
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['<UNK>@3']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['female']",
      "replace   PRED[5:6] -> TAR[7:8] ['lion'] -> ['mate']",
      "delete    PRED[8:9] -> TAR[9:9] ['female'] -> []",
      "replace   PRED[9:10] -> TAR[10:11] [')'] -> ['T']"
    ]
  }
}


{
  "_ID": 53,
  "example": {
    "sentence": "any pizza that <UNK>@3 at least NUM cheese topping is <UNK>@10 cheesey pizza . <EOS>",
    "target": "cheesey pizza := pizza ^ >= NUM <UNK>@3 topping . ( cheese topping ) <EOS>",
    "prediction": "pizza := ( > NUM && > NUM ) pizza . ( cheese topping pizza <EOS>"
  },
  "dump": {
    "sentence_idx": "[2133, 2430, 1465, 1, 2305, 4025, 2, 1620, 1154, 296, 1, 134, 2430, 1710, 0]",
    "target_idx": "[30, 31, 7, 31, 5, 12, 25, 22, 27, 16, 1, 26, 27, 2, 0, 0]",
    "prediction_idx": "[20, 7, 1, 11, 25, 3, 11, 25, 2, 20, 16, 1, 26, 27, 31, 0]"
  },
  "accuracy": 0.062,
  "tokens_OK": 1,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['cheesey']",
      "delete    PRED[2:3] -> TAR[2:2] ['('] -> []",
      "delete    PRED[3:4] -> TAR[2:2] ['>'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['NUM'] -> ['pizza']",
      "replace   PRED[5:6] -> TAR[4:5] ['&&'] -> ['^']",
      "replace   PRED[6:7] -> TAR[5:6] ['>'] -> ['>=']",
      "replace   PRED[8:9] -> TAR[7:8] [')'] -> ['<UNK>@3']",
      "replace   PRED[9:10] -> TAR[8:9] ['pizza'] -> ['topping']",
      "replace   PRED[14:15] -> TAR[13:14] ['pizza'] -> [')']"
    ]
  }
}


{
  "_ID": 62,
  "example": {
    "sentence": "any pizza that <UNK>@3 at least NUM meat topping is a meaty pizza . <EOS>",
    "target": "meaty pizza := pizza ^ >= a <UNK>@3 topping . ( meat topping ) <EOS>",
    "prediction": "pizza := ( > NUM && > NUM ) pizza . ( meat topping ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[2133, 2430, 1465, 1, 2305, 4025, 2, 2605, 1154, 296, 1532, 3850, 2430, 1710, 0]",
    "target_idx": "[30, 31, 7, 31, 5, 12, 29, 22, 27, 16, 1, 26, 27, 2, 0, 0]",
    "prediction_idx": "[20, 7, 1, 11, 25, 3, 11, 25, 2, 20, 16, 1, 26, 27, 2, 0]"
  },
  "accuracy": 0.062,
  "tokens_OK": 1,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['meaty']",
      "delete    PRED[2:3] -> TAR[2:2] ['('] -> []",
      "delete    PRED[3:4] -> TAR[2:2] ['>'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['NUM'] -> ['pizza']",
      "replace   PRED[5:6] -> TAR[4:5] ['&&'] -> ['^']",
      "replace   PRED[6:7] -> TAR[5:6] ['>'] -> ['>=']",
      "replace   PRED[7:8] -> TAR[6:7] ['NUM'] -> ['a']",
      "replace   PRED[8:9] -> TAR[7:8] [')'] -> ['<UNK>@3']",
      "replace   PRED[9:10] -> TAR[8:9] ['pizza'] -> ['topping']"
    ]
  }
}


{
  "_ID": 89,
  "example": {
    "sentence": "a ossified ligament is a sesamoid that develop <UNK>@8 a ligament , distal <UNK>@13 <UNK>@14 articulation or joint . <EOS>",
    "target": "ossified ligament := sesamoid ^ E develop <UNK>@8 . ( ligament ) ^ E distal <UNK>@13 . ( articulation U joint ) <EOS>",
    "prediction": "ossified ligament := sesamoid ^ E develop <UNK>@8 . ( ligament U distal <UNK>@13 <UNK>@14 articulation U joint ) articulation ( distal <UNK>@13 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1314, 2431, 296, 1532, 1530, 1465, 3102, 1, 1532, 2431, 2317, 999, 1, 1, 2296, 1048, 1067, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 2, 5, 13, 31, 32, 16, 1, 34, 6, 36, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 6, 31, 32, 33, 34, 6, 36, 2, 34, 1, 31, 32, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 12,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[10:10] -> TAR[11:12] [] -> [')']",
      "insert    PRED[10:10] -> TAR[12:13] [] -> ['^']",
      "replace   PRED[11:12] -> TAR[13:14] ['U'] -> ['E']",
      "insert    PRED[13:13] -> TAR[16:17] [] -> ['.']",
      "replace   PRED[14:15] -> TAR[17:18] ['<UNK>@14'] -> ['(']",
      "delete    PRED[19:20] -> TAR[21:21] ['articulation'] -> []",
      "delete    PRED[20:21] -> TAR[21:21] ['('] -> []",
      "delete    PRED[21:22] -> TAR[21:21] ['distal'] -> []",
      "delete    PRED[22:23] -> TAR[21:21] ['<UNK>@13'] -> []"
    ]
  }
}


{
  "_ID": 106,
  "example": {
    "sentence": "<UNK>@0 osteoblast is a skeletogenic cell that is located adjacent <UNK>@10 or <UNK>@12 osteoid tissue . <EOS>",
    "target": "osteoblast := skeletogenic cell ^ E ( located adjacent <UNK>@10 ^ located <UNK>@12 ) . ( osteoid tissue ) <EOS>",
    "prediction": "<UNK>@0 osteoblast := skeletogenic cell ^ E located adjacent . ( <UNK>@10 U <UNK>@12 osteoid tissue ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 933, 296, 1532, 2254, 3311, 1465, 296, 3886, 2938, 1, 1048, 1, 1339, 3846, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 1, 27, 28, 29, 5, 27, 31, 2, 16, 1, 32, 33, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 29, 6, 31, 32, 33, 2, 0, 0, 0]"
  },
  "accuracy": 0.15,
  "tokens_OK": 3,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "insert    PRED[6:6] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['<UNK>@10']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['^']",
      "replace   PRED[9:10] -> TAR[11:12] ['.'] -> ['located']",
      "replace   PRED[10:11] -> TAR[12:13] ['('] -> ['<UNK>@12']",
      "replace   PRED[11:12] -> TAR[13:14] ['<UNK>@10'] -> [')']",
      "replace   PRED[12:13] -> TAR[14:15] ['U'] -> ['.']",
      "replace   PRED[13:14] -> TAR[15:16] ['<UNK>@12'] -> ['(']"
    ]
  }
}


{
  "_ID": 111,
  "example": {
    "sentence": "the oropharyngeal papilla is <UNK>@4 odontogenic papilla located <UNK>@8 the jaw or pharyngeal skeleton . <EOS>",
    "target": "oropharyngeal papilla := odontogenic papilla ^ E located <UNK>@8 . ( jaw U pharyngeal skeleton ) <EOS>",
    "prediction": "oropharyngeal papilla := <UNK>@4 odontogenic papilla located ^ pharyngeal skeleton skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3126, 5055, 296, 1, 3698, 5055, 3886, 1, 1496, 901, 1048, 3919, 4381, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 26, 27, 16, 1, 29, 6, 31, 32, 2, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 25, 26, 5, 31, 32, 32, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.235,
  "tokens_OK": 4,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['<UNK>@4'] -> []",
      "insert    PRED[5:5] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['<UNK>@8']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['jaw']",
      "replace   PRED[7:8] -> TAR[12:13] ['^'] -> ['U']",
      "replace   PRED[10:11] -> TAR[15:16] ['skeleton'] -> [')']"
    ]
  }
}


{
  "_ID": 119,
  "example": {
    "sentence": "the vertebral element is a skeletal element that form <UNK>@9 the notochord and is <UNK>@14 of the vertebral column . <EOS>",
    "target": "vertebral element := skeletal element ^ E form <UNK>@9 . ( notochord ) ^ E <UNK>@14 of . ( vertebral column ) <EOS>",
    "prediction": "vertebral element := skeletal element ^ E form . ( <UNK>@9 ) ^ <UNK>@14 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2620, 1791, 296, 1532, 3051, 1791, 1465, 2845, 1, 1496, 595, 2258, 296, 1, 2995, 1496, 2620, 3304, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 28, 16, 1, 30, 2, 5, 13, 33, 34, 16, 1, 36, 37, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 2, 5, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.391,
  "tokens_OK": 9,
  "tokens_tot": 23,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['<UNK>@9']",
      "replace   PRED[10:11] -> TAR[11:12] ['<UNK>@9'] -> ['notochord']",
      "insert    PRED[12:12] -> TAR[14:15] [] -> ['E']",
      "insert    PRED[13:13] -> TAR[16:17] [] -> ['of']",
      "insert    PRED[13:13] -> TAR[17:18] [] -> ['.']",
      "insert    PRED[13:13] -> TAR[18:19] [] -> ['(']",
      "insert    PRED[13:13] -> TAR[19:20] [] -> ['vertebral']",
      "insert    PRED[13:13] -> TAR[20:21] [] -> ['column']",
      "insert    PRED[13:13] -> TAR[21:22] [] -> [')']"
    ]
  }
}


{
  "_ID": 141,
  "example": {
    "sentence": "<UNK>@0 agricultural show or event is something that <UNK>@8 disrupt traffic . <EOS>",
    "target": "agricultural show U agricultural event := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "<UNK>@0 agricultural := ! E ( disrupt ^ event ) . ( traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 3100, 1588, 1048, 4512, 296, 1307, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 6, 20, 23, 7, 12, 18, 28, 16, 1, 29, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 15, 13, 1, 28, 5, 23, 2, 16, 1, 29, 2, 0]"
  },
  "accuracy": 0.067,
  "tokens_OK": 1,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[2:3] -> TAR[1:2] [':='] -> ['show']",
      "replace   PRED[3:4] -> TAR[2:3] ['!'] -> ['U']",
      "replace   PRED[4:5] -> TAR[3:4] ['E'] -> ['agricultural']",
      "replace   PRED[5:6] -> TAR[4:5] ['('] -> ['event']",
      "replace   PRED[6:7] -> TAR[5:6] ['disrupt'] -> [':=']",
      "replace   PRED[7:8] -> TAR[6:7] ['^'] -> ['>=']",
      "replace   PRED[8:9] -> TAR[7:8] ['event'] -> ['0']",
      "replace   PRED[9:10] -> TAR[8:9] [')'] -> ['disrupt']"
    ]
  }
}


{
  "_ID": 163,
  "example": {
    "sentence": "a procession or <UNK>@3 organized procession is something that <UNK>@9 disrupt traffic . <EOS>",
    "target": "procession U organized procession := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "procession := ! E disrupt . ( traffic procession ) ^ E disrupt <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3632, 1048, 1, 4006, 3632, 296, 1307, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 6, 23, 24, 7, 12, 18, 29, 16, 1, 30, 2, 0, 0]",
    "prediction_idx": "[20, 7, 15, 13, 29, 16, 1, 30, 24, 2, 5, 13, 29, 0]"
  },
  "accuracy": 0.143,
  "tokens_OK": 2,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['procession']",
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['U']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> ['organized']",
      "replace   PRED[2:3] -> TAR[5:6] ['!'] -> ['>=']",
      "replace   PRED[3:4] -> TAR[6:7] ['E'] -> ['0']",
      "delete    PRED[8:9] -> TAR[10:10] ['procession'] -> []",
      "delete    PRED[10:11] -> TAR[11:11] ['^'] -> []",
      "delete    PRED[11:12] -> TAR[11:11] ['E'] -> []",
      "delete    PRED[12:13] -> TAR[11:11] ['disrupt'] -> []"
    ]
  }
}


{
  "_ID": 5,
  "example": {
    "sentence": "a survival property is a identifiable characteristic that represent the extent of the sensor useful life . <EOS>",
    "target": "survival property := identifiable characteristic ^ E represent . ( extent of sensor useful life ) <EOS>",
    "prediction": "survival := E property . ( extent of the ^ identifiable the the ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1695, 2664, 296, 1532, 71, 2418, 1465, 4929, 1496, 4784, 2995, 1496, 2913, 3150, 877, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 30, 32, 33, 34, 2, 0]",
    "prediction_idx": "[20, 7, 13, 21, 16, 1, 29, 30, 31, 5, 24, 28, 31, 2, 0, 0, 0]"
  },
  "accuracy": 0.118,
  "tokens_OK": 2,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['property']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['identifiable']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['characteristic']",
      "insert    PRED[1:1] -> TAR[5:6] [] -> ['^']",
      "replace   PRED[3:4] -> TAR[7:8] ['property'] -> ['represent']",
      "delete    PRED[8:9] -> TAR[11:11] ['the'] -> []",
      "delete    PRED[9:10] -> TAR[11:11] ['^'] -> []",
      "replace   PRED[10:11] -> TAR[12:13] ['identifiable'] -> ['sensor']",
      "replace   PRED[11:12] -> TAR[13:14] ['the'] -> ['useful']",
      "replace   PRED[12:13] -> TAR[14:15] ['the'] -> ['life']"
    ]
  }
}


{
  "_ID": 39,
  "example": {
    "sentence": "a juvenile is a young fish or animal that <UNK>@9 not <UNK>@11 sexual maturity . <EOS>",
    "target": "juvenile := ( young fish U young animal ) ^ ! E <UNK>@9 <UNK>@11 . ( sexual maturity ) <EOS>",
    "prediction": "juvenile := young fish ^ >= not animal . ( <UNK>@11 sexual maturity ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1998, 296, 1532, 3413, 4435, 1048, 5233, 1465, 1, 2015, 1, 5260, 3631, 1710, 0]",
    "target_idx": "[20, 7, 1, 23, 24, 6, 23, 26, 2, 5, 15, 13, 28, 30, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 12, 29, 26, 16, 1, 30, 31, 32, 2, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 4,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['U']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['young']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['animal']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> [')']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['!']",
      "replace   PRED[5:6] -> TAR[11:12] ['>='] -> ['E']",
      "replace   PRED[6:7] -> TAR[12:13] ['not'] -> ['<UNK>@9']",
      "replace   PRED[7:8] -> TAR[13:14] ['animal'] -> ['<UNK>@11']",
      "delete    PRED[10:11] -> TAR[15:15] ['<UNK>@11'] -> []"
    ]
  }
}


{
  "_ID": 48,
  "example": {
    "sentence": "<UNK>@0 is a process that result in the estimation , or calculation , of the value of a phenomenon . <EOS>",
    "target": "<UNK>@0 := process ^ E result in . ( estimation of value of phenomenon U calculation of value of phenomenon ) <EOS>",
    "prediction": "<UNK>@0 := process ^ E result in . ( estimation ) ^ E value . ( calculation the ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 296, 1532, 1805, 1465, 1120, 3574, 1496, 1908, 2317, 1048, 3749, 2317, 2995, 1496, 1995, 2995, 1532, 5177, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 32, 34, 35, 37, 6, 30, 35, 34, 35, 37, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 5, 13, 34, 16, 1, 30, 33, 2, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 11,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['of']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['value']",
      "replace   PRED[10:11] -> TAR[12:13] [')'] -> ['of']",
      "replace   PRED[11:12] -> TAR[13:14] ['^'] -> ['phenomenon']",
      "replace   PRED[12:13] -> TAR[14:15] ['E'] -> ['U']",
      "replace   PRED[13:14] -> TAR[15:16] ['value'] -> ['calculation']",
      "replace   PRED[14:15] -> TAR[16:17] ['.'] -> ['of']",
      "replace   PRED[15:16] -> TAR[17:18] ['('] -> ['value']",
      "replace   PRED[16:17] -> TAR[18:19] ['calculation'] -> ['of']",
      "replace   PRED[17:18] -> TAR[19:20] ['the'] -> ['phenomenon']"
    ]
  }
}


{
  "_ID": 78,
  "example": {
    "sentence": "any pizza that <UNK>@3 at least NUM topping is <UNK>@9 interesting pizza . <EOS>",
    "target": "interesting pizza := pizza ^ >= NUM <UNK>@3 topping . ( T ) <EOS>",
    "prediction": "pizza := ( > NUM && > NUM ) pizza . ( <UNK>@9 <UNK>@9 <EOS>"
  },
  "dump": {
    "sentence_idx": "[2133, 2430, 1465, 1, 2305, 4025, 2, 1154, 296, 1, 2812, 2430, 1710, 0]",
    "target_idx": "[29, 30, 7, 30, 5, 12, 25, 22, 26, 16, 1, 17, 2, 0, 0]",
    "prediction_idx": "[20, 7, 1, 11, 25, 3, 11, 25, 2, 20, 16, 1, 28, 28, 0]"
  },
  "accuracy": 0.067,
  "tokens_OK": 1,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['interesting']",
      "delete    PRED[2:3] -> TAR[2:2] ['('] -> []",
      "delete    PRED[3:4] -> TAR[2:2] ['>'] -> []",
      "replace   PRED[4:5] -> TAR[3:4] ['NUM'] -> ['pizza']",
      "replace   PRED[5:6] -> TAR[4:5] ['&&'] -> ['^']",
      "replace   PRED[6:7] -> TAR[5:6] ['>'] -> ['>=']",
      "replace   PRED[8:9] -> TAR[7:8] [')'] -> ['<UNK>@3']",
      "replace   PRED[9:10] -> TAR[8:9] ['pizza'] -> ['topping']",
      "replace   PRED[12:13] -> TAR[11:12] ['<UNK>@9'] -> ['T']",
      "replace   PRED[13:14] -> TAR[12:13] ['<UNK>@9'] -> [')']"
    ]
  }
}


{
  "_ID": 87,
  "example": {
    "sentence": "a ossified tendon is a sesamoid that develop <UNK>@8 a tendon and is distal <UNK>@14 <UNK>@15 articulation or joint . <EOS>",
    "target": "ossified tendon := sesamoid ^ E develop <UNK>@8 . ( tendon ) ^ E distal <UNK>@14 . ( articulation U joint ) <EOS>",
    "prediction": "ossified tendon := sesamoid ^ E develop <UNK>@8 . ( tendon U tendon <UNK>@14 <UNK>@15 articulation U joint ) articulation ( distal <UNK>@14 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1314, 4921, 296, 1532, 1530, 1465, 3102, 1, 1532, 4921, 2258, 296, 999, 1, 1, 2296, 1048, 1067, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 2, 5, 13, 32, 33, 16, 1, 35, 6, 37, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 6, 29, 33, 34, 35, 6, 37, 2, 35, 1, 32, 33, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 12,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[10:10] -> TAR[11:12] [] -> [')']",
      "insert    PRED[10:10] -> TAR[12:13] [] -> ['^']",
      "replace   PRED[11:12] -> TAR[13:14] ['U'] -> ['E']",
      "replace   PRED[12:13] -> TAR[14:15] ['tendon'] -> ['distal']",
      "insert    PRED[13:13] -> TAR[16:17] [] -> ['.']",
      "replace   PRED[14:15] -> TAR[17:18] ['<UNK>@15'] -> ['(']",
      "delete    PRED[19:20] -> TAR[21:21] ['articulation'] -> []",
      "delete    PRED[20:21] -> TAR[21:21] ['('] -> []",
      "delete    PRED[21:22] -> TAR[21:21] ['distal'] -> []",
      "delete    PRED[22:23] -> TAR[21:21] ['<UNK>@14'] -> []"
    ]
  }
}


{
  "_ID": 105,
  "example": {
    "sentence": "ossified ligament are sesamoid that develop <UNK>@6 a ligament , distal <UNK>@11 <UNK>@12 articulation or joint . <EOS>",
    "target": "ossified ligament := sesamoid ^ E develop <UNK>@6 . ( ligament ) ^ E distal <UNK>@11 . ( articulation U joint ) <EOS>",
    "prediction": "ossified ligament := sesamoid ^ E develop <UNK>@6 ( <UNK>@6 U distal <UNK>@11 ^ distal <UNK>@11 <UNK>@12 articulation ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1314, 2431, 3728, 1530, 1465, 3102, 1, 1532, 2431, 2317, 999, 1, 1, 2296, 1048, 1067, 1710, 0]",
    "target_idx": "[19, 20, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 5, 13, 29, 30, 16, 1, 32, 6, 34, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 5, 13, 24, 25, 1, 25, 6, 29, 30, 5, 29, 30, 31, 32, 2, 0, 0, 0, 0]"
  },
  "accuracy": 0.478,
  "tokens_OK": 11,
  "tokens_tot": 23,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['ligament']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> [')']",
      "replace   PRED[9:10] -> TAR[12:13] ['<UNK>@6'] -> ['^']",
      "replace   PRED[10:11] -> TAR[13:14] ['U'] -> ['E']",
      "replace   PRED[13:14] -> TAR[16:17] ['^'] -> ['.']",
      "replace   PRED[14:15] -> TAR[17:18] ['distal'] -> ['(']",
      "replace   PRED[15:16] -> TAR[18:19] ['<UNK>@11'] -> ['articulation']",
      "replace   PRED[16:17] -> TAR[19:20] ['<UNK>@12'] -> ['U']",
      "replace   PRED[17:18] -> TAR[20:21] ['articulation'] -> ['joint']"
    ]
  }
}


{
  "_ID": 110,
  "example": {
    "sentence": "a pectoral fin skeleton is a paired fin skeleton that consists of the <UNK>@13 endochondral proximal and distal radial and the dermal fin ray or lepidotrichia . <EOS>",
    "target": "pectoral fin skeleton := paired fin skeleton ^ E consists of . ( <UNK>@13 endochondral radial ^ distal radial ^ ( dermal fin ray U dermal fin lepidotrichia ) ) <EOS>",
    "prediction": "pectoral fin skeleton := paired fin skeleton ^ E consists of . ( the <UNK>@13 endochondral U distal fin ray U lepidotrichia fin ray ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2918, 613, 4381, 296, 1532, 2424, 613, 4381, 1465, 4298, 2995, 1496, 1, 3425, 2134, 2258, 999, 1415, 2258, 1496, 280, 613, 3098, 1048, 3483, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 30, 16, 1, 32, 33, 37, 5, 36, 37, 5, 1, 40, 41, 42, 6, 40, 41, 44, 2, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 29, 30, 16, 1, 31, 32, 33, 6, 36, 41, 42, 6, 44, 41, 42, 2, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.548,
  "tokens_OK": 17,
  "tokens_tot": 31,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "delete    PRED[13:14] -> TAR[12:12] ['the'] -> []",
      "insert    PRED[15:15] -> TAR[15:16] [] -> ['radial']",
      "replace   PRED[16:17] -> TAR[16:17] ['U'] -> ['^']",
      "insert    PRED[17:17] -> TAR[18:19] [] -> ['radial']",
      "insert    PRED[17:17] -> TAR[19:20] [] -> ['^']",
      "insert    PRED[17:17] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[17:17] -> TAR[21:22] [] -> ['dermal']",
      "replace   PRED[21:22] -> TAR[25:26] ['lepidotrichia'] -> ['dermal']",
      "insert    PRED[22:22] -> TAR[27:28] [] -> ['lepidotrichia']",
      "replace   PRED[23:24] -> TAR[28:29] ['ray'] -> [')']"
    ]
  }
}


{
  "_ID": 130,
  "example": {
    "sentence": "the acropodial skeleton is a endochondral terminal bone that is located at the distalmost end of the autopodium , <UNK>@19 of the phalanx . <EOS>",
    "target": "acropodial skeleton := endochondral terminal bone ^ E located at . ( distalmost end of autopodium ) ^ E <UNK>@19 of . ( phalanx ) <EOS>",
    "prediction": "acropodial skeleton := endochondral terminal bone ^ E located of . ( end of autopodium ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 5207, 4381, 296, 1532, 3425, 2559, 432, 1465, 296, 3886, 2305, 1496, 2885, 2383, 2995, 1496, 3302, 2317, 1, 2995, 1496, 1604, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 26, 5, 13, 29, 30, 16, 1, 32, 33, 34, 36, 2, 5, 13, 38, 39, 16, 1, 41, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 5, 13, 29, 39, 16, 1, 33, 34, 36, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 12,
  "tokens_tot": 26,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "replace   PRED[9:10] -> TAR[9:10] ['of'] -> ['at']",
      "insert    PRED[11:11] -> TAR[12:13] [] -> ['distalmost']",
      "insert    PRED[14:14] -> TAR[16:17] [] -> [')']",
      "insert    PRED[14:14] -> TAR[17:18] [] -> ['^']",
      "insert    PRED[14:14] -> TAR[18:19] [] -> ['E']",
      "insert    PRED[14:14] -> TAR[19:20] [] -> ['<UNK>@19']",
      "insert    PRED[14:14] -> TAR[20:21] [] -> ['of']",
      "insert    PRED[14:14] -> TAR[21:22] [] -> ['.']",
      "insert    PRED[14:14] -> TAR[22:23] [] -> ['(']",
      "insert    PRED[14:14] -> TAR[23:24] [] -> ['phalanx']"
    ]
  }
}


{
  "_ID": 144,
  "example": {
    "sentence": "<UNK>@0 exhibition is a major display or trade show that <UNK>@10 disrupt traffic . <EOS>",
    "target": "exhibition := ( major display U major trade show ) ^ >= disrupt . ( traffic ) <EOS>",
    "prediction": "<UNK>@0 exhibition := major display ^ E trade show . ( traffic U disrupt traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 3397, 296, 1532, 4075, 924, 1048, 4615, 1588, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 1, 23, 24, 6, 23, 26, 27, 2, 5, 12, 30, 16, 1, 31, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 31, 6, 30, 31, 2, 0, 0]"
  },
  "accuracy": 0.278,
  "tokens_OK": 5,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "insert    PRED[2:2] -> TAR[2:3] [] -> ['(']",
      "replace   PRED[5:6] -> TAR[5:6] ['^'] -> ['U']",
      "replace   PRED[6:7] -> TAR[6:7] ['E'] -> ['major']",
      "insert    PRED[8:8] -> TAR[9:10] [] -> [')']",
      "replace   PRED[9:10] -> TAR[10:11] ['.'] -> ['^']",
      "replace   PRED[10:11] -> TAR[11:12] ['('] -> ['>=']",
      "replace   PRED[11:12] -> TAR[12:13] ['traffic'] -> ['disrupt']",
      "replace   PRED[12:13] -> TAR[13:14] ['U'] -> ['.']",
      "replace   PRED[13:14] -> TAR[14:15] ['disrupt'] -> ['(']"
    ]
  }
}


{
  "_ID": 148,
  "example": {
    "sentence": "a parade is a formal display or organized procession which <UNK>@10 disrupt traffic . <EOS>",
    "target": "parade := ( formal display U organized procession ) ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "parade := formal display U organized procession which <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4513, 296, 1532, 987, 924, 1048, 4006, 3632, 4518, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 1, 23, 24, 6, 26, 27, 2, 5, 12, 18, 30, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 6, 26, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 3,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> [')']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['>=']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['0']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> ['disrupt']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[14:15] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[15:16] [] -> ['traffic']",
      "replace   PRED[7:8] -> TAR[16:17] ['which'] -> [')']"
    ]
  }
}


{
  "_ID": 186,
  "example": {
    "sentence": "a datum collection <UNK>@3 survey is a datum collection that result in a collection of datum <UNK>@16 <UNK>@17 a survey . <EOS>",
    "target": "datum collection <UNK>@3 survey := datum collection ^ E result in . ( collection of <EOS>",
    "prediction": "datum collection <UNK>@3 survey := datum collection ^ E result in . ( collection of datum ^ E <UNK>@16 <UNK>@17 . ( survey ) ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 1, 2333, 296, 1532, 5275, 2683, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 1, 1, 1532, 2333, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 27, 5, 13, 29, 30, 16, 1, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 22, 23, 7, 26, 27, 5, 13, 29, 30, 16, 1, 32, 33, 34, 5, 13, 35, 36, 16, 1, 38, 2, 2, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 16,
  "tokens_tot": 26,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "delete    PRED[15:16] -> TAR[14:14] ['datum'] -> []",
      "delete    PRED[16:17] -> TAR[14:14] ['^'] -> []",
      "delete    PRED[17:18] -> TAR[14:14] ['E'] -> []",
      "delete    PRED[18:19] -> TAR[14:14] ['<UNK>@16'] -> []",
      "delete    PRED[19:20] -> TAR[14:14] ['<UNK>@17'] -> []",
      "delete    PRED[20:21] -> TAR[14:14] ['.'] -> []",
      "delete    PRED[21:22] -> TAR[14:14] ['('] -> []",
      "delete    PRED[22:23] -> TAR[14:14] ['survey'] -> []",
      "delete    PRED[23:24] -> TAR[14:14] [')'] -> []",
      "delete    PRED[24:25] -> TAR[14:14] [')'] -> []"
    ]
  }
}


{
  "_ID": 191,
  "example": {
    "sentence": "a motor sport race meeting is <UNK>@6 event that <UNK>@9 disrupt traffic . <EOS>",
    "target": "motor sport race meeting := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "motor := E sport . ( meeting U event U disrupt traffic ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1867, 3918, 839, 1370, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 5, 12, 18, 29, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 7, 13, 21, 16, 1, 23, 6, 26, 6, 29, 30, 2, 0, 0]"
  },
  "accuracy": 0.133,
  "tokens_OK": 2,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[1:1] ['.'] -> []",
      "replace   PRED[5:6] -> TAR[2:3] ['('] -> ['race']",
      "replace   PRED[7:8] -> TAR[4:5] ['U'] -> [':=']",
      "insert    PRED[8:8] -> TAR[6:7] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[7:8] [] -> ['>=']",
      "replace   PRED[9:10] -> TAR[8:9] ['U'] -> ['0']",
      "insert    PRED[10:10] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[10:10] -> TAR[11:12] [] -> ['(']"
    ]
  }
}


{
  "_ID": 162,
  "example": {
    "sentence": "a water sport meeting is <UNK>@5 event that <UNK>@8 disrupt traffic . <EOS>",
    "target": "water sport meeting := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "water sport := E meeting . ( traffic ) U U disrupt . . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 226, 3918, 1370, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 12, 18, 28, 16, 1, 29, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 22, 16, 1, 29, 2, 6, 6, 28, 16, 16, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 3,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['E'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "replace   PRED[6:7] -> TAR[3:4] ['('] -> [':=']",
      "replace   PRED[7:8] -> TAR[4:5] ['traffic'] -> ['event']",
      "replace   PRED[8:9] -> TAR[5:6] [')'] -> ['^']",
      "replace   PRED[9:10] -> TAR[6:7] ['U'] -> ['>=']",
      "replace   PRED[10:11] -> TAR[7:8] ['U'] -> ['0']",
      "insert    PRED[12:12] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[12:12] -> TAR[11:12] [] -> ['traffic']",
      "replace   PRED[13:14] -> TAR[12:13] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 176,
  "example": {
    "sentence": "<UNK>@0 air show or other areonautical event is something that <UNK>@10 disrupt traffic . <EOS>",
    "target": "air show U areonautical event := >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "<UNK>@0 air := E ( show U other ) . ( areonautical event ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 1734, 1588, 1048, 5342, 1777, 4512, 296, 1307, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 6, 24, 25, 7, 12, 18, 30, 16, 1, 31, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 13, 1, 21, 6, 23, 2, 16, 1, 24, 25, 2, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 3,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "replace   PRED[0:1] -> TAR[0:1] ['<UNK>@0'] -> ['air']",
      "replace   PRED[1:2] -> TAR[1:2] ['air'] -> ['show']",
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['U']",
      "replace   PRED[3:4] -> TAR[3:4] ['E'] -> ['areonautical']",
      "replace   PRED[4:5] -> TAR[4:5] ['('] -> ['event']",
      "replace   PRED[5:6] -> TAR[5:6] ['show'] -> [':=']",
      "replace   PRED[6:7] -> TAR[6:7] ['U'] -> ['>=']",
      "replace   PRED[7:8] -> TAR[7:8] ['other'] -> ['0']",
      "replace   PRED[8:9] -> TAR[8:9] [')'] -> ['disrupt']",
      "delete    PRED[11:12] -> TAR[10:10] ['areonautical'] -> []",
      "replace   PRED[12:13] -> TAR[11:12] ['event'] -> ['traffic']"
    ]
  }
}


{
  "_ID": 181,
  "example": {
    "sentence": "a datum collection <UNK>@3 censoring is a datum collection that result in a collection of datum <UNK>@16 <UNK>@17 <UNK>@18 censoring . <EOS>",
    "target": "datum collection <UNK>@3 censoring := datum collection ^ E result in . ( collection of <EOS>",
    "prediction": "datum collection <UNK>@3 censoring := datum collection ^ E result in . ( collection of datum ^ E <UNK>@16 <UNK>@17 . ( <UNK>@18 censoring ) ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 1, 3970, 296, 1532, 5275, 2683, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 1, 1, 1, 3970, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 27, 5, 13, 29, 30, 16, 1, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 22, 23, 7, 26, 27, 5, 13, 29, 30, 16, 1, 32, 33, 34, 5, 13, 35, 36, 16, 1, 37, 38, 2, 2, 0]"
  },
  "accuracy": 0.593,
  "tokens_OK": 16,
  "tokens_tot": 27,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "delete    PRED[15:16] -> TAR[14:14] ['datum'] -> []",
      "delete    PRED[16:17] -> TAR[14:14] ['^'] -> []",
      "delete    PRED[17:18] -> TAR[14:14] ['E'] -> []",
      "delete    PRED[18:19] -> TAR[14:14] ['<UNK>@16'] -> []",
      "delete    PRED[19:20] -> TAR[14:14] ['<UNK>@17'] -> []",
      "delete    PRED[20:21] -> TAR[14:14] ['.'] -> []",
      "delete    PRED[21:22] -> TAR[14:14] ['('] -> []",
      "delete    PRED[22:23] -> TAR[14:14] ['<UNK>@18'] -> []",
      "delete    PRED[23:24] -> TAR[14:14] ['censoring'] -> []",
      "delete    PRED[24:25] -> TAR[14:14] [')'] -> []",
      "delete    PRED[25:26] -> TAR[14:14] [')'] -> []"
    ]
  }
}


{
  "_ID": 19,
  "example": {
    "sentence": "herbivore are exactly <UNK>@3 animal that eat only plant or <UNK>@10 of plant . <EOS>",
    "target": "herbivore := animal ^ A eat . ( plant U E <UNK>@10 of . ( plant ) ) <EOS>",
    "prediction": "herbivore := exactly <UNK>@3 ^ A animal . ^ eat ) . ( plant of U <UNK>@10 of plant <EOS>"
  },
  "dump": {
    "sentence_idx": "[4058, 3728, 4082, 1, 5233, 1465, 2867, 3546, 526, 1048, 1, 2995, 526, 1710, 0]",
    "target_idx": "[19, 7, 23, 5, 14, 25, 16, 1, 27, 6, 13, 29, 30, 16, 1, 31, 2, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 14, 23, 16, 5, 25, 2, 16, 1, 27, 30, 6, 29, 30, 31, 0]"
  },
  "accuracy": 0.15,
  "tokens_OK": 3,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['exactly'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['<UNK>@3'] -> ['animal']",
      "delete    PRED[6:7] -> TAR[4:4] ['animal'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['^'] -> []",
      "delete    PRED[10:11] -> TAR[5:5] [')'] -> []",
      "replace   PRED[14:15] -> TAR[9:10] ['of'] -> ['U']",
      "replace   PRED[15:16] -> TAR[10:11] ['U'] -> ['E']",
      "insert    PRED[17:17] -> TAR[13:14] [] -> ['.']",
      "insert    PRED[17:17] -> TAR[14:15] [] -> ['(']",
      "insert    PRED[18:18] -> TAR[16:17] [] -> [')']",
      "insert    PRED[18:18] -> TAR[17:18] [] -> [')']"
    ]
  }
}


{
  "_ID": 63,
  "example": {
    "sentence": "biosphere is the portion of earth and <UNK>@7 atmosphere that <UNK>@10 support life . <EOS>",
    "target": "biosphere := portion of earth ^ portion of <UNK>@7 atmosphere ^ >= 0 support . ( life ) <EOS>",
    "prediction": "biosphere := portion of earth ^ <UNK>@7 <UNK>@10 . ( support life ) ^ E <UNK>@7 . ( <UNK>@10 <EOS>"
  },
  "dump": {
    "sentence_idx": "[2702, 296, 1496, 2581, 2995, 2009, 2258, 1, 4118, 1465, 1, 712, 877, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 24, 5, 22, 23, 26, 27, 5, 12, 18, 30, 16, 1, 31, 2, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 26, 29, 16, 1, 30, 31, 2, 5, 13, 26, 16, 1, 29, 0]"
  },
  "accuracy": 0.35,
  "tokens_OK": 7,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['<UNK>@7'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['<UNK>@10'] -> []",
      "replace   PRED[8:9] -> TAR[6:7] ['.'] -> ['portion']",
      "replace   PRED[9:10] -> TAR[7:8] ['('] -> ['of']",
      "replace   PRED[10:11] -> TAR[8:9] ['support'] -> ['<UNK>@7']",
      "replace   PRED[11:12] -> TAR[9:10] ['life'] -> ['atmosphere']",
      "replace   PRED[12:13] -> TAR[10:11] [')'] -> ['^']",
      "replace   PRED[13:14] -> TAR[11:12] ['^'] -> ['>=']",
      "replace   PRED[14:15] -> TAR[12:13] ['E'] -> ['0']",
      "replace   PRED[15:16] -> TAR[13:14] ['<UNK>@7'] -> ['support']",
      "insert    PRED[17:17] -> TAR[16:17] [] -> ['life']",
      "replace   PRED[18:19] -> TAR[17:18] ['<UNK>@10'] -> [')']"
    ]
  }
}


{
  "_ID": 65,
  "example": {
    "sentence": "the postcranial axial skeleton is a skeletal subdivision of the central body axis that includes vertebra , notochord , rib , and sternum . <EOS>",
    "target": "postcranial axial skeleton := skeletal subdivision of central body axis ^ E includes . ( vertebra U notochord U rib U sternum ) <EOS>",
    "prediction": "postcranial axial skeleton := skeletal subdivision of central E includes that ^ includes ) . ( vertebra ) ^ E ( axis ^ includes <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4117, 4722, 4381, 296, 1532, 3051, 5142, 2995, 1496, 780, 5126, 2107, 1465, 663, 4362, 2317, 595, 2317, 1983, 2317, 2258, 218, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 29, 30, 31, 5, 13, 33, 16, 1, 34, 6, 36, 6, 38, 6, 41, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 29, 13, 33, 32, 5, 33, 2, 16, 1, 34, 2, 5, 13, 1, 31, 5, 33, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 10,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['E'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['includes'] -> ['body']",
      "replace   PRED[10:11] -> TAR[9:10] ['that'] -> ['axis']",
      "replace   PRED[12:13] -> TAR[11:12] ['includes'] -> ['E']",
      "replace   PRED[13:14] -> TAR[12:13] [')'] -> ['includes']",
      "replace   PRED[17:18] -> TAR[16:17] [')'] -> ['U']",
      "replace   PRED[18:19] -> TAR[17:18] ['^'] -> ['notochord']",
      "replace   PRED[19:20] -> TAR[18:19] ['E'] -> ['U']",
      "replace   PRED[20:21] -> TAR[19:20] ['('] -> ['rib']",
      "replace   PRED[21:22] -> TAR[20:21] ['axis'] -> ['U']",
      "replace   PRED[22:23] -> TAR[21:22] ['^'] -> ['sternum']",
      "replace   PRED[23:24] -> TAR[22:23] ['includes'] -> [')']"
    ]
  }
}


{
  "_ID": 79,
  "example": {
    "sentence": "a replacement element is a skeletal element that form <UNK>@9 a replacement or substitution of another element or tissue . <EOS>",
    "target": "replacement element := skeletal replacement element ^ E form <UNK>@9 . ( replacement of element U substitution of element U replacement of tissue U substitution of tissue ) <EOS>",
    "prediction": "replacement element := skeletal element ^ E form . ( <UNK>@9 of U replacement of another U tissue ) element <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4747, 1791, 296, 1532, 3051, 1791, 1465, 2845, 1, 1532, 4747, 1048, 543, 2995, 1692, 1791, 1048, 3846, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 30, 35, 5, 13, 27, 28, 16, 1, 30, 33, 35, 6, 32, 33, 35, 6, 30, 33, 37, 6, 32, 33, 37, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 33, 6, 30, 33, 34, 6, 37, 2, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.172,
  "tokens_OK": 5,
  "tokens_tot": 29,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['replacement']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['<UNK>@9']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> ['replacement']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['of']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> ['element']",
      "insert    PRED[9:9] -> TAR[15:16] [] -> ['U']",
      "replace   PRED[10:11] -> TAR[16:17] ['<UNK>@9'] -> ['substitution']",
      "insert    PRED[11:11] -> TAR[18:19] [] -> ['element']",
      "replace   PRED[15:16] -> TAR[22:23] ['another'] -> ['tissue']",
      "insert    PRED[16:16] -> TAR[24:25] [] -> ['substitution']",
      "insert    PRED[16:16] -> TAR[25:26] [] -> ['of']",
      "delete    PRED[19:20] -> TAR[27:27] ['element'] -> []"
    ]
  }
}


{
  "_ID": 96,
  "example": {
    "sentence": "a median fin skeleton is a postcranial axial skeleton that is unpaired and located <UNK>@14 the sagittal plane of the organism . <EOS>",
    "target": "median fin skeleton := postcranial axial skeleton ^ E unpaired . ( T ) ^ E located <UNK>@14 . ( sagittal plane of the organism ) <EOS>",
    "prediction": "median fin skeleton := postcranial axial skeleton ^ E ( unpaired ^ located ) . ( <UNK>@14 ) of ^ <UNK>@14 plane skeleton ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3485, 613, 4381, 296, 1532, 4117, 4722, 4381, 1465, 296, 4769, 2258, 3886, 1, 1496, 5070, 710, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 16, 1, 17, 2, 5, 13, 32, 33, 16, 1, 35, 36, 37, 38, 39, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 1, 30, 5, 32, 2, 16, 1, 33, 2, 37, 5, 33, 36, 22, 2, 0, 0, 0]"
  },
  "accuracy": 0.444,
  "tokens_OK": 12,
  "tokens_tot": 27,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['unpaired']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> ['T']",
      "replace   PRED[10:11] -> TAR[13:14] ['unpaired'] -> [')']",
      "insert    PRED[11:11] -> TAR[15:16] [] -> ['E']",
      "replace   PRED[13:14] -> TAR[17:18] [')'] -> ['<UNK>@14']",
      "replace   PRED[16:17] -> TAR[20:21] ['<UNK>@14'] -> ['sagittal']",
      "replace   PRED[17:18] -> TAR[21:22] [')'] -> ['plane']",
      "delete    PRED[19:20] -> TAR[22:22] ['^'] -> []",
      "delete    PRED[20:21] -> TAR[22:22] ['<UNK>@14'] -> []",
      "replace   PRED[21:22] -> TAR[23:24] ['plane'] -> ['the']",
      "replace   PRED[22:23] -> TAR[24:25] ['skeleton'] -> ['organism']"
    ]
  }
}


{
  "_ID": 178,
  "example": {
    "sentence": "a datum collection <UNK>@3 experiment is a datum collection process that result in a collection of datum <UNK>@17 <UNK>@18 <UNK>@19 experiment . <EOS>",
    "target": "datum collection <UNK>@3 experiment := datum collection ^ E result in . ( collection of <EOS>",
    "prediction": "datum collection <UNK>@3 experiment := datum collection process ^ E result in . ( collection of datum ^ E <UNK>@17 <UNK>@18 . ( <UNK>@19 experiment ) ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 1, 2461, 296, 1532, 5275, 2683, 1805, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 1, 1, 1, 2461, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 27, 5, 13, 30, 31, 16, 1, 33, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 22, 23, 7, 26, 27, 28, 5, 13, 30, 31, 16, 1, 33, 34, 35, 5, 13, 36, 37, 16, 1, 38, 39, 2, 2, 0]"
  },
  "accuracy": 0.286,
  "tokens_OK": 8,
  "tokens_tot": 28,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['process'] -> []",
      "delete    PRED[16:17] -> TAR[14:14] ['datum'] -> []",
      "delete    PRED[17:18] -> TAR[14:14] ['^'] -> []",
      "delete    PRED[18:19] -> TAR[14:14] ['E'] -> []",
      "delete    PRED[19:20] -> TAR[14:14] ['<UNK>@17'] -> []",
      "delete    PRED[20:21] -> TAR[14:14] ['<UNK>@18'] -> []",
      "delete    PRED[21:22] -> TAR[14:14] ['.'] -> []",
      "delete    PRED[22:23] -> TAR[14:14] ['('] -> []",
      "delete    PRED[23:24] -> TAR[14:14] ['<UNK>@19'] -> []",
      "delete    PRED[24:25] -> TAR[14:14] ['experiment'] -> []",
      "delete    PRED[25:26] -> TAR[14:14] [')'] -> []",
      "delete    PRED[26:27] -> TAR[14:14] [')'] -> []"
    ]
  }
}


{
  "_ID": 43,
  "example": {
    "sentence": "tasty plant are <UNK>@3 both <UNK>@5 herbivore and carnivore . <EOS>",
    "target": "tasty plant := plant ^ E <UNK>@3 <UNK>@5 . ( herbivore ) ^ E <UNK>@3 <UNK>@5 . ( carnivore ) <EOS>",
    "prediction": "tasty plant := <UNK>@3 both <UNK>@5 herbivore ^ carnivore <EOS>"
  },
  "dump": {
    "sentence_idx": "[1260, 526, 3728, 1, 3467, 1, 4058, 2258, 3741, 1710, 0]",
    "target_idx": "[19, 20, 7, 20, 5, 13, 22, 24, 16, 1, 25, 2, 5, 13, 22, 24, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 25, 5, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.19,
  "tokens_OK": 4,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['plant']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['<UNK>@5']",
      "replace   PRED[4:5] -> TAR[8:9] ['both'] -> ['.']",
      "replace   PRED[5:6] -> TAR[9:10] ['<UNK>@5'] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['<UNK>@3']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['<UNK>@5']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> [')']"
    ]
  }
}


{
  "_ID": 60,
  "example": {
    "sentence": "the zeugopodial skeleton is the section of the forelimb skeleton located <UNK>@11 the stylopodium and the autopodium . <EOS>",
    "target": "zeugopodial skeleton := E section of . ( forelimb skeleton ) ^ E located <UNK>@11 . ( stylopodium ^ autopodium ) <EOS>",
    "prediction": "zeugopodial skeleton := section of the skeleton ^ stylopodium <UNK>@11 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3561, 4381, 296, 1496, 5310, 2995, 1496, 2014, 4381, 3886, 1, 1496, 4563, 2258, 1496, 3302, 1710, 0]",
    "target_idx": "[20, 21, 7, 13, 24, 25, 16, 1, 27, 28, 2, 5, 13, 29, 30, 16, 1, 32, 5, 35, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 28, 5, 32, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.182,
  "tokens_OK": 4,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['(']",
      "replace   PRED[5:6] -> TAR[8:9] ['the'] -> ['forelimb']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> [')']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['located']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['<UNK>@11']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> ['autopodium']",
      "replace   PRED[9:10] -> TAR[20:21] ['<UNK>@11'] -> [')']"
    ]
  }
}


{
  "_ID": 77,
  "example": {
    "sentence": "tasty plant are plant <UNK>@4 both <UNK>@6 herbivore and carnivore . <EOS>",
    "target": "tasty plant := plant ^ E <UNK>@4 <UNK>@6 . ( herbivore ) ^ E <UNK>@4 <UNK>@6 . ( carnivore ) <EOS>",
    "prediction": "tasty plant := plant <UNK>@4 both <UNK>@6 ^ carnivore <EOS>"
  },
  "dump": {
    "sentence_idx": "[1260, 526, 3728, 526, 1, 3467, 1, 4058, 2258, 3741, 1710, 0]",
    "target_idx": "[19, 20, 7, 22, 5, 13, 23, 25, 16, 1, 26, 2, 5, 13, 23, 25, 16, 1, 28, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 25, 5, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.238,
  "tokens_OK": 5,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['<UNK>@6']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['herbivore']",
      "insert    PRED[4:4] -> TAR[11:12] [] -> [')']",
      "insert    PRED[4:4] -> TAR[12:13] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[13:14] [] -> ['E']",
      "replace   PRED[5:6] -> TAR[14:15] ['both'] -> ['<UNK>@4']",
      "insert    PRED[6:6] -> TAR[16:17] [] -> ['.']",
      "replace   PRED[7:8] -> TAR[17:18] ['^'] -> ['(']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> [')']"
    ]
  }
}


{
  "_ID": 54,
  "example": {
    "sentence": "a vegetarian pizza is any pizza that only <UNK>@8 vegetarian topping or no topping . <EOS>",
    "target": "vegetarian pizza := pizza ^ E <UNK>@8 topping . ( vegetarian topping ) U ! E <UNK>@8 topping . ( T ) <EOS>",
    "prediction": "vegetarian pizza := pizza ^ <UNK>@8 vegetarian topping <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 496, 2430, 296, 2133, 2430, 1465, 3546, 1, 496, 1154, 1048, 3710, 1154, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 27, 29, 16, 1, 28, 32, 2, 6, 15, 13, 27, 32, 16, 1, 17, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 27, 28, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.304,
  "tokens_OK": 7,
  "tokens_tot": 23,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['topping']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['topping']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> [')']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['U']",
      "insert    PRED[6:6] -> TAR[14:15] [] -> ['!']",
      "insert    PRED[6:6] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[16:17] [] -> ['<UNK>@8']",
      "insert    PRED[7:7] -> TAR[18:19] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[19:20] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[20:21] [] -> ['T']",
      "insert    PRED[7:7] -> TAR[21:22] [] -> [')']"
    ]
  }
}


{
  "_ID": 61,
  "example": {
    "sentence": "a island or isle is any piece of land that is <UNK>@11 <UNK>@12 <UNK>@13 water . <EOS>",
    "target": "island U isle := piece of land ^ A <UNK>@12 <UNK>@13 . ( water ) <EOS>",
    "prediction": "island := E ( piece U isle ) . ( piece of U <UNK>@11 <UNK>@12 <UNK>@13 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 805, 1048, 4640, 296, 2133, 25, 2995, 2899, 1465, 296, 1, 1, 1, 226, 1710, 0]",
    "target_idx": "[20, 6, 22, 7, 25, 26, 27, 5, 14, 31, 32, 16, 1, 33, 2, 0, 0]",
    "prediction_idx": "[20, 7, 13, 1, 25, 6, 22, 2, 16, 1, 25, 26, 6, 30, 31, 32, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['U']",
      "replace   PRED[2:3] -> TAR[2:3] ['E'] -> ['isle']",
      "replace   PRED[3:4] -> TAR[3:4] ['('] -> [':=']",
      "delete    PRED[5:6] -> TAR[4:4] ['U'] -> []",
      "replace   PRED[6:7] -> TAR[5:6] ['isle'] -> ['of']",
      "replace   PRED[7:8] -> TAR[6:7] [')'] -> ['land']",
      "replace   PRED[8:9] -> TAR[7:8] ['.'] -> ['^']",
      "replace   PRED[9:10] -> TAR[8:9] ['('] -> ['A']",
      "replace   PRED[10:11] -> TAR[9:10] ['piece'] -> ['<UNK>@12']",
      "replace   PRED[11:12] -> TAR[10:11] ['of'] -> ['<UNK>@13']",
      "replace   PRED[12:13] -> TAR[11:12] ['U'] -> ['.']",
      "replace   PRED[13:14] -> TAR[12:13] ['<UNK>@11'] -> ['(']",
      "replace   PRED[14:15] -> TAR[13:14] ['<UNK>@12'] -> ['water']",
      "replace   PRED[15:16] -> TAR[14:15] ['<UNK>@13'] -> [')']"
    ]
  }
}


{
  "_ID": 102,
  "example": {
    "sentence": "<UNK>@0 interclavicle is a dermal bone of pectoral girdle that is median and ventral in position . <EOS>",
    "target": "interclavicle := dermal bone of pectoral girdle ^ E median in . ( position ) ^ E ventral in . ( position ) <EOS>",
    "prediction": "<UNK>@0 interclavicle := dermal bone of pectoral ^ median in position <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 3849, 296, 1532, 280, 432, 2995, 2918, 3852, 1465, 296, 3485, 2258, 3429, 3574, 56, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 27, 5, 13, 30, 33, 16, 1, 34, 2, 5, 13, 32, 33, 16, 1, 34, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 26, 5, 30, 33, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.083,
  "tokens_OK": 2,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "insert    PRED[6:6] -> TAR[6:7] [] -> ['girdle']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['in']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['position']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> ['ventral']",
      "insert    PRED[9:9] -> TAR[19:20] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[10:10] -> TAR[22:23] [] -> [')']"
    ]
  }
}


{
  "_ID": 177,
  "example": {
    "sentence": "a winter sport meeting or event is <UNK>@7 event that <UNK>@10 disrupt traffic . <EOS>",
    "target": "winter sport meeting U winter sport event := event ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "winter := E ( meeting U event ) . ( <UNK>@7 event U <UNK>@10 disrupt ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3279, 3918, 1370, 1048, 4512, 296, 1, 4512, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 22, 6, 20, 21, 24, 7, 27, 5, 12, 18, 30, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 7, 13, 1, 22, 6, 24, 2, 16, 1, 26, 27, 6, 29, 30, 2, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 3,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['sport']",
      "replace   PRED[2:3] -> TAR[2:3] ['E'] -> ['meeting']",
      "replace   PRED[3:4] -> TAR[3:4] ['('] -> ['U']",
      "replace   PRED[4:5] -> TAR[4:5] ['meeting'] -> ['winter']",
      "replace   PRED[5:6] -> TAR[5:6] ['U'] -> ['sport']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> [':=']",
      "replace   PRED[7:8] -> TAR[8:9] [')'] -> ['event']",
      "replace   PRED[8:9] -> TAR[9:10] ['.'] -> ['^']",
      "replace   PRED[9:10] -> TAR[10:11] ['('] -> ['>=']",
      "replace   PRED[10:11] -> TAR[11:12] ['<UNK>@7'] -> ['0']",
      "replace   PRED[11:12] -> TAR[12:13] ['event'] -> ['disrupt']",
      "replace   PRED[12:13] -> TAR[13:14] ['U'] -> ['.']",
      "replace   PRED[13:14] -> TAR[14:15] ['<UNK>@10'] -> ['(']",
      "replace   PRED[14:15] -> TAR[15:16] ['disrupt'] -> ['traffic']"
    ]
  }
}


{
  "_ID": 57,
  "example": {
    "sentence": "the autopodial skeleton is the distal section of the limb skeleton , <UNK>@12 of the anterior autopodium or posterior autopodium . <EOS>",
    "target": "autopodial skeleton := E distal section of . ( limb skeleton ) ^ E <UNK>@12 of . ( anterior autopodium U posterior autopodium ) <EOS>",
    "prediction": "autopodial skeleton := distal section of the ^ <UNK>@12 autopodium <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 103, 4381, 296, 1496, 999, 5310, 2995, 1496, 4294, 4381, 2317, 1, 2995, 1496, 4702, 3302, 1048, 1871, 3302, 1710, 0]",
    "target_idx": "[20, 21, 7, 13, 24, 25, 26, 16, 1, 28, 29, 2, 5, 13, 31, 32, 16, 1, 34, 35, 6, 37, 38, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 27, 5, 31, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.16,
  "tokens_OK": 4,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 15,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['limb']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['skeleton']",
      "replace   PRED[6:7] -> TAR[11:12] ['the'] -> [')']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['anterior']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> ['autopodium']",
      "insert    PRED[8:8] -> TAR[20:21] [] -> ['U']",
      "insert    PRED[8:8] -> TAR[21:22] [] -> ['posterior']",
      "insert    PRED[9:9] -> TAR[23:24] [] -> [')']"
    ]
  }
}


{
  "_ID": 55,
  "example": {
    "sentence": "a currency is a unit of exchange , <UNK>@8 the transfer of goods and service . <EOS>",
    "target": "currency := unit of exchange ^ E <UNK>@8 . ( transfer of goods ) ^ E <UNK>@8 . ( transfer of service ) <EOS>",
    "prediction": "currency := unit of exchange ^ <UNK>@8 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 695, 296, 1532, 1825, 2995, 776, 2317, 1, 1496, 3898, 2995, 4113, 2258, 4834, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 5, 13, 27, 16, 1, 29, 30, 31, 2, 5, 13, 27, 16, 1, 29, 30, 33, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 5, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.292,
  "tokens_OK": 7,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 16,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['<UNK>@8']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['transfer']",
      "insert    PRED[4:4] -> TAR[11:12] [] -> ['of']",
      "insert    PRED[4:4] -> TAR[12:13] [] -> ['goods']",
      "insert    PRED[4:4] -> TAR[13:14] [] -> [')']",
      "insert    PRED[5:5] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[17:18] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[18:19] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[19:20] [] -> ['transfer']",
      "insert    PRED[6:6] -> TAR[20:21] [] -> ['of']",
      "insert    PRED[6:6] -> TAR[21:22] [] -> ['service']",
      "insert    PRED[6:6] -> TAR[22:23] [] -> [')']"
    ]
  }
}


{
  "_ID": 86,
  "example": {
    "sentence": "the pectoral fin skeleton is located in the thoracic region of the body and articulates <UNK>@15 the scapula and coracoid . <EOS>",
    "target": "pectoral fin skeleton := E located in . ( thoracic region of body ) ^ E articulates <UNK>@15 . ( scapula ^ coracoid ) <EOS>",
    "prediction": "pectoral fin skeleton := located in ^ thoracic region <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 4381, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 2258, 670, 1, 1496, 4564, 2258, 2782, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 13, 24, 25, 16, 1, 27, 28, 29, 31, 2, 5, 13, 33, 34, 16, 1, 36, 5, 38, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 24, 25, 5, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 5,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 16,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "replace   PRED[6:7] -> TAR[8:9] ['^'] -> ['(']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['body']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> ['articulates']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> ['<UNK>@15']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[20:21] [] -> ['scapula']",
      "insert    PRED[8:8] -> TAR[21:22] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[22:23] [] -> ['coracoid']",
      "insert    PRED[8:8] -> TAR[23:24] [] -> [')']"
    ]
  }
}


{
  "_ID": 115,
  "example": {
    "sentence": "a cementoblast is a skeletogenic cell that produce cementum , is <UNK>@11 of the odontogenic papilla , and develop <UNK>@19 a precementoblast cell . <EOS>",
    "target": "cementoblast := skeletogenic cell ^ E produce . ( cementum ) ^ E and develop . ( a precementoblast ) ^ E <EOS> ###OUTSIDE### . ( ###OUTSIDE### ###OUTSIDE### ) <EOS>",
    "prediction": "cementoblast := skeletogenic cell ^ E produce . ( cementum <UNK>@19 ^ <UNK>@11 <UNK>@19 odontogenic ) precementoblast cell ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3611, 296, 1532, 2254, 3311, 1465, 4253, 4541, 2317, 296, 1, 2995, 1496, 3698, 5055, 2317, 2258, 3102, 1, 1532, 4351, 3311, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 2, 5, 13, 36, 37, 16, 1, 39, 40, 2, 5, 13, 43, 44, 16, 1, 46, 47, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 38, 5, 30, 38, 33, 2, 40, 41, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 12,
  "tokens_tot": 30,
  "edit_distance": {
    "score": 16,
    "diff_ops": [
      "replace   PRED[10:11] -> TAR[10:11] ['<UNK>@19'] -> [')']",
      "insert    PRED[11:11] -> TAR[12:13] [] -> ['E']",
      "insert    PRED[11:11] -> TAR[13:14] [] -> ['and']",
      "insert    PRED[11:11] -> TAR[14:15] [] -> ['develop']",
      "insert    PRED[11:11] -> TAR[15:16] [] -> ['.']",
      "replace   PRED[12:13] -> TAR[16:17] ['<UNK>@11'] -> ['(']",
      "replace   PRED[13:14] -> TAR[17:18] ['<UNK>@19'] -> ['a']",
      "replace   PRED[14:15] -> TAR[18:19] ['odontogenic'] -> ['precementoblast']",
      "insert    PRED[15:15] -> TAR[20:21] [] -> ['^']",
      "insert    PRED[15:15] -> TAR[21:22] [] -> ['E']",
      "insert    PRED[15:15] -> TAR[22:23] [] -> ['<EOS>']",
      "insert    PRED[15:15] -> TAR[23:24] [] -> ['###OUTSIDE###']",
      "insert    PRED[15:15] -> TAR[24:25] [] -> ['.']",
      "insert    PRED[15:15] -> TAR[25:26] [] -> ['(']",
      "replace   PRED[16:17] -> TAR[26:27] ['precementoblast'] -> ['###OUTSIDE###']",
      "replace   PRED[17:18] -> TAR[27:28] ['cell'] -> ['###OUTSIDE###']"
    ]
  }
}


{
  "_ID": 83,
  "example": {
    "sentence": "the pectoral fin skeleton is a paired fin skeleton that is located in the thoracic region of the body and articulate <UNK>@21 the scapula and the coracoid . <EOS>",
    "target": "pectoral fin skeleton := paired fin skeleton ^ E located in . ( thoracic region of body ) ^ E articulate <UNK>@21 . ( scapula ) ^ E articulate <UNK>@21 . ( coracoid ) <EOS>",
    "prediction": "pectoral fin skeleton := paired fin skeleton ^ E located in . ( thoracic region of ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 4381, 296, 1532, 2424, 613, 4381, 1465, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 2258, 1452, 1, 1496, 4564, 2258, 1496, 2782, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 31, 16, 1, 33, 34, 35, 37, 2, 5, 13, 39, 40, 16, 1, 42, 2, 5, 13, 39, 40, 16, 1, 45, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 31, 16, 1, 33, 34, 35, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.486,
  "tokens_OK": 17,
  "tokens_tot": 35,
  "edit_distance": {
    "score": 17,
    "diff_ops": [
      "insert    PRED[15:15] -> TAR[16:17] [] -> ['body']",
      "insert    PRED[15:15] -> TAR[17:18] [] -> [')']",
      "insert    PRED[15:15] -> TAR[18:19] [] -> ['^']",
      "insert    PRED[15:15] -> TAR[19:20] [] -> ['E']",
      "insert    PRED[15:15] -> TAR[20:21] [] -> ['articulate']",
      "insert    PRED[15:15] -> TAR[21:22] [] -> ['<UNK>@21']",
      "insert    PRED[15:15] -> TAR[22:23] [] -> ['.']",
      "insert    PRED[15:15] -> TAR[23:24] [] -> ['(']",
      "insert    PRED[15:15] -> TAR[24:25] [] -> ['scapula']",
      "insert    PRED[15:15] -> TAR[25:26] [] -> [')']",
      "insert    PRED[15:15] -> TAR[26:27] [] -> ['^']",
      "insert    PRED[15:15] -> TAR[27:28] [] -> ['E']",
      "insert    PRED[15:15] -> TAR[28:29] [] -> ['articulate']",
      "insert    PRED[15:15] -> TAR[29:30] [] -> ['<UNK>@21']",
      "insert    PRED[15:15] -> TAR[30:31] [] -> ['.']",
      "insert    PRED[15:15] -> TAR[31:32] [] -> ['(']",
      "insert    PRED[15:15] -> TAR[32:33] [] -> ['coracoid']"
    ]
  }
}


{
  "_ID": 150,
  "example": {
    "sentence": "<UNK>@0 authority operation is <UNK>@4 operation or activity <UNK>@8 <UNK>@9 the authority that <UNK>@13 disrupt traffic . <EOS>",
    "target": "authority operation := ( operation U activity ) ^ E <UNK>@8 <UNK>@9 . ( authority ) ^ >= 0 disrupt . ( traffic ) <EOS>",
    "prediction": "<UNK>@0 authority := := operation operation U activity <UNK>@8 <UNK>@9 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 4509, 5183, 296, 1, 5183, 1048, 2231, 1, 1, 1496, 4509, 1465, 1, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 1, 24, 6, 26, 2, 5, 13, 27, 28, 16, 1, 30, 2, 5, 12, 18, 33, 16, 1, 34, 2, 0]",
    "prediction_idx": "[19, 20, 7, 7, 24, 24, 6, 26, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.12,
  "tokens_OK": 3,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 18,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[2:3] -> TAR[1:2] [':='] -> ['operation']",
      "replace   PRED[4:5] -> TAR[3:4] ['operation'] -> ['(']",
      "insert    PRED[7:7] -> TAR[7:8] [] -> [')']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['E']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> ['authority']",
      "insert    PRED[9:9] -> TAR[15:16] [] -> [')']",
      "insert    PRED[9:9] -> TAR[16:17] [] -> ['^']",
      "insert    PRED[9:9] -> TAR[17:18] [] -> ['>=']",
      "insert    PRED[9:9] -> TAR[18:19] [] -> ['0']",
      "insert    PRED[9:9] -> TAR[19:20] [] -> ['disrupt']",
      "insert    PRED[9:9] -> TAR[20:21] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[21:22] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[22:23] [] -> ['traffic']",
      "insert    PRED[9:9] -> TAR[23:24] [] -> [')']"
    ]
  }
}


{
  "_ID": 88,
  "example": {
    "sentence": "a <UNK>@1 differentiated odontoblast is <UNK>@5 odontoblast that is located in the odontogenic papilla and dentine tissue , and transform <UNK>@20 a odontoblast cell . <EOS>",
    "target": "<UNK>@1 differentiated odontoblast := odontoblast ^ E located in . ( odontogenic papilla U dentine tissue ) ^ E transform <UNK>@20 . ( odontoblast cell ) <EOS>",
    "prediction": "<UNK>@1 differentiated odontoblast := <UNK>@5 odontoblast ^ located in <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1, 2457, 889, 296, 1, 889, 1465, 296, 3886, 3574, 1496, 3698, 5055, 2258, 3471, 3846, 2317, 2258, 4960, 1, 1532, 889, 3311, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 28, 29, 16, 1, 31, 32, 6, 34, 35, 2, 5, 13, 38, 39, 16, 1, 41, 42, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 24, 25, 5, 28, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.259,
  "tokens_OK": 7,
  "tokens_tot": 27,
  "edit_distance": {
    "score": 19,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@5'] -> []",
      "insert    PRED[6:6] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['odontogenic']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['papilla']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['U']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['dentine']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> ['tissue']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> [')']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> ['transform']",
      "insert    PRED[8:8] -> TAR[20:21] [] -> ['<UNK>@20']",
      "insert    PRED[8:8] -> TAR[21:22] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[22:23] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[23:24] [] -> ['odontoblast']",
      "insert    PRED[8:8] -> TAR[24:25] [] -> ['cell']",
      "insert    PRED[8:8] -> TAR[25:26] [] -> [')']"
    ]
  }
}


{
  "_ID": 93,
  "example": {
    "sentence": "the scapular complex is a skeletal subdivision of dermal bone that may include the anterolateral plate , the spinal process , and anteroventral plate <UNK>@24 av <UNK>@26 and other dermal bone that are <UNK>@33 of the pectoral girdle . <EOS>",
    "target": "scapular complex := skeletal subdivision of dermal bone ^ E include . ( anterolateral plate U , and anteroventral U other dermal U ( the pectoral ^ E <EOS> ###OUTSIDE### . ( ###OUTSIDE### ###OUTSIDE### ) ) <EOS>",
    "prediction": "scapular complex is := skeletal subdivision of dermal ^ E may . ( include ) ^ E may . ( spinal process <UNK>@26 ) ^ E may . ( <UNK>@33 plate <UNK>@24 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3790, 2924, 296, 1532, 3051, 5142, 2995, 280, 432, 1465, 1126, 3459, 1496, 5010, 1935, 2317, 1496, 3646, 1805, 2317, 2258, 5250, 1935, 1, 5082, 1, 2258, 5342, 280, 432, 1465, 3728, 1, 2995, 1496, 2918, 3852, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 26, 27, 28, 5, 13, 31, 16, 1, 33, 34, 6, 39, 40, 41, 6, 47, 48, 6, 1, 54, 55, 5, 13, 58, 59, 16, 1, 61, 62, 2, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 24, 25, 26, 27, 5, 13, 30, 16, 1, 31, 2, 5, 13, 30, 16, 1, 37, 38, 45, 2, 5, 13, 30, 16, 1, 52, 42, 43, 2, 0, 0, 0, 0]"
  },
  "accuracy": 0.189,
  "tokens_OK": 7,
  "tokens_tot": 37,
  "edit_distance": {
    "score": 21,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['is'] -> []",
      "insert    PRED[7:7] -> TAR[7:8] [] -> ['bone']",
      "replace   PRED[10:11] -> TAR[10:11] ['may'] -> ['include']",
      "insert    PRED[12:12] -> TAR[13:14] [] -> ['anterolateral']",
      "insert    PRED[12:12] -> TAR[14:15] [] -> ['plate']",
      "replace   PRED[13:14] -> TAR[15:16] ['include'] -> ['U']",
      "replace   PRED[14:15] -> TAR[16:17] [')'] -> [',']",
      "replace   PRED[15:16] -> TAR[17:18] ['^'] -> ['and']",
      "replace   PRED[16:17] -> TAR[18:19] ['E'] -> ['anteroventral']",
      "replace   PRED[17:18] -> TAR[19:20] ['may'] -> ['U']",
      "replace   PRED[18:19] -> TAR[20:21] ['.'] -> ['other']",
      "replace   PRED[19:20] -> TAR[21:22] ['('] -> ['dermal']",
      "replace   PRED[20:21] -> TAR[22:23] ['spinal'] -> ['U']",
      "replace   PRED[21:22] -> TAR[23:24] ['process'] -> ['(']",
      "replace   PRED[22:23] -> TAR[24:25] ['<UNK>@26'] -> ['the']",
      "replace   PRED[23:24] -> TAR[25:26] [')'] -> ['pectoral']",
      "insert    PRED[25:25] -> TAR[28:29] [] -> ['<EOS>']",
      "replace   PRED[26:27] -> TAR[29:30] ['may'] -> ['###OUTSIDE###']",
      "replace   PRED[29:30] -> TAR[32:33] ['<UNK>@33'] -> ['###OUTSIDE###']",
      "replace   PRED[30:31] -> TAR[33:34] ['plate'] -> ['###OUTSIDE###']",
      "replace   PRED[31:32] -> TAR[34:35] ['<UNK>@24'] -> [')']"
    ]
  }
}


{
  "_ID": 133,
  "example": {
    "sentence": "<UNK>@0 osteoblast is a skeletogenic cell that secretes osteoid , is capable of <UNK>@13 mineralized matrix , is located adjacent <UNK>@20 or <UNK>@22 osteoid tissue , and arises <UNK>@28 the transformation of a preosteoblast cell . <EOS>",
    "target": "osteoblast := skeletogenic cell ^ E secretes . ( osteoid ) ^ E <UNK>@13 . ( mineralized matrix ) ^ E ( located adjacent <UNK>@20 ^ located <UNK>@22 ) . ( osteoid tissue ) ^ E arises <UNK>@28 . ( transformation of preosteoblast cell ) <EOS>",
    "prediction": "<UNK>@0 osteoblast := skeletogenic cell ^ E secretes . ( osteoid U capable of <UNK>@13 U <UNK>@22 <UNK>@28 tissue ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 933, 296, 1532, 2254, 3311, 1465, 838, 1339, 2317, 296, 2774, 2995, 1, 4878, 4700, 2317, 296, 3886, 2938, 1, 1048, 1, 1339, 3846, 2317, 2258, 5221, 1, 1496, 2323, 2995, 1532, 960, 3311, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 2, 5, 13, 32, 16, 1, 33, 34, 2, 5, 13, 1, 37, 38, 39, 5, 37, 41, 2, 16, 1, 42, 43, 2, 5, 13, 46, 47, 16, 1, 49, 50, 52, 53, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 6, 30, 31, 32, 6, 41, 47, 43, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.022,
  "tokens_OK": 1,
  "tokens_tot": 46,
  "edit_distance": {
    "score": 32,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] ['U'] -> [')']",
      "replace   PRED[12:13] -> TAR[11:12] ['capable'] -> ['^']",
      "replace   PRED[13:14] -> TAR[12:13] ['of'] -> ['E']",
      "insert    PRED[14:14] -> TAR[14:15] [] -> ['.']",
      "insert    PRED[14:14] -> TAR[15:16] [] -> ['(']",
      "insert    PRED[14:14] -> TAR[16:17] [] -> ['mineralized']",
      "insert    PRED[14:14] -> TAR[17:18] [] -> ['matrix']",
      "insert    PRED[14:14] -> TAR[18:19] [] -> [')']",
      "insert    PRED[14:14] -> TAR[19:20] [] -> ['^']",
      "insert    PRED[14:14] -> TAR[20:21] [] -> ['E']",
      "insert    PRED[14:14] -> TAR[21:22] [] -> ['(']",
      "insert    PRED[14:14] -> TAR[22:23] [] -> ['located']",
      "insert    PRED[14:14] -> TAR[23:24] [] -> ['adjacent']",
      "insert    PRED[14:14] -> TAR[24:25] [] -> ['<UNK>@20']",
      "insert    PRED[14:14] -> TAR[25:26] [] -> ['^']",
      "replace   PRED[15:16] -> TAR[26:27] ['U'] -> ['located']",
      "insert    PRED[16:16] -> TAR[28:29] [] -> [')']",
      "insert    PRED[16:16] -> TAR[29:30] [] -> ['.']",
      "insert    PRED[16:16] -> TAR[30:31] [] -> ['(']",
      "insert    PRED[16:16] -> TAR[31:32] [] -> ['osteoid']",
      "insert    PRED[16:16] -> TAR[32:33] [] -> ['tissue']",
      "insert    PRED[16:16] -> TAR[33:34] [] -> [')']",
      "insert    PRED[16:16] -> TAR[34:35] [] -> ['^']",
      "insert    PRED[16:16] -> TAR[35:36] [] -> ['E']",
      "insert    PRED[16:16] -> TAR[36:37] [] -> ['arises']",
      "insert    PRED[17:17] -> TAR[38:39] [] -> ['.']",
      "insert    PRED[17:17] -> TAR[39:40] [] -> ['(']",
      "insert    PRED[17:17] -> TAR[40:41] [] -> ['transformation']",
      "insert    PRED[17:17] -> TAR[41:42] [] -> ['of']",
      "insert    PRED[17:17] -> TAR[42:43] [] -> ['preosteoblast']",
      "replace   PRED[18:19] -> TAR[43:44] ['tissue'] -> ['cell']"
    ]
  }
}


{
  "_ID": 50,
  "example": {
    "sentence": "axial skeleton is a skeletal subdivision of the central body axis <UNK>@11 the cranium , vertebra , notochord , rib , and sternum . <EOS>",
    "target": "axial skeleton := skeletal subdivision of central body axis ^ E <UNK>@11 . ( cranium ) ^ E <UNK>@11 . ( vertebra ) ^ E <UNK>@11 . ( notochord ) ^ E <UNK>@11 . ( rib ) ^ E <UNK>@11 . ( sternum ) <EOS>",
    "prediction": "axial skeleton := skeletal subdivision of central <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 4381, 296, 1532, 3051, 5142, 2995, 1496, 780, 5126, 2107, 1, 1496, 3862, 2317, 4362, 2317, 595, 2317, 1983, 2317, 2258, 218, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 25, 27, 28, 29, 5, 13, 30, 16, 1, 32, 2, 5, 13, 30, 16, 1, 34, 2, 5, 13, 30, 16, 1, 36, 2, 5, 13, 30, 16, 1, 38, 2, 5, 13, 30, 16, 1, 41, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.178,
  "tokens_OK": 8,
  "tokens_tot": 45,
  "edit_distance": {
    "score": 37,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['body']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['axis']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[14:15] [] -> ['cranium']",
      "insert    PRED[6:6] -> TAR[15:16] [] -> [')']",
      "insert    PRED[6:6] -> TAR[16:17] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[17:18] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[18:19] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[19:20] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[21:22] [] -> ['vertebra']",
      "insert    PRED[6:6] -> TAR[22:23] [] -> [')']",
      "insert    PRED[6:6] -> TAR[23:24] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[24:25] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[25:26] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[26:27] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[27:28] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[28:29] [] -> ['notochord']",
      "insert    PRED[6:6] -> TAR[29:30] [] -> [')']",
      "insert    PRED[6:6] -> TAR[30:31] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[31:32] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[32:33] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[33:34] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[34:35] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[35:36] [] -> ['rib']",
      "insert    PRED[6:6] -> TAR[36:37] [] -> [')']",
      "insert    PRED[6:6] -> TAR[37:38] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[38:39] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[39:40] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[40:41] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[41:42] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[42:43] [] -> ['sternum']",
      "insert    PRED[6:6] -> TAR[43:44] [] -> [')']"
    ]
  }
}


