# ANALYTICS
#
# AVG. PER-FORMULA ACCURACY: 0.11765
# AVG. EDIT DISTANCE: 4.92157
# AVG. PER-TOKEN ACCURACY: 0.49937
#
# ED	#	%	% INC
# 0	6	11.76	11.76
# 1	8	15.69	27.45
# 2	6	11.76	39.22
# 3	4	7.84	47.06
# 4	4	7.84	54.90
# 5	3	5.88	60.78
# 6	7	13.73	74.51
# 7	2	3.92	78.43
# 8	5	9.80	88.24
# 10	3	5.88	94.12
# 12	1	1.96	96.08
# 13	1	1.96	98.04
# 37	1	1.96	100.00



{
  "_ID": 2,
  "example": {
    "sentence": "a solid compound organ is a compound organ that do not contain macroscopic anatomical space . <EOS>",
    "target": "solid compound organ := compound organ ^ ! E contain . ( macroscopic anatomical space ) <EOS>",
    "prediction": "solid compound organ := compound organ ^ ! E contain . ( macroscopic anatomical space ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 360, 816, 2521, 296, 1532, 816, 2521, 1465, 4823, 2015, 3577, 661, 2927, 1053, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 5, 15, 13, 30, 16, 1, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 5, 15, 13, 30, 16, 1, 31, 32, 33, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 17,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 8,
  "example": {
    "sentence": "a feature is a abstraction of real world phenomenon . <EOS>",
    "target": "feature := abstraction of real world phenomenon <EOS>",
    "prediction": "feature := abstraction of real world phenomenon <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 110, 296, 1532, 26, 2995, 3411, 2696, 5177, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 27, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 27, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 8,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 15,
  "example": {
    "sentence": "lion are animal that eat only herbivore . <EOS>",
    "target": "lion := animal ^ A eat . ( herbivore ) <EOS>",
    "prediction": "lion := animal ^ A eat . ( herbivore ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5233, 1465, 2867, 3546, 4058, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 0]",
    "prediction_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 16,
  "example": {
    "sentence": "a vector is a organism that carry or transmit a pathogen . <EOS>",
    "target": "vector := organism ^ E ( carry U transmit ) . ( pathogen ) <EOS>",
    "prediction": "vector := organism ^ E ( carry U transmit ) . ( pathogen ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 965, 296, 1532, 4122, 1465, 1252, 1048, 1102, 1532, 2359, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 1, 25, 6, 27, 2, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 1, 25, 6, 27, 2, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 15,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 20,
  "example": {
    "sentence": "a <UNK>@1 device is a device that implement <UNK>@8 . <EOS>",
    "target": "<UNK>@1 device := device ^ E implement . ( <UNK>@8 ) <EOS>",
    "prediction": "<UNK>@1 device := device ^ E implement . ( <UNK>@8 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1, 2016, 296, 1532, 2016, 1465, 3449, 1, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 22,
  "example": {
    "sentence": "a output is any information that is <UNK>@7 <UNK>@8 a process . <EOS>",
    "target": "output := information ^ E <UNK>@7 <UNK>@8 . ( process ) <EOS>",
    "prediction": "output := information ^ E <UNK>@7 <UNK>@8 . ( process ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1783, 296, 2133, 2786, 1465, 296, 1, 1, 1532, 1805, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 2, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 2, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 4,
  "example": {
    "sentence": "a device is a system in a box . <EOS>",
    "target": "device := system in box <EOS>",
    "prediction": "device := system in U box <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2016, 296, 1532, 1484, 3574, 1532, 573, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 6, 26, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['U'] -> []"
    ]
  }
}


{
  "_ID": 7,
  "example": {
    "sentence": "vehicle are non-living means of transportation . <EOS>",
    "target": "vehicle := non-living means of transportation <EOS>",
    "prediction": "vehicle := non-living means of transportation ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[116, 3728, 4032, 1217, 2995, 1839, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 5, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 7,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []"
    ]
  }
}


{
  "_ID": 9,
  "example": {
    "sentence": "organism subdivision is a anatomical structure that is a primary subdivision of whole organism . <EOS>",
    "target": "organism subdivision := anatomical structure ^ primary subdivision of whole organism <EOS>",
    "prediction": "organism subdivision := anatomical structure ^ primary subdivision of whole <EOS>"
  },
  "dump": {
    "sentence_idx": "[4122, 5142, 296, 1532, 2927, 1743, 1465, 296, 1532, 3340, 5142, 2995, 5063, 4122, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 28, 29, 30, 31, 32, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 28, 29, 30, 31, 0, 0]"
  },
  "accuracy": 0.917,
  "tokens_OK": 11,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['organism']"
    ]
  }
}


{
  "_ID": 10,
  "example": {
    "sentence": "a interesting pizza is a pizza that <UNK>@7 at least NUM topping . <EOS>",
    "target": "interesting pizza := pizza ^ >= NUM <UNK>@7 topping . ( topping ) <EOS>",
    "prediction": "interesting pizza := pizza ^ >= NUM <UNK>@7 topping . ( T ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2812, 2430, 296, 1532, 2430, 1465, 1, 2305, 4025, 2, 1154, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 17, 2, 0]"
  },
  "accuracy": 0.929,
  "tokens_OK": 13,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[11:12] -> TAR[11:12] ['T'] -> ['topping']"
    ]
  }
}


{
  "_ID": 21,
  "example": {
    "sentence": "a stimulus is a event in the real world that trigger the sensor . <EOS>",
    "target": "stimulus := event in real world ^ E trigger . ( sensor ) <EOS>",
    "prediction": "stimulus := event in world ^ E trigger . ( sensor ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3305, 296, 1532, 4512, 3574, 1496, 3411, 2696, 1465, 1179, 1496, 2913, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 27, 5, 13, 29, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 27, 5, 13, 29, 16, 1, 31, 2, 0, 0]"
  },
  "accuracy": 0.357,
  "tokens_OK": 5,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['real']"
    ]
  }
}


{
  "_ID": 24,
  "example": {
    "sentence": "a observation value is the value of the result of a observation . <EOS>",
    "target": "observation value := value of result of observation <EOS>",
    "prediction": "observation value := value of result of observation observation <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3794, 1995, 296, 1496, 1995, 2995, 1496, 1120, 2995, 1532, 3794, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 27, 28, 30, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 27, 28, 30, 30, 0]"
  },
  "accuracy": 0.9,
  "tokens_OK": 9,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['observation'] -> []"
    ]
  }
}


{
  "_ID": 32,
  "example": {
    "sentence": "a device is a physical piece of technology . <EOS>",
    "target": "device := physical piece of technology <EOS>",
    "prediction": "device := physical piece of technology ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2016, 296, 1532, 1218, 25, 2995, 1561, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 25, 26, 5, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 7,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['^'] -> []"
    ]
  }
}


{
  "_ID": 45,
  "example": {
    "sentence": "a cheesey pizza is any pizza that <UNK>@7 at least NUM cheese topping . <EOS>",
    "target": "cheesey pizza := pizza ^ >= NUM <UNK>@7 topping . ( cheese topping ) <EOS>",
    "prediction": "cheesey pizza := pizza ^ >= NUM <UNK>@7 topping . ( T topping ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 134, 2430, 296, 2133, 2430, 1465, 1, 2305, 4025, 2, 1620, 1154, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 31, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 31, 16, 1, 17, 31, 2, 0]"
  },
  "accuracy": 0.933,
  "tokens_OK": 14,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[11:12] -> TAR[11:12] ['T'] -> ['cheese']"
    ]
  }
}


{
  "_ID": 1,
  "example": {
    "sentence": "a direct ossification is a ossification that do not require the replacement of pre-existing tissue . <EOS>",
    "target": "direct ossification := ossification ^ ! E require . ( replacement of pre-existing tissue ) <EOS>",
    "prediction": "direct ossification := ossification ^ E not require . ( replacement of pre-existing tissue ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5240, 664, 296, 1532, 664, 1465, 4823, 2015, 4742, 1496, 4747, 2995, 3139, 3846, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 15, 13, 28, 16, 1, 30, 31, 32, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 33, 2, 0]"
  },
  "accuracy": 0.875,
  "tokens_OK": 14,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['E'] -> ['!']",
      "replace   PRED[6:7] -> TAR[6:7] ['not'] -> ['E']"
    ]
  }
}


{
  "_ID": 6,
  "example": {
    "sentence": "tree are a <UNK>@3 of plant . <EOS>",
    "target": "tree := plant <EOS>",
    "prediction": "tree := <UNK>@3 of <EOS>"
  },
  "dump": {
    "sentence_idx": "[420, 3728, 1532, 1, 2995, 526, 1710, 0]",
    "target_idx": "[19, 7, 24, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 3,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['<UNK>@3'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['of'] -> ['plant']"
    ]
  }
}


{
  "_ID": 34,
  "example": {
    "sentence": "pectoral fin is a paired fin that is located in the thoracic region of the body . <EOS>",
    "target": "pectoral fin := paired fin ^ E located in . ( thoracic region of body ) <EOS>",
    "prediction": "pectoral fin := paired fin ^ E located in . in thoracic region of ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[2918, 613, 296, 1532, 2424, 613, 1465, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 34, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 5, 13, 27, 28, 16, 28, 30, 31, 32, 2, 0, 0]"
  },
  "accuracy": 0.824,
  "tokens_OK": 14,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[10:11] -> TAR[10:11] ['in'] -> ['(']",
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['body']"
    ]
  }
}


{
  "_ID": 36,
  "example": {
    "sentence": "a rock dassie is a animal that eat grass and broad-leafed plant . <EOS>",
    "target": "rock dassie := animal ^ E eat . ( grass ) ^ E eat . ( broad-leafed plant ) <EOS>",
    "prediction": "rock dassie := animal ^ E eat grass . ( grass ) ^ E plant . ( broad-leafed plant ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5013, 3888, 296, 1532, 5233, 1465, 2867, 2256, 2258, 3508, 526, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 16, 1, 27, 2, 5, 13, 26, 16, 1, 29, 30, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 27, 2, 5, 13, 30, 16, 1, 29, 30, 2, 0]"
  },
  "accuracy": 0.381,
  "tokens_OK": 8,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['grass'] -> []",
      "replace   PRED[14:15] -> TAR[13:14] ['plant'] -> ['eat']"
    ]
  }
}


{
  "_ID": 41,
  "example": {
    "sentence": "the anal fin skeleton is a median fin skeleton that is located posterior <UNK>@13 the anus . <EOS>",
    "target": "anal fin skeleton := median fin skeleton ^ E located posterior <UNK>@13 . ( anus ) <EOS>",
    "prediction": "anal fin skeleton := median fin skeleton ^ E located posterior . ( the ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 4381, 296, 1532, 3485, 613, 4381, 1465, 296, 3886, 1871, 1, 1496, 610, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 31, 32, 16, 1, 34, 2, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 13, 30, 31, 16, 1, 33, 2, 0, 0]"
  },
  "accuracy": 0.706,
  "tokens_OK": 12,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[10:10] -> TAR[11:12] [] -> ['<UNK>@13']",
      "replace   PRED[13:14] -> TAR[14:15] ['the'] -> ['anus']"
    ]
  }
}


{
  "_ID": 47,
  "example": {
    "sentence": "integument is the surface structure that is the outer protective covering of the body . <EOS>",
    "target": "integument := surface structure ^ outer protective covering of body <EOS>",
    "prediction": "integument := surface structure ^ body protective covering body <EOS>"
  },
  "dump": {
    "sentence_idx": "[4967, 296, 1496, 3458, 1743, 1465, 296, 1496, 4382, 4697, 3943, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 27, 28, 29, 30, 32, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 32, 28, 29, 32, 0, 0]"
  },
  "accuracy": 0.727,
  "tokens_OK": 8,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['body'] -> ['outer']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['of']"
    ]
  }
}


{
  "_ID": 13,
  "example": {
    "sentence": "a meaty pizza is any pizza that <UNK>@7 at least NUM topping of meat . <EOS>",
    "target": "meaty pizza := pizza ^ >= NUM <UNK>@7 topping . ( meat ) <EOS>",
    "prediction": "meaty pizza := pizza ^ >= NUM <UNK>@7 topping . ( T of meat <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3850, 2430, 296, 2133, 2430, 1465, 1, 2305, 4025, 2, 1154, 2995, 2605, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 12, 29, 26, 30, 16, 1, 17, 31, 32, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 12,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[11:12] -> TAR[10:10] ['T'] -> []",
      "replace   PRED[12:13] -> TAR[11:12] ['of'] -> ['meat']",
      "replace   PRED[13:14] -> TAR[12:13] ['meat'] -> [')']"
    ]
  }
}


{
  "_ID": 25,
  "example": {
    "sentence": "giraffe are herbivore , and <UNK>@5 eat only leaf . <EOS>",
    "target": "giraffe := herbivore ^ A eat . ( leaf ) <EOS>",
    "prediction": "giraffe := herbivore ^ <UNK>@5 <UNK>@5 eat ( ( leaf ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 4058, 2317, 2258, 1, 2867, 3546, 4585, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 25, 16, 1, 27, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 24, 24, 25, 1, 1, 27, 2, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@5'] -> []",
      "replace   PRED[5:6] -> TAR[4:5] ['<UNK>@5'] -> ['A']",
      "replace   PRED[7:8] -> TAR[6:7] ['('] -> ['.']"
    ]
  }
}


{
  "_ID": 35,
  "example": {
    "sentence": "datum are fact that result <UNK>@5 measurement or observation . <EOS>",
    "target": "datum := fact ^ E result <UNK>@5 . ( measurement U observation ) <EOS>",
    "prediction": "datum := fact ^ E result <UNK>@5 . ( measurement ) ^ U ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[5275, 3728, 286, 1465, 1120, 1, 2824, 1048, 3794, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 25, 6, 27, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 25, 2, 5, 6, 2, 0]"
  },
  "accuracy": 0.733,
  "tokens_OK": 11,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[10:11] -> TAR[9:9] [')'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] ['^'] -> ['U']",
      "replace   PRED[12:13] -> TAR[11:12] ['U'] -> ['observation']"
    ]
  }
}


{
  "_ID": 38,
  "example": {
    "sentence": "a male organism is a gonochoristic organism that <UNK>@8 produce male gamete . <EOS>",
    "target": "male organism := gonochoristic organism ^ >= 0 produce . ( male gamete ) <EOS>",
    "prediction": "male organism := gonochoristic organism ^ E <UNK>@8 . ( male gamete ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4420, 4122, 296, 1532, 567, 4122, 1465, 1, 4253, 4420, 3751, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 12, 18, 28, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 30, 2, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['>=']",
      "replace   PRED[6:7] -> TAR[7:8] ['E'] -> ['0']",
      "replace   PRED[7:8] -> TAR[8:9] ['<UNK>@8'] -> ['produce']"
    ]
  }
}


{
  "_ID": 14,
  "example": {
    "sentence": "the sensor datum sheet is a object that record property of a sensor . <EOS>",
    "target": "sensor datum sheet := object ^ E record . ( property of sensor ) <EOS>",
    "prediction": "sensor datum sheet := object ^ ! E property . ( of a sensor ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2913, 5275, 1267, 296, 1532, 3093, 1465, 4583, 2664, 2995, 1532, 2913, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 13, 27, 16, 1, 28, 29, 31, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 5, 15, 13, 28, 16, 1, 29, 30, 31, 2, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 8,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['!'] -> []",
      "replace   PRED[8:9] -> TAR[7:8] ['property'] -> ['record']",
      "replace   PRED[11:12] -> TAR[10:11] ['of'] -> ['property']",
      "replace   PRED[12:13] -> TAR[11:12] ['a'] -> ['of']"
    ]
  }
}


{
  "_ID": 17,
  "example": {
    "sentence": "a american hot pizza is a <UNK>@6 of american pizza that <UNK>@11 jalapeno pepper <UNK>@14 <UNK>@15 . <EOS>",
    "target": "american hot pizza := american pizza ^ E <UNK>@11 <UNK>@14 . ( jalapeno pepper ) <EOS>",
    "prediction": "american hot pizza := <UNK>@6 of american pizza ^ E <UNK>@11 . ( jalapeno pepper <UNK>@14 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2872, 2430, 296, 1532, 1, 2995, 3347, 2430, 1465, 1, 1660, 3353, 1, 1, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 27, 28, 5, 13, 30, 33, 16, 1, 31, 32, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 28, 5, 13, 30, 16, 1, 31, 32, 33, 0]"
  },
  "accuracy": 0.294,
  "tokens_OK": 5,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@6'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "insert    PRED[10:10] -> TAR[9:10] [] -> ['<UNK>@14']",
      "replace   PRED[15:16] -> TAR[14:15] ['<UNK>@14'] -> [')']"
    ]
  }
}


{
  "_ID": 18,
  "example": {
    "sentence": "a cell space is a anatomical space that is <UNK>@9 of a cell . <EOS>",
    "target": "cell space := anatomical space ^ E <UNK>@9 of . ( cell ) <EOS>",
    "prediction": "cell space := anatomical space ^ <UNK>@9 of a cell <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3311, 1053, 296, 1532, 2927, 1053, 1465, 296, 1, 2995, 1532, 3311, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 28, 29, 16, 1, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 28, 29, 30, 31, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "replace   PRED[8:9] -> TAR[10:11] ['a'] -> ['(']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 42,
  "example": {
    "sentence": "<UNK>@0 endochondral bone is a replacement bone that form <UNK>@9 the cartilage . <EOS>",
    "target": "endochondral bone := replacement bone ^ E form <UNK>@9 . cartilage <EOS>",
    "prediction": "<UNK>@0 endochondral bone := replacement bone ^ E form . ( <UNK>@9 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 3425, 432, 296, 1532, 4747, 432, 1465, 2845, 1, 1496, 1005, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 28, 16, 30, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 0]"
  },
  "accuracy": 0.154,
  "tokens_OK": 2,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['<UNK>@0'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['.'] -> ['<UNK>@9']",
      "replace   PRED[10:11] -> TAR[9:10] ['('] -> ['.']",
      "replace   PRED[11:12] -> TAR[10:11] ['<UNK>@9'] -> ['cartilage']"
    ]
  }
}


{
  "_ID": 30,
  "example": {
    "sentence": "a spicy pizza is any pizza that <UNK>@7 a topping that is spicy . <EOS>",
    "target": "spicy pizza := any pizza ^ E <UNK>@7 topping . ( spicy topping ) <EOS>",
    "prediction": "spicy pizza := pizza ^ E <UNK>@7 topping . ( spicy ) ^ E <UNK>@7 <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 611, 2430, 296, 2133, 2430, 1465, 1, 1532, 1154, 1465, 296, 611, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 28, 16, 1, 31, 28, 2, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 13, 26, 28, 16, 1, 31, 2, 5, 13, 26, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 4,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['any']",
      "delete    PRED[11:12] -> TAR[11:11] [')'] -> []",
      "delete    PRED[12:13] -> TAR[11:11] ['^'] -> []",
      "replace   PRED[13:14] -> TAR[12:13] ['E'] -> ['topping']",
      "replace   PRED[14:15] -> TAR[13:14] ['<UNK>@7'] -> [')']"
    ]
  }
}


{
  "_ID": 31,
  "example": {
    "sentence": "axial ossicle is a ossicle that is <UNK>@7 of the axial skeleton . <EOS>",
    "target": "axial ossicle := ossicle ^ E <UNK>@7 of . ( axial skeleton ) <EOS>",
    "prediction": "axial ossicle := ossicle ^ <UNK>@7 of the skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 3968, 296, 1532, 3968, 1465, 296, 1, 2995, 1496, 4722, 4381, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 5, 13, 26, 27, 16, 1, 29, 30, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 26, 27, 28, 30, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "replace   PRED[7:8] -> TAR[10:11] ['the'] -> ['axial']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 33,
  "example": {
    "sentence": "branch are <UNK>@2 of tree . <EOS>",
    "target": "branch := E <UNK>@2 of . ( tree ) <EOS>",
    "prediction": "branch := <UNK>@2 of tree ^ tree <UNK>@2 tree <EOS>"
  },
  "dump": {
    "sentence_idx": "[4358, 3728, 1, 2995, 420, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 23, 21, 23, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "replace   PRED[4:5] -> TAR[5:6] ['tree'] -> ['.']",
      "replace   PRED[5:6] -> TAR[6:7] ['^'] -> ['(']",
      "delete    PRED[7:8] -> TAR[7:7] ['<UNK>@2'] -> []",
      "replace   PRED[8:9] -> TAR[8:9] ['tree'] -> [')']"
    ]
  }
}


{
  "_ID": 3,
  "example": {
    "sentence": "spicy topping is any topping that <UNK>@6 a hot spiciness . <EOS>",
    "target": "spicy topping := topping ^ E <UNK>@6 spiciness . ( hot spiciness ) <EOS>",
    "prediction": "spicy topping := topping ^ E ( <UNK>@6 ^ <UNK>@6 ) . ( hot <EOS>"
  },
  "dump": {
    "sentence_idx": "[611, 1154, 296, 2133, 1154, 1465, 1, 1532, 2872, 390, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 5, 13, 25, 28, 16, 1, 27, 28, 2, 0, 0]",
    "prediction_idx": "[19, 20, 7, 23, 5, 13, 1, 25, 5, 25, 2, 16, 1, 27, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['('] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['<UNK>@6'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['^'] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['spiciness']",
      "insert    PRED[13:13] -> TAR[11:12] [] -> ['spiciness']",
      "insert    PRED[13:13] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 11,
  "example": {
    "sentence": "a property is a observable quality of a event or object . <EOS>",
    "target": "property := observable quality of event U observable quality of object <EOS>",
    "prediction": "property := observable of of ^ = object <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2664, 296, 1532, 369, 4980, 2995, 1532, 4512, 1048, 3093, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 27, 6, 23, 24, 25, 29, 0]",
    "prediction_idx": "[20, 7, 23, 25, 25, 5, 8, 29, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['quality']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['event']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['U']",
      "replace   PRED[4:5] -> TAR[7:8] ['of'] -> ['observable']",
      "replace   PRED[5:6] -> TAR[8:9] ['^'] -> ['quality']",
      "replace   PRED[6:7] -> TAR[9:10] ['='] -> ['of']"
    ]
  }
}


{
  "_ID": 26,
  "example": {
    "sentence": "anal fin lepidotrichium is a lepidotrichium that is <UNK>@8 of the anal fin skeleton . <EOS>",
    "target": "anal fin lepidotrichium := lepidotrichium ^ E <UNK>@8 of . ( anal fin skeleton ) <EOS>",
    "prediction": "anal fin lepidotrichium := lepidotrichium ^ <UNK>@8 of the fin <EOS>"
  },
  "dump": {
    "sentence_idx": "[701, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 701, 613, 4381, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 5, 27, 28, 29, 31, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[11:12] ['the'] -> ['anal']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['skeleton']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 27,
  "example": {
    "sentence": "leaf are <UNK>@2 of branch . <EOS>",
    "target": "leaf := E <UNK>@2 of . ( branch ) <EOS>",
    "prediction": "leaf := <UNK>@2 of branch ^ <UNK>@2 <UNK>@2 branch . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4585, 3728, 1, 2995, 4358, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 21, 21, 23, 16, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "delete    PRED[4:5] -> TAR[4:4] ['branch'] -> []",
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []",
      "replace   PRED[6:7] -> TAR[5:6] ['<UNK>@2'] -> ['.']",
      "replace   PRED[7:8] -> TAR[6:7] ['<UNK>@2'] -> ['(']",
      "replace   PRED[9:10] -> TAR[8:9] ['.'] -> [')']"
    ]
  }
}


{
  "_ID": 37,
  "example": {
    "sentence": "a american pizza is a pizza that <UNK>@7 topping of pepperoni , mozzarella and tomato . <EOS>",
    "target": "american pizza := pizza ^ E <UNK>@7 topping . ( pepperoni ) ^ E <UNK>@7 topping . ( mozzarella ) ^ E <UNK>@7 topping . ( tomato ) <EOS>",
    "prediction": "american pizza := pizza ^ <UNK>@7 topping of pepperoni ( mozzarella ) ^ E <UNK>@7 . ( mozzarella ) ^ E <UNK>@7 . ( tomato ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2430, 296, 1532, 2430, 1465, 1, 1154, 2995, 5193, 2317, 494, 2258, 2475, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 13, 26, 27, 16, 1, 29, 2, 5, 13, 26, 27, 16, 1, 31, 2, 5, 13, 26, 27, 16, 1, 33, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 5, 26, 27, 28, 29, 1, 31, 2, 5, 13, 26, 16, 1, 31, 2, 5, 13, 26, 16, 1, 33, 2, 0, 0, 0]"
  },
  "accuracy": 0.379,
  "tokens_OK": 11,
  "tokens_tot": 29,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "delete    PRED[7:8] -> TAR[7:7] ['of'] -> []",
      "replace   PRED[8:9] -> TAR[8:9] ['pepperoni'] -> ['.']",
      "replace   PRED[10:11] -> TAR[10:11] ['mozzarella'] -> ['pepperoni']",
      "insert    PRED[14:14] -> TAR[15:16] [] -> ['topping']",
      "insert    PRED[21:21] -> TAR[23:24] [] -> ['topping']"
    ]
  }
}


{
  "_ID": 40,
  "example": {
    "sentence": "caudal fin lepidotrichium is a lepidotrichium that is <UNK>@8 of the caudal fin skeleton . <EOS>",
    "target": "caudal fin lepidotrichium := lepidotrichium ^ E <UNK>@8 of . ( caudal fin skeleton ) <EOS>",
    "prediction": "caudal fin lepidotrichium := lepidotrichium ^ <UNK>@8 of the fin <EOS>"
  },
  "dump": {
    "sentence_idx": "[3008, 613, 2964, 296, 1532, 2964, 1465, 296, 1, 2995, 1496, 3008, 613, 4381, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 24, 5, 13, 27, 28, 16, 1, 30, 31, 32, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 24, 5, 27, 28, 29, 31, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[11:12] ['the'] -> ['caudal']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['skeleton']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 44,
  "example": {
    "sentence": "the perichordal tissue is <UNK>@4 <UNK>@5 cell surrounding the notochord . <EOS>",
    "target": "perichordal tissue := <UNK>@4 <UNK>@5 ( cell ^ E surrounding . ( notochord ) ) <EOS>",
    "prediction": "perichordal tissue := <UNK>@4 <UNK>@5 cell ^ E surrounding <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1321, 3846, 296, 1, 1, 3311, 1799, 1496, 595, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 1, 25, 5, 13, 26, 16, 1, 28, 2, 2, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 25, 5, 13, 26, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 6,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['notochord']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 23,
  "example": {
    "sentence": "a gonochoristic organism is a multi-cellular organism that <UNK>@8 male and female sex . <EOS>",
    "target": "gonochoristic organism := multi-cellular organism ^ E <UNK>@8 sex . ( male sex ) ^ E <UNK>@8 sex . ( female sex ) <EOS>",
    "prediction": "gonochoristic organism := multi-cellular organism ^ E <UNK>@8 . ( male sex ^ female sex ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 567, 4122, 296, 1532, 1946, 4122, 1465, 1, 4420, 2258, 123, 5155, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 31, 16, 1, 28, 31, 2, 5, 13, 27, 31, 16, 1, 30, 31, 2, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 31, 5, 30, 31, 2, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 9,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['sex']",
      "insert    PRED[11:11] -> TAR[13:14] [] -> [')']",
      "insert    PRED[12:12] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[12:12] -> TAR[16:17] [] -> ['<UNK>@8']",
      "insert    PRED[12:12] -> TAR[17:18] [] -> ['sex']",
      "insert    PRED[12:12] -> TAR[18:19] [] -> ['.']",
      "insert    PRED[12:12] -> TAR[19:20] [] -> ['(']"
    ]
  }
}


{
  "_ID": 28,
  "example": {
    "sentence": "craniofacial skeleton is a cranial skeleton <UNK>@6 <UNK>@7 neural crest cell . <EOS>",
    "target": "craniofacial skeleton := cranial skeleton ^ E <UNK>@6 <UNK>@7 . ( neural crest cell ) <EOS>",
    "prediction": "craniofacial skeleton := cranial skeleton <UNK>@6 ^ <UNK>@7 neural crest <EOS>"
  },
  "dump": {
    "sentence_idx": "[3598, 4381, 296, 1532, 4495, 4381, 1, 1, 5343, 5025, 3311, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 5, 13, 25, 26, 16, 1, 27, 28, 29, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 5, 26, 27, 28, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 6,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['<UNK>@7']",
      "replace   PRED[6:7] -> TAR[9:10] ['^'] -> ['.']",
      "replace   PRED[7:8] -> TAR[10:11] ['<UNK>@7'] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['cell']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 12,
  "example": {
    "sentence": "carnivore are exactly <UNK>@3 animal that eat also animal . <EOS>",
    "target": "carnivore := animal ^ E eat . ( animal ) <EOS>",
    "prediction": "carnivore := exactly <EOS>"
  },
  "dump": {
    "sentence_idx": "[3741, 3728, 4082, 1, 5233, 1465, 2867, 5114, 5233, 1710, 0]",
    "target_idx": "[19, 7, 23, 5, 13, 25, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 7, 21, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['animal']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['^']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[1:1] -> TAR[5:6] [] -> ['eat']",
      "insert    PRED[1:1] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[1:1] -> TAR[7:8] [] -> ['(']",
      "insert    PRED[1:1] -> TAR[8:9] [] -> ['animal']",
      "replace   PRED[2:3] -> TAR[9:10] ['exactly'] -> [')']"
    ]
  }
}


{
  "_ID": 29,
  "example": {
    "sentence": "caprina pizza <UNK>@2 a very high-calorie content . <EOS>",
    "target": "caprina pizza := E <UNK>@2 content . ( very high-calorie content ) <EOS>",
    "prediction": "caprina pizza <UNK>@2 := very <EOS>"
  },
  "dump": {
    "sentence_idx": "[4998, 2430, 1, 1532, 2027, 3803, 2436, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 21, 25, 16, 1, 23, 24, 25, 2, 0]",
    "prediction_idx": "[19, 20, 21, 7, 23, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> [':=']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['content']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['.']",
      "replace   PRED[3:4] -> TAR[7:8] [':='] -> ['(']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['high-calorie']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['content']",
      "insert    PRED[4:4] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 46,
  "example": {
    "sentence": "a real italian pizza is a <UNK>@6 of pizza that <UNK>@10 only <UNK>@12 thin and crispy basis . <EOS>",
    "target": "real italian pizza := pizza ^ A <UNK>@12 . ( thin basis ^ crispy basis ) <EOS>",
    "prediction": "real italian pizza := <UNK>@6 of pizza ^ A <UNK>@10 . ( <UNK>@12 thin ) ^ A <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3411, 2728, 2430, 296, 1532, 1, 2995, 2430, 1465, 1, 3546, 1, 4782, 2258, 5121, 2472, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 27, 5, 14, 31, 16, 1, 32, 35, 5, 34, 35, 2, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 5, 14, 29, 16, 1, 31, 32, 2, 5, 14, 0]"
  },
  "accuracy": 0.278,
  "tokens_OK": 5,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['<UNK>@6'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "replace   PRED[9:10] -> TAR[7:8] ['<UNK>@10'] -> ['<UNK>@12']",
      "delete    PRED[12:13] -> TAR[9:9] ['<UNK>@12'] -> []",
      "replace   PRED[14:15] -> TAR[11:12] [')'] -> ['basis']",
      "insert    PRED[15:15] -> TAR[13:14] [] -> ['crispy']",
      "insert    PRED[15:15] -> TAR[14:15] [] -> ['basis']",
      "replace   PRED[16:17] -> TAR[15:16] ['A'] -> [')']"
    ]
  }
}


{
  "_ID": 49,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that secretes dentine matrix , is <UNK>@12 <UNK>@13 the odontogenic papilla , and develop <UNK>@20 a preodontoblast cell . <EOS>",
    "target": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E <UNK>@12 <UNK>@13 . ( odontogenic papilla ) ^ E develop <UNK>@20 . ( preodontoblast cell ) <EOS>",
    "prediction": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E secretes . ( <UNK>@12 <UNK>@13 ) ^ E secretes . ( develop <UNK>@20 ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 2317, 296, 1, 1, 1496, 3698, 5055, 2317, 2258, 3102, 1, 1532, 381, 3311, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 31, 32, 16, 1, 34, 35, 2, 5, 13, 38, 39, 16, 1, 41, 42, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 26, 16, 1, 31, 32, 2, 5, 13, 26, 16, 1, 38, 39, 2, 0, 0, 0]"
  },
  "accuracy": 0.484,
  "tokens_OK": 15,
  "tokens_tot": 31,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['<UNK>@12']",
      "replace   PRED[14:15] -> TAR[15:16] ['secretes'] -> ['<UNK>@13']",
      "replace   PRED[17:18] -> TAR[18:19] ['<UNK>@12'] -> ['odontogenic']",
      "replace   PRED[18:19] -> TAR[19:20] ['<UNK>@13'] -> ['papilla']",
      "insert    PRED[21:21] -> TAR[23:24] [] -> ['develop']",
      "replace   PRED[22:23] -> TAR[24:25] ['secretes'] -> ['<UNK>@20']",
      "replace   PRED[25:26] -> TAR[27:28] ['develop'] -> ['preodontoblast']",
      "replace   PRED[26:27] -> TAR[28:29] ['<UNK>@20'] -> ['cell']"
    ]
  }
}


{
  "_ID": 51,
  "example": {
    "sentence": "a tetraploid is cell or organism <UNK>@6 NUM set of chromosome . <EOS>",
    "target": "tetraploid := ( cell U organism ) ^ = NUM <UNK>@6 chromosome . ( set ) <EOS>",
    "prediction": "tetraploid := cell ^ >= NUM <UNK>@6 set . ( set of chromosome ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3421, 296, 3311, 1048, 4122, 1, 2, 1238, 2995, 3493, 1710, 0]",
    "target_idx": "[20, 7, 1, 22, 6, 24, 2, 5, 8, 26, 25, 29, 16, 1, 27, 2, 0]",
    "prediction_idx": "[20, 7, 22, 5, 12, 26, 25, 27, 16, 1, 27, 28, 29, 2, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['U']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['organism']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> [')']",
      "replace   PRED[4:5] -> TAR[8:9] ['>='] -> ['=']",
      "replace   PRED[7:8] -> TAR[11:12] ['set'] -> ['chromosome']",
      "delete    PRED[11:12] -> TAR[14:14] ['of'] -> []",
      "delete    PRED[12:13] -> TAR[14:14] ['chromosome'] -> []"
    ]
  }
}


{
  "_ID": 5,
  "example": {
    "sentence": "a survival property is a identifiable characteristic that represent the extent of the sensor useful life . <EOS>",
    "target": "survival property := identifiable characteristic ^ E represent . ( extent of sensor useful life ) <EOS>",
    "prediction": "survival := E property . ( extent of the ^ identifiable the the ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1695, 2664, 296, 1532, 71, 2418, 1465, 4929, 1496, 4784, 2995, 1496, 2913, 3150, 877, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 29, 30, 32, 33, 34, 2, 0]",
    "prediction_idx": "[20, 7, 13, 21, 16, 1, 29, 30, 31, 5, 24, 28, 31, 2, 0, 0, 0]"
  },
  "accuracy": 0.118,
  "tokens_OK": 2,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['property']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['identifiable']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['characteristic']",
      "insert    PRED[1:1] -> TAR[5:6] [] -> ['^']",
      "replace   PRED[3:4] -> TAR[7:8] ['property'] -> ['represent']",
      "delete    PRED[8:9] -> TAR[11:11] ['the'] -> []",
      "delete    PRED[9:10] -> TAR[11:11] ['^'] -> []",
      "replace   PRED[10:11] -> TAR[12:13] ['identifiable'] -> ['sensor']",
      "replace   PRED[11:12] -> TAR[13:14] ['the'] -> ['useful']",
      "replace   PRED[12:13] -> TAR[14:15] ['the'] -> ['life']"
    ]
  }
}


{
  "_ID": 39,
  "example": {
    "sentence": "a juvenile is a young fish or animal that <UNK>@9 not <UNK>@11 sexual maturity . <EOS>",
    "target": "juvenile := ( young fish U young animal ) ^ ! E <UNK>@9 <UNK>@11 . ( sexual maturity ) <EOS>",
    "prediction": "juvenile := young fish ^ >= not animal . ( <UNK>@11 sexual maturity ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1998, 296, 1532, 3413, 4435, 1048, 5233, 1465, 1, 2015, 1, 5260, 3631, 1710, 0]",
    "target_idx": "[20, 7, 1, 23, 24, 6, 23, 26, 2, 5, 15, 13, 28, 30, 16, 1, 31, 32, 2, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 12, 29, 26, 16, 1, 30, 31, 32, 2, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 4,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['U']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['young']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['animal']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> [')']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['!']",
      "replace   PRED[5:6] -> TAR[11:12] ['>='] -> ['E']",
      "replace   PRED[6:7] -> TAR[12:13] ['not'] -> ['<UNK>@9']",
      "replace   PRED[7:8] -> TAR[13:14] ['animal'] -> ['<UNK>@11']",
      "delete    PRED[10:11] -> TAR[15:15] ['<UNK>@11'] -> []"
    ]
  }
}


{
  "_ID": 48,
  "example": {
    "sentence": "<UNK>@0 is a process that result in the estimation , or calculation , of the value of a phenomenon . <EOS>",
    "target": "<UNK>@0 := process ^ E result in . ( estimation of value of phenomenon U calculation of value of phenomenon ) <EOS>",
    "prediction": "<UNK>@0 := process ^ E result in . ( estimation ) ^ E value . ( calculation the ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 296, 1532, 1805, 1465, 1120, 3574, 1496, 1908, 2317, 1048, 3749, 2317, 2995, 1496, 1995, 2995, 1532, 5177, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 32, 34, 35, 37, 6, 30, 35, 34, 35, 37, 2, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 5, 13, 34, 16, 1, 30, 33, 2, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 11,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['of']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['value']",
      "replace   PRED[10:11] -> TAR[12:13] [')'] -> ['of']",
      "replace   PRED[11:12] -> TAR[13:14] ['^'] -> ['phenomenon']",
      "replace   PRED[12:13] -> TAR[14:15] ['E'] -> ['U']",
      "replace   PRED[13:14] -> TAR[15:16] ['value'] -> ['calculation']",
      "replace   PRED[14:15] -> TAR[16:17] ['.'] -> ['of']",
      "replace   PRED[15:16] -> TAR[17:18] ['('] -> ['value']",
      "replace   PRED[16:17] -> TAR[18:19] ['calculation'] -> ['of']",
      "replace   PRED[17:18] -> TAR[19:20] ['the'] -> ['phenomenon']"
    ]
  }
}


{
  "_ID": 19,
  "example": {
    "sentence": "herbivore are exactly <UNK>@3 animal that eat only plant or <UNK>@10 of plant . <EOS>",
    "target": "herbivore := animal ^ A eat . ( plant U E <UNK>@10 of . ( plant ) ) <EOS>",
    "prediction": "herbivore := exactly <UNK>@3 ^ A animal . ^ eat ) . ( plant of U <UNK>@10 of plant <EOS>"
  },
  "dump": {
    "sentence_idx": "[4058, 3728, 4082, 1, 5233, 1465, 2867, 3546, 526, 1048, 1, 2995, 526, 1710, 0]",
    "target_idx": "[19, 7, 23, 5, 14, 25, 16, 1, 27, 6, 13, 29, 30, 16, 1, 31, 2, 2, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 14, 23, 16, 5, 25, 2, 16, 1, 27, 30, 6, 29, 30, 31, 0]"
  },
  "accuracy": 0.15,
  "tokens_OK": 3,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['exactly'] -> []",
      "replace   PRED[3:4] -> TAR[2:3] ['<UNK>@3'] -> ['animal']",
      "delete    PRED[6:7] -> TAR[4:4] ['animal'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['^'] -> []",
      "delete    PRED[10:11] -> TAR[5:5] [')'] -> []",
      "replace   PRED[14:15] -> TAR[9:10] ['of'] -> ['U']",
      "replace   PRED[15:16] -> TAR[10:11] ['U'] -> ['E']",
      "insert    PRED[17:17] -> TAR[13:14] [] -> ['.']",
      "insert    PRED[17:17] -> TAR[14:15] [] -> ['(']",
      "insert    PRED[18:18] -> TAR[16:17] [] -> [')']",
      "insert    PRED[18:18] -> TAR[17:18] [] -> [')']"
    ]
  }
}


{
  "_ID": 43,
  "example": {
    "sentence": "tasty plant are <UNK>@3 both <UNK>@5 herbivore and carnivore . <EOS>",
    "target": "tasty plant := plant ^ E <UNK>@3 <UNK>@5 . ( herbivore ) ^ E <UNK>@3 <UNK>@5 . ( carnivore ) <EOS>",
    "prediction": "tasty plant := <UNK>@3 both <UNK>@5 herbivore ^ carnivore <EOS>"
  },
  "dump": {
    "sentence_idx": "[1260, 526, 3728, 1, 3467, 1, 4058, 2258, 3741, 1710, 0]",
    "target_idx": "[19, 20, 7, 20, 5, 13, 22, 24, 16, 1, 25, 2, 5, 13, 22, 24, 16, 1, 27, 2, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 25, 5, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.19,
  "tokens_OK": 4,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['plant']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['<UNK>@5']",
      "replace   PRED[4:5] -> TAR[8:9] ['both'] -> ['.']",
      "replace   PRED[5:6] -> TAR[9:10] ['<UNK>@5'] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['<UNK>@3']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['<UNK>@5']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> [')']"
    ]
  }
}


{
  "_ID": 50,
  "example": {
    "sentence": "axial skeleton is a skeletal subdivision of the central body axis <UNK>@11 the cranium , vertebra , notochord , rib , and sternum . <EOS>",
    "target": "axial skeleton := skeletal subdivision of central body axis ^ E <UNK>@11 . ( cranium ) ^ E <UNK>@11 . ( vertebra ) ^ E <UNK>@11 . ( notochord ) ^ E <UNK>@11 . ( rib ) ^ E <UNK>@11 . ( sternum ) <EOS>",
    "prediction": "axial skeleton := skeletal subdivision of central <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 4381, 296, 1532, 3051, 5142, 2995, 1496, 780, 5126, 2107, 1, 1496, 3862, 2317, 4362, 2317, 595, 2317, 1983, 2317, 2258, 218, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 25, 27, 28, 29, 5, 13, 30, 16, 1, 32, 2, 5, 13, 30, 16, 1, 34, 2, 5, 13, 30, 16, 1, 36, 2, 5, 13, 30, 16, 1, 38, 2, 5, 13, 30, 16, 1, 41, 2, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.178,
  "tokens_OK": 8,
  "tokens_tot": 45,
  "edit_distance": {
    "score": 37,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['body']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['axis']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[14:15] [] -> ['cranium']",
      "insert    PRED[6:6] -> TAR[15:16] [] -> [')']",
      "insert    PRED[6:6] -> TAR[16:17] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[17:18] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[18:19] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[19:20] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[21:22] [] -> ['vertebra']",
      "insert    PRED[6:6] -> TAR[22:23] [] -> [')']",
      "insert    PRED[6:6] -> TAR[23:24] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[24:25] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[25:26] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[26:27] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[27:28] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[28:29] [] -> ['notochord']",
      "insert    PRED[6:6] -> TAR[29:30] [] -> [')']",
      "insert    PRED[6:6] -> TAR[30:31] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[31:32] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[32:33] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[33:34] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[34:35] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[35:36] [] -> ['rib']",
      "insert    PRED[6:6] -> TAR[36:37] [] -> [')']",
      "insert    PRED[6:6] -> TAR[37:38] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[38:39] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[39:40] [] -> ['<UNK>@11']",
      "insert    PRED[6:6] -> TAR[40:41] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[41:42] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[42:43] [] -> ['sternum']",
      "insert    PRED[6:6] -> TAR[43:44] [] -> [')']"
    ]
  }
}


