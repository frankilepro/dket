# ANALYTICS
#
# AVG. PER-FORMULA ACCURACY: 0.09501
# AVG. EDIT DISTANCE: 4.94299
# AVG. PER-TOKEN ACCURACY: 0.44718
#
# ED	#	%	% INC
# 0	40	9.50	9.50
# 1	69	16.39	25.89
# 2	32	7.60	33.49
# 3	28	6.65	40.14
# 4	55	13.06	53.21
# 5	50	11.88	65.08
# 6	46	10.93	76.01
# 7	13	3.09	79.10
# 8	26	6.18	85.27
# 9	19	4.51	89.79
# 10	7	1.66	91.45
# 11	7	1.66	93.11
# 12	5	1.19	94.30
# 13	3	0.71	95.01
# 14	5	1.19	96.20
# 15	2	0.48	96.67
# 16	1	0.24	96.91
# 17	1	0.24	97.15
# 18	5	1.19	98.34
# 20	1	0.24	98.57
# 22	1	0.24	98.81
# 25	1	0.24	99.05
# 26	1	0.24	99.29
# 27	1	0.24	99.52
# 29	1	0.24	99.76
# 30	1	0.24	100.00



{
  "_ID": 5,
  "example": {
    "sentence": "carnivor are also animal that eat only animal . <EOS>",
    "target": "carnivor := animal ^ A eat . ( animal ) . <EOS>",
    "prediction": "carnivor := animal ^ A eat . ( animal ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[634, 3728, 5114, 5233, 1465, 2867, 3546, 5233, 1710, 0]",
    "target_idx": "[19, 7, 26, 5, 14, 24, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 26, 5, 14, 24, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 17,
  "example": {
    "sentence": "all cat are also mammal that chase mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) . <EOS>",
    "prediction": "cat := mammal ^ E chase . ( mouse ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 362, 3728, 5114, 1156, 1465, 2780, 4668, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 21,
  "example": {
    "sentence": "an action is the exercise of a right . <EOS>",
    "target": "action := exercise of right . <EOS>",
    "prediction": "action := exercise of right . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 1816, 296, 1496, 2881, 2995, 1532, 383, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 26, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 26, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 7,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 35,
  "example": {
    "sentence": "cat are also mammal that chase the mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) . <EOS>",
    "prediction": "cat := mammal ^ E chase . ( mouse ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 5114, 1156, 1465, 2780, 1496, 4668, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 40,
  "example": {
    "sentence": "cow are also herbivor that produce milk . <EOS>",
    "target": "cow := herbivor ^ E produce . ( milk ) . <EOS>",
    "prediction": "cow := herbivor ^ E produce . ( milk ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 5114, 213, 1465, 4253, 3135, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 49,
  "example": {
    "sentence": "all cat are mammal that chase mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) . <EOS>",
    "prediction": "cat := mammal ^ E chase . ( mouse ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 362, 3728, 1156, 1465, 2780, 4668, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 66,
  "example": {
    "sentence": "vehicle are mean of transportation . <EOS>",
    "target": "vehicle := mean of transportation . <EOS>",
    "prediction": "vehicle := mean of transportation . <EOS>"
  },
  "dump": {
    "sentence_idx": "[116, 3728, 3357, 2995, 1839, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 7,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 67,
  "example": {
    "sentence": "a team is a group of employee . <EOS>",
    "target": "team := a group of . <EOS>",
    "prediction": "team := a group of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 296, 1532, 5034, 2995, 3976, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 7,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 76,
  "example": {
    "sentence": "desk are piece of funriture . <EOS>",
    "target": "desk := piece of funriture . <EOS>",
    "prediction": "desk := piece of funriture . <EOS>"
  },
  "dump": {
    "sentence_idx": "[27, 3728, 25, 2995, 579, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 7,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 81,
  "example": {
    "sentence": "shower are light rain or intermittent rain . <EOS>",
    "target": "shower := light rain U intermittent rain . <EOS>",
    "prediction": "shower := light rain U intermittent rain . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3364, 3728, 1459, 1317, 1048, 2135, 1317, 1710, 0]",
    "target_idx": "[19, 7, 21, 25, 6, 24, 25, 16, 0]",
    "prediction_idx": "[19, 7, 21, 25, 6, 24, 25, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 9,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 90,
  "example": {
    "sentence": "all insect are also small animal . <EOS>",
    "target": "insect := small animal . <EOS>",
    "prediction": "insect := small animal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2975, 3728, 5114, 2143, 5233, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 6,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 95,
  "example": {
    "sentence": "every saw is a tool . <EOS>",
    "target": "saw := tool . <EOS>",
    "prediction": "saw := tool . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 307, 296, 1532, 3198, 1710, 0]",
    "target_idx": "[20, 7, 23, 16, 0]",
    "prediction_idx": "[20, 7, 23, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 106,
  "example": {
    "sentence": "all drill are power tool . <EOS>",
    "target": "drill := power tool . <EOS>",
    "prediction": "drill := power tool . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1205, 3728, 4964, 3198, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 6,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 112,
  "example": {
    "sentence": "every mammal is also a animal . <EOS>",
    "target": "mammal := animal . <EOS>",
    "prediction": "mammal := animal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1156, 296, 5114, 1532, 5233, 1710, 0]",
    "target_idx": "[20, 7, 24, 16, 0]",
    "prediction_idx": "[20, 7, 24, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 116,
  "example": {
    "sentence": "every bycicle is a vehicle . <EOS>",
    "target": "bycicle := vehicle . <EOS>",
    "prediction": "bycicle := vehicle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3326, 296, 1532, 116, 1710, 0]",
    "target_idx": "[20, 7, 23, 16, 0]",
    "prediction_idx": "[20, 7, 23, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 125,
  "example": {
    "sentence": "motorcycle are vehicle . <EOS>",
    "target": "motorcycle := vehicle . <EOS>",
    "prediction": "motorcycle := vehicle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[120, 3728, 116, 1710, 0]",
    "target_idx": "[19, 7, 21, 16, 0]",
    "prediction_idx": "[19, 7, 21, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 126,
  "example": {
    "sentence": "car are vehicle . <EOS>",
    "target": "car := vehicle . <EOS>",
    "prediction": "car := vehicle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1877, 3728, 116, 1710, 0]",
    "target_idx": "[19, 7, 21, 16, 0]",
    "prediction_idx": "[19, 7, 21, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 5,
  "tokens_tot": 5,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 149,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that secretes dentine matrix . <EOS>",
    "target": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) . <EOS>",
    "prediction": "odontoblast := skeletogenic cell ^ E secretes . ( dentine matrix ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 151,
  "example": {
    "sentence": "trimestral activity are activity that take exactly NUM month . <EOS>",
    "target": "trimestral activity := activity ^ = exactly that . ( NUM ) . <EOS>",
    "prediction": "trimestral activity := activity ^ = exactly that . ( NUM ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2857, 2231, 3728, 2231, 1465, 2747, 4082, 2, 4569, 1710, 0]",
    "target_idx": "[19, 22, 7, 22, 5, 8, 25, 23, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 22, 7, 22, 5, 8, 25, 23, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 154,
  "example": {
    "sentence": "a rake is a tool that collect dead leaf . <EOS>",
    "target": "rake := a ^ E that . ( collect dead ) . <EOS>",
    "prediction": "rake := a ^ E that . ( collect dead ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4741, 296, 1532, 3198, 1465, 415, 815, 4585, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 161,
  "example": {
    "sentence": "the odontocyte is a skeletogenic cell that secretes dentine matrix . <EOS>",
    "target": "odontocyte := skeletogenic cell ^ E secretes . ( dentine matrix ) . <EOS>",
    "prediction": "odontocyte := skeletogenic cell ^ E secretes . ( dentine matrix ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2626, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 14,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 200,
  "example": {
    "sentence": "frutti <UNK>@1 mare typically lack cheese . <EOS>",
    "target": "frutti <EOS>",
    "prediction": "frutti <EOS>"
  },
  "dump": {
    "sentence_idx": "[1836, 1, 4490, 5368, 4971, 1620, 1710, 0]",
    "target_idx": "[19, 0]",
    "prediction_idx": "[19, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 2,
  "tokens_tot": 2,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 203,
  "example": {
    "sentence": "a manager is an employee that lead at least NUM team . <EOS>",
    "target": "manager := employee ^ >= NUM lead . ( team ) . <EOS>",
    "prediction": "manager := employee ^ >= NUM lead . ( team ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5346, 296, 5374, 3976, 1465, 554, 2305, 4025, 2, 2554, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 12, 28, 25, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 12, 28, 25, 16, 1, 29, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 211,
  "example": {
    "sentence": "rake are tool that collect dead leaf . <EOS>",
    "target": "rake := tool ^ E collect . ( dead leaf ) . <EOS>",
    "prediction": "rake := tool ^ E collect . ( dead leaf ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4741, 3728, 3198, 1465, 415, 815, 4585, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 16, 1, 24, 25, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 23, 16, 1, 24, 25, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 219,
  "example": {
    "sentence": "every team develop at least NUM leading project . <EOS>",
    "target": "team := >= NUM develop . ( leading project ) . <EOS>",
    "prediction": "team := >= NUM develop . ( leading project ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2554, 3102, 2305, 4025, 2, 4182, 3722, 1710, 0]",
    "target_idx": "[20, 7, 12, 24, 21, 16, 1, 25, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 12, 24, 21, 16, 1, 25, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 222,
  "example": {
    "sentence": "a engine is a complex system that produce energy . <EOS>",
    "target": "engine := a complex ^ E that . ( produce ) . <EOS>",
    "prediction": "engine := a complex ^ E that . ( produce ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 1532, 2924, 1484, 1465, 4253, 3667, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 223,
  "example": {
    "sentence": "lion are also carnivor that hunt gazelle . <EOS>",
    "target": "lion := carnivor ^ E hunt . ( gazelle ) . <EOS>",
    "prediction": "lion := carnivor ^ E hunt . ( gazelle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5114, 634, 1465, 3575, 2448, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 225,
  "example": {
    "sentence": "a bee is also a insect that produce honey . <EOS>",
    "target": "bee := a ^ E that . ( produce ) . <EOS>",
    "prediction": "bee := a ^ E that . ( produce ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3210, 296, 5114, 1532, 2975, 1465, 4253, 1621, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 227,
  "example": {
    "sentence": "vehicle are non-living means of transportation . <EOS>",
    "target": "vehicle := non-living means of transportation . <EOS>",
    "prediction": "vehicle := non-living means of transportation . <EOS>"
  },
  "dump": {
    "sentence_idx": "[116, 3728, 4032, 1217, 2995, 1839, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 8,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 228,
  "example": {
    "sentence": "a feature is a abstraction of real world phenomenon . <EOS>",
    "target": "feature := a abstraction of real world . <EOS>",
    "prediction": "feature := a abstraction of real world . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 110, 296, 1532, 26, 2995, 3411, 2696, 5177, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 25, 26, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 25, 26, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 9,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 233,
  "example": {
    "sentence": "scissor are manual tool that cut paper or cardboard . <EOS>",
    "target": "scissor := manual tool ^ E cut . ( paper U cardboard ) . <EOS>",
    "prediction": "scissor := manual tool ^ E cut . ( paper U cardboard ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4625, 3728, 3121, 3198, 1465, 3410, 2469, 1048, 2086, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 24, 16, 1, 25, 6, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 13, 24, 16, 1, 25, 6, 27, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 15,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 242,
  "example": {
    "sentence": "a device is a physical piece of technology . <EOS>",
    "target": "device := a physical piece of . <EOS>",
    "prediction": "device := a physical piece of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2016, 296, 1532, 1218, 25, 2995, 1561, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 25, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 25, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 8,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 243,
  "example": {
    "sentence": "engine are also complex system that produce energy . <EOS>",
    "target": "engine := complex system ^ E produce . ( energy ) . <EOS>",
    "prediction": "engine := complex system ^ E produce . ( energy ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 2924, 1484, 1465, 4253, 3667, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 249,
  "example": {
    "sentence": "lion are animal that eat only herbivore . <EOS>",
    "target": "lion := animal ^ A eat . ( herbivore ) . <EOS>",
    "prediction": "lion := animal ^ A eat . ( herbivore ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5233, 1465, 2867, 3546, 4058, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 5, 14, 23, 16, 1, 25, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 250,
  "example": {
    "sentence": "all mammal are animal that brestfeed puppy . <EOS>",
    "target": "mammal := animal ^ E brestfeed . ( puppy ) . <EOS>",
    "prediction": "mammal := animal ^ E brestfeed . ( puppy ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1156, 3728, 5233, 1465, 2304, 5188, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 12,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 252,
  "example": {
    "sentence": "a team implement trimestral activity . <EOS>",
    "target": "team := E implement . ( trimestral activity ) . <EOS>",
    "prediction": "team := E implement . ( trimestral activity ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 3449, 2857, 2231, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 16, 1, 22, 23, 2, 16, 0]",
    "prediction_idx": "[20, 7, 13, 21, 16, 1, 22, 23, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 11,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 260,
  "example": {
    "sentence": "<UNK>@0 sing is a process that result in the estimation , or calculation , of the value of a phenomenon . <EOS>",
    "target": "<EOS>",
    "prediction": "<EOS>"
  },
  "dump": {
    "sentence_idx": "[1, 4076, 296, 1532, 1805, 1465, 1120, 3574, 1496, 1908, 2317, 1048, 3749, 2317, 2995, 1496, 1995, 2995, 1532, 5177, 1710, 0]",
    "target_idx": "[0]",
    "prediction_idx": "[0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 1,
  "tokens_tot": 1,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 265,
  "example": {
    "sentence": "organism subdivision is a anatomical structure that is a primary subdivision of whole organism . <EOS>",
    "target": "subdivision a := anatomical structure ^ is a a primary subdivision . <EOS>",
    "prediction": "subdivision a := anatomical structure ^ is a a primary subdivision . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4122, 5142, 296, 1532, 2927, 1743, 1465, 296, 1532, 3340, 5142, 2995, 5063, 4122, 1710, 0]",
    "target_idx": "[29, 27, 7, 23, 24, 5, 26, 27, 27, 28, 29, 16, 0]",
    "prediction_idx": "[29, 27, 7, 23, 24, 5, 26, 27, 27, 28, 29, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 13,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 273,
  "example": {
    "sentence": "a survival property is a identifiable characteristic that represent the extent of the sensor useful life . <EOS>",
    "target": "survival property := a identifiable ^ E that . ( the extent of the sensor ) . <EOS>",
    "prediction": "survival property := a identifiable ^ E that . ( the extent of the sensor ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1695, 2664, 296, 1532, 71, 2418, 1465, 4929, 1496, 4784, 2995, 1496, 2913, 3150, 877, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 16, 1, 28, 29, 30, 31, 32, 2, 16, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 16, 1, 28, 29, 30, 31, 32, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 18,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 284,
  "example": {
    "sentence": "a direct ossification is a ossification that do not require the replacement of pre-existing tissue . <EOS>",
    "target": "direct a := a ^ ! E do . ( require the replacement of ) . <EOS>",
    "prediction": "direct a := a ^ ! E do . ( require the replacement of ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5240, 664, 296, 1532, 664, 1465, 4823, 2015, 4742, 1496, 4747, 2995, 3139, 3846, 1710, 0]",
    "target_idx": "[20, 23, 7, 23, 5, 15, 13, 26, 16, 1, 28, 29, 30, 31, 2, 16, 0]",
    "prediction_idx": "[20, 23, 7, 23, 5, 15, 13, 26, 16, 1, 28, 29, 30, 31, 2, 16, 0]"
  },
  "accuracy": 1.0,
  "tokens_OK": 17,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 0,
    "diff_ops": []
  }
}


{
  "_ID": 1,
  "example": {
    "sentence": "the lanthanum atom is a atom . <EOS>",
    "target": "lanthanum atom := atom . <EOS>",
    "prediction": "lanthanum atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 46, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 6,
  "example": {
    "sentence": "a device is a system in a box . <EOS>",
    "target": "device := a system in . <EOS>",
    "prediction": "device := a system ^ in . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2016, 296, 1532, 1484, 3574, 1532, 573, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 16, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 24, 16, 0]"
  },
  "accuracy": 0.625,
  "tokens_OK": 5,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []"
    ]
  }
}


{
  "_ID": 8,
  "example": {
    "sentence": "an adaptor is a user that produce an adaptation . <EOS>",
    "target": "adaptor := user ^ E produce . ( an ) . <EOS>",
    "prediction": "an adaptor := user ^ E produce . ( an ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 3715, 296, 1532, 5338, 1465, 4253, 5374, 2447, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0, 0]",
    "prediction_idx": "[26, 20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0]"
  },
  "accuracy": 0.077,
  "tokens_OK": 1,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['an'] -> []"
    ]
  }
}


{
  "_ID": 9,
  "example": {
    "sentence": "bee are also insect that live in the hive . <EOS>",
    "target": "bee := insect ^ E live in . ( hive ) . <EOS>",
    "prediction": "bee := insect ^ E live . ( hive ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3210, 3728, 5114, 2975, 1465, 593, 3574, 1496, 2556, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 27, 2, 16, 0, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 12,
  "example": {
    "sentence": "lepton are subatomic particle . <EOS>",
    "target": "lepton := subatomic particle . <EOS>",
    "prediction": "lepton := subatomic particle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2955, 3728, 660, 3081, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 16, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 2, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] [')'] -> []"
    ]
  }
}


{
  "_ID": 14,
  "example": {
    "sentence": "every team develop at most NUM project . <EOS>",
    "target": "team := <= NUM develop . ( project ) . <EOS>",
    "prediction": "team := <= NUM develop . ( project project ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2554, 3102, 2305, 2880, 2, 3722, 1710, 0]",
    "target_idx": "[20, 7, 10, 24, 21, 16, 1, 25, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 10, 24, 21, 16, 1, 25, 25, 2, 16, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 9,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['project'] -> []"
    ]
  }
}


{
  "_ID": 16,
  "example": {
    "sentence": "boson are subatomic particle . <EOS>",
    "target": "boson := subatomic particle . <EOS>",
    "prediction": "boson := subatomic particle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[90, 3728, 660, 3081, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 16, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 2, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] [')'] -> []"
    ]
  }
}


{
  "_ID": 18,
  "example": {
    "sentence": "giraffe are also herbivor . <EOS>",
    "target": "giraffe := herbivor . <EOS>",
    "prediction": "giraffe := herbivor herbivor . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 5114, 213, 1710, 0]",
    "target_idx": "[19, 7, 22, 16, 0, 0]",
    "prediction_idx": "[19, 7, 22, 22, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['herbivor'] -> []"
    ]
  }
}


{
  "_ID": 20,
  "example": {
    "sentence": "all hand tool are also tool . <EOS>",
    "target": "hand tool := tool . <EOS>",
    "prediction": "hand tool := tool tool . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 324, 3198, 3728, 5114, 3198, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['tool'] -> []"
    ]
  }
}


{
  "_ID": 22,
  "example": {
    "sentence": "every dolphin is also a acquatic mammal . <EOS>",
    "target": "dolphin := acquatic mammal . <EOS>",
    "prediction": "dolphin := acquatic mammal ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4268, 296, 5114, 1532, 5124, 1156, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 16, 0, 0]",
    "prediction_idx": "[20, 7, 24, 25, 2, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] [')'] -> []"
    ]
  }
}


{
  "_ID": 27,
  "example": {
    "sentence": "rhinoceros are also pachyderm that live in africa . <EOS>",
    "target": "rhinoceros := pachyderm ^ E live in . ( africa ) . <EOS>",
    "prediction": "rhinoceros := pachyderm ^ E live . ( africa ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3985, 3728, 5114, 3371, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 26, 2, 16, 0, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 38,
  "example": {
    "sentence": "bee are also insect that live in hive . <EOS>",
    "target": "bee := insect ^ E live in . ( hive ) . <EOS>",
    "prediction": "bee := insect ^ E live . ( hive ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3210, 3728, 5114, 2975, 1465, 593, 3574, 2556, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 26, 2, 16, 0, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 42,
  "example": {
    "sentence": "all rhinoceros are pachyderm that live in africa . <EOS>",
    "target": "rhinoceros := pachyderm ^ E live in . ( africa ) . <EOS>",
    "prediction": "rhinoceros := pachyderm ^ E live . ( africa ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3985, 3728, 3371, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 26, 2, 16, 0, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 70,
  "example": {
    "sentence": "the thallium atom is also a atom . <EOS>",
    "target": "thallium atom := atom . <EOS>",
    "prediction": "thallium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1124, 2223, 296, 5114, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 25, 7, 25, 16, 0, 0]",
    "prediction_idx": "[20, 25, 7, 25, 25, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 71,
  "example": {
    "sentence": "all rake are also tool . <EOS>",
    "target": "rake := tool . <EOS>",
    "prediction": "rake := tool tool . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4741, 3728, 5114, 3198, 1710, 0]",
    "target_idx": "[20, 7, 23, 16, 0, 0]",
    "prediction_idx": "[20, 7, 23, 23, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['tool'] -> []"
    ]
  }
}


{
  "_ID": 72,
  "example": {
    "sentence": "all power tool are tool . <EOS>",
    "target": "power tool := tool . <EOS>",
    "prediction": "power tool := tool tool . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4964, 3198, 3728, 3198, 1710, 0]",
    "target_idx": "[20, 23, 7, 23, 16, 0, 0]",
    "prediction_idx": "[20, 23, 7, 23, 23, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['tool'] -> []"
    ]
  }
}


{
  "_ID": 73,
  "example": {
    "sentence": "all gardern fork are tool . <EOS>",
    "target": "gardern fork := tool . <EOS>",
    "prediction": "gardern fork := tool tool . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4047, 5086, 3728, 3198, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 16, 0, 0]",
    "prediction_idx": "[20, 21, 7, 23, 23, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['tool'] -> []"
    ]
  }
}


{
  "_ID": 78,
  "example": {
    "sentence": "positron are beta particle . <EOS>",
    "target": "positron := beta particle . <EOS>",
    "prediction": "positron := beta particle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3626, 3728, 3161, 3081, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 16, 0, 0]",
    "prediction_idx": "[19, 7, 21, 22, 2, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] [')'] -> []"
    ]
  }
}


{
  "_ID": 84,
  "example": {
    "sentence": "the berkelium atom are also atom . <EOS>",
    "target": "berkelium atom := atom . <EOS>",
    "prediction": "berkelium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 525, 2223, 3728, 5114, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 85,
  "example": {
    "sentence": "the barium atom is a atom . <EOS>",
    "target": "barium atom := atom . <EOS>",
    "prediction": "barium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4754, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 86,
  "example": {
    "sentence": "the ununpentium atom is a atom . <EOS>",
    "target": "ununpentium atom := atom . <EOS>",
    "prediction": "ununpentium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3788, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 87,
  "example": {
    "sentence": "all mouse are also small animal . <EOS>",
    "target": "mouse := small animal . <EOS>",
    "prediction": "mouse := small animal ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4668, 3728, 5114, 2143, 5233, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 16, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] [')'] -> []"
    ]
  }
}


{
  "_ID": 88,
  "example": {
    "sentence": "the manganese atom is a atom . <EOS>",
    "target": "manganese atom := atom . <EOS>",
    "prediction": "manganese atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 5322, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 89,
  "example": {
    "sentence": "the gadolinium atom is a atom . <EOS>",
    "target": "gadolinium atom := atom . <EOS>",
    "prediction": "gadolinium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 5222, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 91,
  "example": {
    "sentence": "all pachyderm are also large animal . <EOS>",
    "target": "pachyderm := large animal . <EOS>",
    "prediction": "pachyderm := large animal ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3371, 3728, 5114, 1650, 5233, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 16, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] [')'] -> []"
    ]
  }
}


{
  "_ID": 92,
  "example": {
    "sentence": "the neodymium atom is a atom . <EOS>",
    "target": "neodymium atom := atom . <EOS>",
    "prediction": "neodymium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 527, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 93,
  "example": {
    "sentence": "the unununium atom is a atom . <EOS>",
    "target": "unununium atom := atom . <EOS>",
    "prediction": "unununium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 347, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 94,
  "example": {
    "sentence": "the rhenium atom is a atom . <EOS>",
    "target": "rhenium atom := atom . <EOS>",
    "prediction": "rhenium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2479, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 97,
  "example": {
    "sentence": "the ununhexium atom is a atom . <EOS>",
    "target": "ununhexium atom := atom . <EOS>",
    "prediction": "ununhexium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4265, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 105,
  "example": {
    "sentence": "the selenium atom is a atom . <EOS>",
    "target": "selenium atom := atom . <EOS>",
    "prediction": "selenium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2337, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 107,
  "example": {
    "sentence": "the magnesium atom is a atom . <EOS>",
    "target": "magnesium atom := atom . <EOS>",
    "prediction": "magnesium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2891, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 109,
  "example": {
    "sentence": "the zirconium atom is a atom . <EOS>",
    "target": "zirconium atom := atom . <EOS>",
    "prediction": "zirconium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3019, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 110,
  "example": {
    "sentence": "gazelle are also herbivor . <EOS>",
    "target": "gazelle := herbivor . <EOS>",
    "prediction": "gazelle := herbivor herbivor . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2448, 3728, 5114, 213, 1710, 0]",
    "target_idx": "[19, 7, 22, 16, 0, 0]",
    "prediction_idx": "[19, 7, 22, 22, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['herbivor'] -> []"
    ]
  }
}


{
  "_ID": 111,
  "example": {
    "sentence": "the strontium atom is a atom . <EOS>",
    "target": "strontium atom := atom . <EOS>",
    "prediction": "strontium atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3589, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 113,
  "example": {
    "sentence": "cow are also herbivor . <EOS>",
    "target": "cow := herbivor . <EOS>",
    "prediction": "cow := herbivor herbivor . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 5114, 213, 1710, 0]",
    "target_idx": "[19, 7, 22, 16, 0, 0]",
    "prediction_idx": "[19, 7, 22, 22, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['herbivor'] -> []"
    ]
  }
}


{
  "_ID": 114,
  "example": {
    "sentence": "nickel atom is a atom . <EOS>",
    "target": "nickel atom := atom . <EOS>",
    "prediction": "nickel atom := atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[703, 2223, 296, 1532, 2223, 1710, 0]",
    "target_idx": "[19, 23, 7, 23, 16, 0, 0]",
    "prediction_idx": "[19, 23, 7, 23, 23, 16, 0]"
  },
  "accuracy": 0.714,
  "tokens_OK": 5,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 115,
  "example": {
    "sentence": "all lion are mammal . <EOS>",
    "target": "lion := mammal . <EOS>",
    "prediction": "lion := mammal mammal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 232, 3728, 1156, 1710, 0]",
    "target_idx": "[20, 7, 22, 16, 0, 0]",
    "prediction_idx": "[20, 7, 22, 22, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['mammal'] -> []"
    ]
  }
}


{
  "_ID": 117,
  "example": {
    "sentence": "clamp are also tool . <EOS>",
    "target": "clamp := tool . <EOS>",
    "prediction": "clamp := tool tool . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1785, 3728, 5114, 3198, 1710, 0]",
    "target_idx": "[19, 7, 22, 16, 0, 0]",
    "prediction_idx": "[19, 7, 22, 22, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['tool'] -> []"
    ]
  }
}


{
  "_ID": 118,
  "example": {
    "sentence": "every employee use a desk . <EOS>",
    "target": "employee := E use . ( desk ) . <EOS>",
    "prediction": "employee use := E use . ( desk ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3976, 4174, 1532, 27, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 16, 1, 23, 2, 16, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 21, 16, 1, 23, 2, 16, 0]"
  },
  "accuracy": 0.182,
  "tokens_OK": 2,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['use'] -> []"
    ]
  }
}


{
  "_ID": 124,
  "example": {
    "sentence": "tiger are carnivor . <EOS>",
    "target": "tiger := carnivor . <EOS>",
    "prediction": "tiger := carnivor carnivor . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4809, 3728, 634, 1710, 0]",
    "target_idx": "[19, 7, 21, 16, 0, 0]",
    "prediction_idx": "[19, 7, 21, 21, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['carnivor'] -> []"
    ]
  }
}


{
  "_ID": 128,
  "example": {
    "sentence": "lepton are fermion . <EOS>",
    "target": "lepton := fermion . <EOS>",
    "prediction": "lepton := fermion fermion . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2955, 3728, 2039, 1710, 0]",
    "target_idx": "[19, 7, 21, 16, 0, 0]",
    "prediction_idx": "[19, 7, 21, 21, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 4,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['fermion'] -> []"
    ]
  }
}


{
  "_ID": 130,
  "example": {
    "sentence": "every lion is also a carnivor that hunt the gazelle . <EOS>",
    "target": "lion := carnivor ^ E hunt . ( gazelle ) . <EOS>",
    "prediction": "lion := carnivor carnivor ^ E hunt . ( gazelle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 232, 296, 5114, 1532, 634, 1465, 3575, 1496, 2448, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 28, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 24, 24, 5, 13, 26, 16, 1, 28, 2, 16, 0]"
  },
  "accuracy": 0.308,
  "tokens_OK": 4,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['carnivor'] -> []"
    ]
  }
}


{
  "_ID": 152,
  "example": {
    "sentence": "piece of furniture are artifact that furnish a room . <EOS>",
    "target": "piece of furniture := artifact ^ E furnish . ( room ) . <EOS>",
    "prediction": "piece of furniture := artifact ^ E furnish . ( room room ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[25, 2995, 4360, 3728, 30, 1465, 2509, 1532, 1027, 1710, 0]",
    "target_idx": "[19, 20, 21, 7, 23, 5, 13, 25, 16, 1, 27, 2, 16, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 23, 5, 13, 25, 16, 1, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 12,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[10:11] -> TAR[9:9] ['room'] -> []"
    ]
  }
}


{
  "_ID": 169,
  "example": {
    "sentence": "all lion are also carnivor that hunt the gazelle . <EOS>",
    "target": "lion := carnivor ^ E hunt . ( gazelle ) . <EOS>",
    "prediction": "lion := carnivor carnivor ^ E hunt . ( gazelle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 232, 3728, 5114, 634, 1465, 3575, 1496, 2448, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 27, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 23, 23, 5, 13, 25, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.308,
  "tokens_OK": 4,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['carnivor'] -> []"
    ]
  }
}


{
  "_ID": 172,
  "example": {
    "sentence": "every herbivor is also a animal that eat only plant . <EOS>",
    "target": "herbivor := animal ^ A eat . ( plant ) . <EOS>",
    "prediction": "herbivor := animal ^ A eat . ( plant plant ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 213, 296, 5114, 1532, 5233, 1465, 2867, 3546, 526, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 14, 26, 16, 1, 28, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 24, 5, 14, 26, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['plant'] -> []"
    ]
  }
}


{
  "_ID": 173,
  "example": {
    "sentence": "a top manager is a manager that lead more than NUM team . <EOS>",
    "target": "top a := a ^ >= more manager . ( than ) . <EOS>",
    "prediction": "top a := a ^ > more manager . ( than ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3281, 5346, 296, 1532, 5346, 1465, 554, 4582, 668, 2, 2554, 1710, 0]",
    "target_idx": "[20, 23, 7, 23, 5, 12, 27, 24, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 23, 7, 23, 5, 11, 27, 24, 16, 1, 28, 2, 16, 0]"
  },
  "accuracy": 0.929,
  "tokens_OK": 13,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['>'] -> ['>=']"
    ]
  }
}


{
  "_ID": 179,
  "example": {
    "sentence": "spicy topping is any topping that have a hot spiciness . <EOS>",
    "target": "spicy topping := topping ^ E that hot . ( a hot ) . <EOS>",
    "prediction": "spicy topping := topping ^ E that . ( a hot ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[611, 1154, 296, 2133, 1154, 1465, 5360, 1532, 2872, 390, 1710, 0]",
    "target_idx": "[19, 23, 7, 23, 5, 13, 24, 27, 16, 1, 26, 27, 2, 16, 0]",
    "prediction_idx": "[19, 23, 7, 23, 5, 13, 24, 16, 1, 26, 27, 2, 16, 0, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['hot']"
    ]
  }
}


{
  "_ID": 195,
  "example": {
    "sentence": "a observation value is the value of the result of a observation . <EOS>",
    "target": "the value := value the of the the . <EOS>",
    "prediction": "the value := value the of the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3794, 1995, 296, 1496, 1995, 2995, 1496, 1120, 2995, 1532, 3794, 1710, 0]",
    "target_idx": "[26, 24, 7, 24, 26, 25, 26, 26, 16, 0]",
    "prediction_idx": "[26, 24, 7, 24, 26, 25, 26, 16, 0, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 8,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['the']"
    ]
  }
}


{
  "_ID": 197,
  "example": {
    "sentence": "every mammal is also a animal that brestfeed puppy . <EOS>",
    "target": "mammal := animal ^ E brestfeed . ( puppy ) . <EOS>",
    "prediction": "mammal := animal ^ E brestfeed . ( puppy puppy ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1156, 296, 5114, 1532, 5233, 1465, 2304, 5188, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 27, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 24, 5, 13, 26, 16, 1, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['puppy'] -> []"
    ]
  }
}


{
  "_ID": 198,
  "example": {
    "sentence": "hail are fall ice pellet or frozen rain . <EOS>",
    "target": "hail := fall ice pellet or frozen rain . <EOS>",
    "prediction": "hail := fall ice pellet U frozen rain . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4414, 3728, 1571, 5244, 700, 1048, 1614, 1317, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 25, 26, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 6, 25, 26, 16, 0]"
  },
  "accuracy": 0.9,
  "tokens_OK": 9,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['U'] -> ['or']"
    ]
  }
}


{
  "_ID": 199,
  "example": {
    "sentence": "heavy frost is a thick coating of frost . <EOS>",
    "target": "heavy frost := thick coating of frost . <EOS>",
    "prediction": "heavy frost := thick coating coating of frost . <EOS>"
  },
  "dump": {
    "sentence_idx": "[463, 4532, 296, 1532, 3744, 4333, 2995, 4532, 1710, 0]",
    "target_idx": "[19, 26, 7, 23, 24, 25, 26, 16, 0, 0]",
    "prediction_idx": "[19, 26, 7, 23, 24, 24, 25, 26, 16, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 6,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['coating'] -> []"
    ]
  }
}


{
  "_ID": 204,
  "example": {
    "sentence": "carnivore are exactly those animal that eat also animal . <EOS>",
    "target": "carnivore := animal ^ E eat . ( animal ) . <EOS>",
    "prediction": "carnivore := those animal ^ E eat . ( animal ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3741, 3728, 4082, 5380, 5233, 1465, 2867, 5114, 5233, 1710, 0]",
    "target_idx": "[19, 7, 27, 5, 13, 25, 16, 1, 27, 2, 16, 0, 0]",
    "prediction_idx": "[19, 7, 22, 27, 5, 13, 25, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['those'] -> []"
    ]
  }
}


{
  "_ID": 205,
  "example": {
    "sentence": "the embryonic cell is a cell of the embryo . <EOS>",
    "target": "embryonic cell := cell cell of of . <EOS>",
    "prediction": "embryonic cell := cell cell of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4365, 3311, 296, 1532, 3311, 2995, 1496, 2020, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 24, 25, 25, 16, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 25, 16, 0, 0]"
  },
  "accuracy": 0.778,
  "tokens_OK": 7,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['of']"
    ]
  }
}


{
  "_ID": 206,
  "example": {
    "sentence": "a herbivor is a animal that eat only plant . <EOS>",
    "target": "herbivor := a ^ A that . ( only ) . <EOS>",
    "prediction": "herbivor := a ^ A that . ( only only ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 213, 296, 1532, 5233, 1465, 2867, 3546, 526, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 14, 24, 16, 1, 26, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 22, 5, 14, 24, 16, 1, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['only'] -> []"
    ]
  }
}


{
  "_ID": 208,
  "example": {
    "sentence": "a screwdriver is also a tool that handle screw . <EOS>",
    "target": "screwdriver := a ^ E that . ( handle ) . <EOS>",
    "prediction": "screwdriver := a ^ E that . ( that handle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4051, 296, 5114, 1532, 3198, 1465, 179, 2809, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 25, 26, 2, 16, 0]"
  },
  "accuracy": 0.692,
  "tokens_OK": 9,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['that'] -> []"
    ]
  }
}


{
  "_ID": 209,
  "example": {
    "sentence": "a elephant is a pachyderm that live in africa or asia . <EOS>",
    "target": "elephant := a ^ E that live . ( in U or ) . <EOS>",
    "prediction": "elephant := a ^ E that . ( in U or ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1163, 296, 1532, 3371, 1465, 593, 3574, 457, 1048, 5198, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 6, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 26, 6, 28, 2, 16, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['live']"
    ]
  }
}


{
  "_ID": 214,
  "example": {
    "sentence": "every elephant is a pachyderm that live in africa or asia . <EOS>",
    "target": "elephant := pachyderm ^ E live in . ( africa U asia ) . <EOS>",
    "prediction": "elephant := pachyderm ^ E live . ( africa U asia ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1163, 296, 1532, 3371, 1465, 593, 3574, 457, 1048, 5198, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 6, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 27, 6, 29, 2, 16, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 220,
  "example": {
    "sentence": "every lion is a carnivor that live in africa . <EOS>",
    "target": "lion := carnivor ^ E live in . ( africa ) . <EOS>",
    "prediction": "lion := carnivor ^ E live . ( africa ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 232, 296, 1532, 634, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 27, 2, 16, 0, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 232,
  "example": {
    "sentence": "carnivorous plant are plant that eat animal . <EOS>",
    "target": "carnivorous plant := plant ^ E that . ( eat ) . <EOS>",
    "prediction": "carnivorous plant := plant plant ^ E that . ( eat ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3758, 526, 3728, 526, 1465, 2867, 5233, 1710, 0]",
    "target_idx": "[19, 22, 7, 22, 5, 13, 23, 16, 1, 24, 2, 16, 0, 0]",
    "prediction_idx": "[19, 22, 7, 22, 22, 5, 13, 23, 16, 1, 24, 2, 16, 0]"
  },
  "accuracy": 0.357,
  "tokens_OK": 5,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['plant'] -> []"
    ]
  }
}


{
  "_ID": 241,
  "example": {
    "sentence": "dolphin are acquatic mammal that live in the sea . <EOS>",
    "target": "dolphin := acquatic mammal ^ E live in . ( sea ) . <EOS>",
    "prediction": "dolphin := acquatic mammal ^ E live . ( sea ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4268, 3728, 5124, 1156, 1465, 593, 3574, 1496, 3785, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 24, 25, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 13, 24, 16, 1, 27, 2, 16, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['in']"
    ]
  }
}


{
  "_ID": 251,
  "example": {
    "sentence": "lion are also carnivor that live in africa . <EOS>",
    "target": "lion := carnivor ^ E live in . ( africa ) . <EOS>",
    "prediction": "lion := carnivor ^ E live . ( africa ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 5114, 634, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 26, 2, 16, 0, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 311,
  "example": {
    "sentence": "a stimulus is a event in the real world that trigger the sensor . <EOS>",
    "target": "stimulus := a event the real ^ E that . ( trigger ) . <EOS>",
    "prediction": "stimulus := a event event the real ^ E that . ( trigger ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3305, 296, 1532, 4512, 3574, 1496, 3411, 2696, 1465, 1179, 1496, 2913, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 25, 26, 5, 13, 28, 16, 1, 29, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 23, 25, 26, 5, 13, 28, 16, 1, 29, 2, 16, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['event'] -> []"
    ]
  }
}


{
  "_ID": 316,
  "example": {
    "sentence": "the hypertrophic chondrocyte is a chondrocyte that produce type X collagen . <EOS>",
    "target": "hypertrophic chondrocyte := chondrocyte ^ E that . ( produce type X ) . <EOS>",
    "prediction": "hypertrophic chondrocyte := chondrocyte chondrocyte ^ E that . ( produce type X ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4054, 1296, 296, 1532, 1296, 1465, 4253, 5373, 3678, 3870, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 13, 25, 16, 1, 26, 27, 28, 2, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 5, 13, 25, 16, 1, 26, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['chondrocyte'] -> []"
    ]
  }
}


{
  "_ID": 360,
  "example": {
    "sentence": "the vertebral centrum is a skeletal element that surround the notochord . <EOS>",
    "target": "vertebral centrum := skeletal element ^ E surround . ( the ) . <EOS>",
    "prediction": "vertebral centrum := skeletal element ^ E surround . ( the the ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2620, 773, 296, 1532, 3051, 1791, 1465, 3288, 1496, 595, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 2, 16, 0, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 5, 13, 27, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 12,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[10:11] -> TAR[9:9] ['the'] -> []"
    ]
  }
}


{
  "_ID": 363,
  "example": {
    "sentence": "a interesting pizza is a pizza that have at least NUM topping . <EOS>",
    "target": "interesting a := a ^ >= at pizza least . ( least ) . <EOS>",
    "prediction": "interesting a := a ^ >= at pizza . ( least ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2812, 2430, 296, 1532, 2430, 1465, 5360, 2305, 4025, 2, 1154, 1710, 0]",
    "target_idx": "[20, 23, 7, 23, 5, 12, 27, 24, 28, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 23, 7, 23, 5, 12, 27, 24, 16, 1, 28, 2, 16, 0, 0]"
  },
  "accuracy": 0.6,
  "tokens_OK": 9,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['least']"
    ]
  }
}


{
  "_ID": 365,
  "example": {
    "sentence": "a broken down vehicle ( <UNK>@5 ) may cause traffic disruption . <EOS>",
    "target": "broken down vehicle := >= <EOS>",
    "prediction": "broken down vehicle := E <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1359, 5378, 116, 5387, 1, 5388, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 12, 0]",
    "prediction_idx": "[20, 21, 22, 7, 13, 0]"
  },
  "accuracy": 0.833,
  "tokens_OK": 5,
  "tokens_tot": 6,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['E'] -> ['>=']"
    ]
  }
}


{
  "_ID": 369,
  "example": {
    "sentence": "a cheesey pizza is any pizza that have at least NUM cheese topping . <EOS>",
    "target": "cheesey pizza := pizza ^ >= least that cheese . ( NUM cheese ) . <EOS>",
    "prediction": "cheesey pizza := pizza ^ >= least that . ( NUM cheese ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 134, 2430, 296, 2133, 2430, 1465, 5360, 2305, 4025, 2, 1620, 1154, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 12, 28, 25, 30, 16, 1, 29, 30, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 24, 5, 12, 28, 25, 16, 1, 29, 30, 2, 16, 0, 0]"
  },
  "accuracy": 0.562,
  "tokens_OK": 9,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['cheese']"
    ]
  }
}


{
  "_ID": 375,
  "example": {
    "sentence": "a vector is a organism that carry or transmit a pathogen . <EOS>",
    "target": "vector := a ^ E ( that U or ) . ( transmit ) . <EOS>",
    "prediction": "vector := a ^ E ( that U or ) . ( transmit transmit ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 965, 296, 1532, 4122, 1465, 1252, 1048, 1102, 1532, 2359, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 1, 24, 6, 26, 2, 16, 1, 27, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 1, 24, 6, 26, 2, 16, 1, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.824,
  "tokens_OK": 14,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "delete    PRED[12:13] -> TAR[11:11] ['transmit'] -> []"
    ]
  }
}


{
  "_ID": 382,
  "example": {
    "sentence": "the sensor datum sheet is a object that record property of a sensor . <EOS>",
    "target": "a datum sheet := object ^ E record . ( property of a ) . <EOS>",
    "prediction": "a sheet := object ^ E record . ( property of a ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2913, 5275, 1267, 296, 1532, 3093, 1465, 4583, 2664, 2995, 1532, 2913, 1710, 0]",
    "target_idx": "[30, 21, 22, 7, 25, 5, 13, 27, 16, 1, 28, 29, 30, 2, 16, 0]",
    "prediction_idx": "[30, 22, 7, 25, 5, 13, 27, 16, 1, 28, 29, 30, 2, 16, 0, 0]"
  },
  "accuracy": 0.125,
  "tokens_OK": 2,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 1,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['datum']"
    ]
  }
}


{
  "_ID": 3,
  "example": {
    "sentence": "side project are a type of project . <EOS>",
    "target": "side project := project . <EOS>",
    "prediction": "side project := type of project . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1844, 3722, 3728, 1532, 5373, 2995, 3722, 1710, 0]",
    "target_idx": "[19, 25, 7, 25, 16, 0, 0, 0]",
    "prediction_idx": "[19, 25, 7, 23, 24, 25, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 4,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['type'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['of'] -> []"
    ]
  }
}


{
  "_ID": 4,
  "example": {
    "sentence": "lion are a type of carnivor . <EOS>",
    "target": "lion := carnivor . <EOS>",
    "prediction": "lion := type of carnivor . <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 1532, 5373, 2995, 634, 1710, 0]",
    "target_idx": "[19, 7, 24, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 16, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 3,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []"
    ]
  }
}


{
  "_ID": 19,
  "example": {
    "sentence": "all engine are also energy production system . <EOS>",
    "target": "engine := energy production system . <EOS>",
    "prediction": "engine := energy production ^ system system . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3592, 3728, 5114, 3667, 3702, 1484, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 16, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 25, 25, 16, 0]"
  },
  "accuracy": 0.556,
  "tokens_OK": 5,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['^'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['system'] -> []"
    ]
  }
}


{
  "_ID": 25,
  "example": {
    "sentence": "every employee report to at least NUM manager . <EOS>",
    "target": "employee := >= NUM report to . ( manager ) . <EOS>",
    "prediction": "employee := >= NUM report . ( manager manager ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3976, 2491, 5376, 2305, 4025, 2, 5346, 1710, 0]",
    "target_idx": "[20, 7, 12, 25, 21, 22, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 12, 25, 21, 16, 1, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.75,
  "tokens_OK": 9,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['to']",
      "delete    PRED[7:8] -> TAR[7:7] ['manager'] -> []"
    ]
  }
}


{
  "_ID": 26,
  "example": {
    "sentence": "dog are a type of animal . <EOS>",
    "target": "dog := animal . <EOS>",
    "prediction": "dog := type of animal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[777, 3728, 1532, 5373, 2995, 5233, 1710, 0]",
    "target_idx": "[19, 7, 24, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 16, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 3,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []"
    ]
  }
}


{
  "_ID": 37,
  "example": {
    "sentence": "all tiger are carnivor that live in asia . <EOS>",
    "target": "tiger := carnivor ^ E live in . ( asia ) . <EOS>",
    "prediction": "tiger := carnivor ^ E live . ( asia asia ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4809, 3728, 634, 1465, 593, 3574, 5198, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']",
      "delete    PRED[8:9] -> TAR[8:8] ['asia'] -> []"
    ]
  }
}


{
  "_ID": 43,
  "example": {
    "sentence": "carnivor are a type of animal . <EOS>",
    "target": "carnivor := animal . <EOS>",
    "prediction": "carnivor := type of animal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[634, 3728, 1532, 5373, 2995, 5233, 1710, 0]",
    "target_idx": "[19, 7, 24, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 16, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 3,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []"
    ]
  }
}


{
  "_ID": 68,
  "example": {
    "sentence": "a carbon atom is also a atom . <EOS>",
    "target": "carbon a := a . <EOS>",
    "prediction": "carbon a := a := a . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3871, 2223, 296, 5114, 1532, 2223, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 16, 0, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 7, 24, 16, 0]"
  },
  "accuracy": 0.625,
  "tokens_OK": 5,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['a'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] [':='] -> []"
    ]
  }
}


{
  "_ID": 69,
  "example": {
    "sentence": "every hammer is also a tool . <EOS>",
    "target": "hammer := tool . <EOS>",
    "prediction": "hammer := tool ^ hammer . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3367, 296, 5114, 1532, 3198, 1710, 0]",
    "target_idx": "[20, 7, 24, 16, 0, 0, 0]",
    "prediction_idx": "[20, 7, 24, 5, 20, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['^'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['hammer'] -> []"
    ]
  }
}


{
  "_ID": 98,
  "example": {
    "sentence": "every tiger is also a mammal . <EOS>",
    "target": "tiger := mammal . <EOS>",
    "prediction": "tiger := mammal ^ tiger . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4809, 296, 5114, 1532, 1156, 1710, 0]",
    "target_idx": "[20, 7, 24, 16, 0, 0, 0]",
    "prediction_idx": "[20, 7, 24, 5, 20, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['^'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['tiger'] -> []"
    ]
  }
}


{
  "_ID": 121,
  "example": {
    "sentence": "rubidium atom are also atom . <EOS>",
    "target": "rubidium atom := atom . <EOS>",
    "prediction": "rubidium atom := atom := atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3958, 2223, 3728, 5114, 2223, 1710, 0]",
    "target_idx": "[19, 23, 7, 23, 16, 0, 0, 0]",
    "prediction_idx": "[19, 23, 7, 23, 7, 23, 16, 0]"
  },
  "accuracy": 0.625,
  "tokens_OK": 5,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['atom'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] [':='] -> []"
    ]
  }
}


{
  "_ID": 122,
  "example": {
    "sentence": "all elephant are pachyderm . <EOS>",
    "target": "elephant := pachyderm . <EOS>",
    "prediction": "elephant := pachyderm := pachyderm . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1163, 3728, 3371, 1710, 0]",
    "target_idx": "[20, 7, 22, 16, 0, 0, 0]",
    "prediction_idx": "[20, 7, 22, 7, 22, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['pachyderm'] -> []"
    ]
  }
}


{
  "_ID": 123,
  "example": {
    "sentence": "herbivor are animal . <EOS>",
    "target": "herbivor := animal . <EOS>",
    "prediction": "herbivor := animal := animal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[213, 3728, 5233, 1710, 0]",
    "target_idx": "[19, 7, 21, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 21, 7, 21, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['animal'] -> []"
    ]
  }
}


{
  "_ID": 127,
  "example": {
    "sentence": "cow are mammal . <EOS>",
    "target": "cow := mammal . <EOS>",
    "prediction": "cow := mammal := mammal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 1156, 1710, 0]",
    "target_idx": "[19, 7, 21, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 21, 7, 21, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['mammal'] -> []"
    ]
  }
}


{
  "_ID": 142,
  "example": {
    "sentence": "a mouse is a animal that is chased only by cat . <EOS>",
    "target": "mouse := a ^ A that chased . ( only ) . <EOS>",
    "prediction": "mouse := a ^ A that . ( chased only ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4668, 296, 1532, 5233, 1465, 296, 5375, 3546, 5367, 362, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 14, 24, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 14, 24, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['chased']",
      "delete    PRED[8:9] -> TAR[8:8] ['chased'] -> []"
    ]
  }
}


{
  "_ID": 148,
  "example": {
    "sentence": "an osteoblast is a skeletogenic cell that secretes osteoid . <EOS>",
    "target": "osteoblast := skeletogenic cell ^ E secretes . ( osteoid ) . <EOS>",
    "prediction": "an := skeletogenic cell ^ E secretes . ( osteoid . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 933, 296, 1532, 2254, 3311, 1465, 838, 1339, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 23, 24, 5, 13, 26, 16, 1, 27, 16, 0, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "replace   PRED[0:1] -> TAR[0:1] ['an'] -> ['osteoblast']",
      "insert    PRED[9:9] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 158,
  "example": {
    "sentence": "every gazelle is also a fast herbivor that live in africa . <EOS>",
    "target": "gazelle := fast herbivor ^ E live in . ( africa ) . <EOS>",
    "prediction": "gazelle := fast herbivor ^ E live . ( africa africa ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2448, 296, 5114, 1532, 3746, 213, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 5, 13, 27, 28, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 24, 25, 5, 13, 27, 16, 1, 29, 29, 2, 16, 0]"
  },
  "accuracy": 0.786,
  "tokens_OK": 11,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['in']",
      "delete    PRED[9:10] -> TAR[9:9] ['africa'] -> []"
    ]
  }
}


{
  "_ID": 167,
  "example": {
    "sentence": "mouse are also animal that are chased only by cat . <EOS>",
    "target": "mouse := animal ^ A are only . ( by ) . <EOS>",
    "prediction": "mouse := animal ^ A are . ( only by ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4668, 3728, 5114, 5233, 1465, 3728, 5375, 3546, 5367, 362, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 14, 24, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 14, 24, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['only']",
      "delete    PRED[8:9] -> TAR[8:8] ['only'] -> []"
    ]
  }
}


{
  "_ID": 168,
  "example": {
    "sentence": "a team is a group of employee that report to a manager . <EOS>",
    "target": "team := a group of ^ E that report . ( to ) . <EOS>",
    "prediction": "team := a group of ^ E that . ( to to ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 296, 1532, 5034, 2995, 3976, 1465, 2491, 5376, 1532, 5346, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 5, 13, 26, 27, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 5, 13, 26, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 12,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['report']",
      "delete    PRED[10:11] -> TAR[10:10] ['to'] -> []"
    ]
  }
}


{
  "_ID": 181,
  "example": {
    "sentence": "caprina pizza have a very high-calorie content . <EOS>",
    "target": "caprina pizza := E have content . ( very high-calorie content ) . <EOS>",
    "prediction": "caprina := E have . ( very high-calorie content ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4998, 2430, 5360, 1532, 2027, 3803, 2436, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 21, 25, 16, 1, 23, 24, 25, 2, 16, 0]",
    "prediction_idx": "[19, 7, 13, 21, 16, 1, 23, 24, 25, 2, 16, 0, 0, 0]"
  },
  "accuracy": 0.143,
  "tokens_OK": 2,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['pizza']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['content']"
    ]
  }
}


{
  "_ID": 182,
  "example": {
    "sentence": "all giraffe are herbivor that live in africa . <EOS>",
    "target": "giraffe := herbivor ^ E live in . ( africa ) . <EOS>",
    "prediction": "giraffe := herbivor ^ E live . ( africa africa ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1909, 3728, 213, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['in']",
      "delete    PRED[8:9] -> TAR[8:8] ['africa'] -> []"
    ]
  }
}


{
  "_ID": 186,
  "example": {
    "sentence": "all gazelle are also fast herbivor that live in africa . <EOS>",
    "target": "gazelle := fast herbivor ^ E live in . ( africa ) . <EOS>",
    "prediction": "gazelle := fast herbivor ^ E live . ( africa africa ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2448, 3728, 5114, 3746, 213, 1465, 593, 3574, 457, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.786,
  "tokens_OK": 11,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['in']",
      "delete    PRED[9:10] -> TAR[9:9] ['africa'] -> []"
    ]
  }
}


{
  "_ID": 194,
  "example": {
    "sentence": "a ski lift station is the start point of a ski lift . <EOS>",
    "target": "a a station := start point of a a . <EOS>",
    "prediction": "a station := start point of a a a . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2011, 156, 3287, 296, 1496, 4589, 4106, 2995, 1532, 2011, 156, 1710, 0]",
    "target_idx": "[28, 28, 22, 7, 25, 26, 27, 28, 28, 16, 0]",
    "prediction_idx": "[28, 22, 7, 25, 26, 27, 28, 28, 28, 16, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['a']",
      "delete    PRED[6:7] -> TAR[6:6] ['a'] -> []"
    ]
  }
}


{
  "_ID": 196,
  "example": {
    "sentence": "cat are a type of mammal that chase the mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( mouse ) . <EOS>",
    "prediction": "cat := type of mammal ^ E chase . ( mouse ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 1532, 5373, 2995, 1156, 1465, 2780, 1496, 4668, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 13, 26, 16, 1, 28, 2, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 13, 26, 16, 1, 28, 2, 16, 0]"
  },
  "accuracy": 0.214,
  "tokens_OK": 3,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []"
    ]
  }
}


{
  "_ID": 245,
  "example": {
    "sentence": "screwdriver are also tool that handle screw . <EOS>",
    "target": "screwdriver := tool ^ E handle . ( screw ) . <EOS>",
    "prediction": "screwdriver := tool handle ^ E handle . ( screw screw ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4051, 3728, 5114, 3198, 1465, 179, 2809, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 25, 2, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 24, 5, 13, 24, 16, 1, 25, 25, 2, 16, 0]"
  },
  "accuracy": 0.286,
  "tokens_OK": 4,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['handle'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['screw'] -> []"
    ]
  }
}


{
  "_ID": 289,
  "example": {
    "sentence": "a measurement unit label is a datum item label that denotes a unit of measure . <EOS>",
    "target": "measurement that item := a datum item ^ E label . ( that that denotes ) . <EOS>",
    "prediction": "measurement that := a datum ^ E label . ( that that denotes ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2824, 1825, 3321, 296, 1532, 5275, 771, 3321, 1465, 3594, 1532, 1825, 2995, 752, 1710, 0]",
    "target_idx": "[20, 28, 26, 7, 24, 25, 26, 5, 13, 27, 16, 1, 28, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 28, 7, 24, 25, 5, 13, 27, 16, 1, 28, 28, 29, 2, 16, 0, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 3,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['item']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['item']"
    ]
  }
}


{
  "_ID": 339,
  "example": {
    "sentence": "a ossified tendon is a sesamoid that develop <UNK>@8 in a tendon . <EOS>",
    "target": "ossified in := a ^ E that <EOS>",
    "prediction": "ossified in := a ^ E that . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1314, 4921, 296, 1532, 1530, 1465, 3102, 1, 3574, 1532, 4921, 1710, 0]",
    "target_idx": "[20, 28, 7, 23, 5, 13, 25, 0, 0, 0]",
    "prediction_idx": "[20, 28, 7, 23, 5, 13, 25, 16, 1, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 8,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []"
    ]
  }
}


{
  "_ID": 340,
  "example": {
    "sentence": "an endochondral bone is a replacement bone that form <UNK>@9 in the cartilage . <EOS>",
    "target": "endochondral bone := replacement bone ^ E that <EOS>",
    "prediction": "endochondral bone := replacement bone ^ E that . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 3425, 432, 296, 1532, 4747, 432, 1465, 2845, 1, 3574, 1496, 1005, 1710, 0]",
    "target_idx": "[20, 25, 7, 24, 25, 5, 13, 26, 0, 0, 0]",
    "prediction_idx": "[20, 25, 7, 24, 25, 5, 13, 26, 16, 1, 0]"
  },
  "accuracy": 0.818,
  "tokens_OK": 9,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['('] -> []"
    ]
  }
}


{
  "_ID": 342,
  "example": {
    "sentence": "every mouse is also a animal that is chased only by the cat . <EOS>",
    "target": "mouse := animal ^ A is only . ( the ) . <EOS>",
    "prediction": "mouse := animal ^ A is . ( only the ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4668, 296, 5114, 1532, 5233, 1465, 296, 5375, 3546, 5367, 1496, 362, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 14, 26, 28, 16, 1, 30, 2, 16, 0]",
    "prediction_idx": "[20, 7, 24, 5, 14, 26, 16, 1, 28, 30, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['only']",
      "delete    PRED[8:9] -> TAR[8:8] ['only'] -> []"
    ]
  }
}


{
  "_ID": 368,
  "example": {
    "sentence": "every mouse is also a animal that is chased only by cat . <EOS>",
    "target": "mouse := animal ^ A is only . ( by ) . <EOS>",
    "prediction": "mouse := animal ^ A is . ( only by ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4668, 296, 5114, 1532, 5233, 1465, 296, 5375, 3546, 5367, 362, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 14, 26, 28, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 24, 5, 14, 26, 16, 1, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['only']",
      "delete    PRED[8:9] -> TAR[8:8] ['only'] -> []"
    ]
  }
}


{
  "_ID": 370,
  "example": {
    "sentence": "all mouse are also animal that are chased only by the cat . <EOS>",
    "target": "mouse := animal ^ A are only . ( the ) . <EOS>",
    "prediction": "mouse := animal ^ A are . ( only the ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4668, 3728, 5114, 5233, 1465, 3728, 5375, 3546, 5367, 1496, 362, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 14, 25, 27, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 14, 25, 16, 1, 27, 29, 2, 16, 0]"
  },
  "accuracy": 0.769,
  "tokens_OK": 10,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['only']",
      "delete    PRED[8:9] -> TAR[8:8] ['only'] -> []"
    ]
  }
}


{
  "_ID": 372,
  "example": {
    "sentence": "ray rake are tool that are used only by expert farmer . <EOS>",
    "target": "ray rake := tool ^ A are only . ( by expert ) . <EOS>",
    "prediction": "ray rake := tool ^ A are . ( only by expert ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3098, 4741, 3728, 3198, 1465, 3728, 3942, 3546, 5367, 4481, 753, 1710, 0]",
    "target_idx": "[19, 20, 7, 22, 5, 14, 24, 26, 16, 1, 27, 28, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 22, 5, 14, 24, 16, 1, 26, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.8,
  "tokens_OK": 12,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 2,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['only']",
      "delete    PRED[9:10] -> TAR[9:9] ['only'] -> []"
    ]
  }
}


{
  "_ID": 10,
  "example": {
    "sentence": "carbon atom are a type of atom . <EOS>",
    "target": "carbon atom := atom . <EOS>",
    "prediction": "carbon atom := type of atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3871, 2223, 3728, 1532, 5373, 2995, 2223, 1710, 0]",
    "target_idx": "[19, 25, 7, 25, 16, 0, 0, 0, 0]",
    "prediction_idx": "[19, 25, 7, 23, 24, 25, 25, 16, 0]"
  },
  "accuracy": 0.444,
  "tokens_OK": 4,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['type'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['of'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 15,
  "example": {
    "sentence": "tree are a type of plant . <EOS>",
    "target": "tree := plant . <EOS>",
    "prediction": "tree := type of plant ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[420, 3728, 1532, 5373, 2995, 526, 1710, 0]",
    "target_idx": "[19, 7, 24, 16, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 3,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] [')'] -> []"
    ]
  }
}


{
  "_ID": 24,
  "example": {
    "sentence": "rhinoceros are a type of pachyderm . <EOS>",
    "target": "rhinoceros := pachyderm . <EOS>",
    "prediction": "rhinoceros := type of pachyderm ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3985, 3728, 1532, 5373, 2995, 3371, 1710, 0]",
    "target_idx": "[19, 7, 24, 16, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 3,
  "tokens_tot": 8,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] [')'] -> []"
    ]
  }
}


{
  "_ID": 29,
  "example": {
    "sentence": "bee are insect that live in the hive . <EOS>",
    "target": "bee := insect ^ E live in . ( hive ) . <EOS>",
    "prediction": "bee := E live . ( hive ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3210, 3728, 2975, 1465, 593, 3574, 1496, 2556, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 13, 23, 16, 1, 26, 2, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['insect']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['in']"
    ]
  }
}


{
  "_ID": 64,
  "example": {
    "sentence": "task are part of a project . <EOS>",
    "target": "task := E part of . ( project ) . <EOS>",
    "prediction": "task := part of project ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[864, 3728, 5371, 2995, 1532, 3722, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 2, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']"
    ]
  }
}


{
  "_ID": 74,
  "example": {
    "sentence": "engine are also energy production system . <EOS>",
    "target": "engine := energy production system . <EOS>",
    "prediction": "engine := energy production := energy ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 3667, 3702, 1484, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 24, 16, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 7, 22, 2, 16, 0]"
  },
  "accuracy": 0.556,
  "tokens_OK": 5,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] [':='] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['energy'] -> []",
      "replace   PRED[6:7] -> TAR[4:5] [')'] -> ['system']"
    ]
  }
}


{
  "_ID": 83,
  "example": {
    "sentence": "a team pursue an goal . <EOS>",
    "target": "team := E pursue . ( goal ) . <EOS>",
    "prediction": "team := E pursue . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 3289, 5374, 2249, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 16, 1, 23, 2, 16, 0]",
    "prediction_idx": "[20, 7, 13, 21, 16, 1, 0, 0, 0, 0]"
  },
  "accuracy": 0.7,
  "tokens_OK": 7,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['goal']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> [')']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']"
    ]
  }
}


{
  "_ID": 99,
  "example": {
    "sentence": "frame are part of motorcycle . <EOS>",
    "target": "frame := E part of . ( motorcycle ) . <EOS>",
    "prediction": "frame := part of motorcycle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1251, 3728, 5371, 2995, 120, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 2, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']"
    ]
  }
}


{
  "_ID": 132,
  "example": {
    "sentence": "a tennis tournament is an event that can disrupt traffic . <EOS>",
    "target": "tennis tournament := event ^ >= <EOS>",
    "prediction": "tennis tournament := <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5021, 2983, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 0]",
    "prediction_idx": "[20, 21, 7, 0, 0, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['event']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['>=']"
    ]
  }
}


{
  "_ID": 135,
  "example": {
    "sentence": "a bull fight is an event that can disrupt traffic . <EOS>",
    "target": "bull fight := event ^ >= <EOS>",
    "prediction": "bull fight := <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3569, 5252, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 0]",
    "prediction_idx": "[20, 21, 7, 0, 0, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['event']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['>=']"
    ]
  }
}


{
  "_ID": 139,
  "example": {
    "sentence": "a motor show is an event that can disrupt traffic . <EOS>",
    "target": "motor show := event ^ >= <EOS>",
    "prediction": "motor show := <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1867, 1588, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 0]",
    "prediction_idx": "[20, 21, 7, 0, 0, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['event']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['>=']"
    ]
  }
}


{
  "_ID": 147,
  "example": {
    "sentence": "a university or a college is an institution of high education . <EOS>",
    "target": "university U a := an institution of high . <EOS>",
    "prediction": "university := a U a institution of high . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2271, 1048, 1532, 4190, 296, 5374, 4110, 2995, 3154, 1174, 1710, 0]",
    "target_idx": "[20, 6, 22, 7, 25, 26, 27, 28, 16, 0]",
    "prediction_idx": "[20, 7, 22, 6, 22, 26, 27, 28, 16, 0]"
  },
  "accuracy": 0.7,
  "tokens_OK": 7,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "replace   PRED[1:2] -> TAR[1:2] [':='] -> ['U']",
      "replace   PRED[3:4] -> TAR[3:4] ['U'] -> [':=']",
      "replace   PRED[4:5] -> TAR[4:5] ['a'] -> ['an']"
    ]
  }
}


{
  "_ID": 156,
  "example": {
    "sentence": "a baseball game is an event that can disrupt traffic . <EOS>",
    "target": "baseball game := event ^ >= <EOS>",
    "prediction": "baseball game := <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4718, 4354, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 0]",
    "prediction_idx": "[20, 21, 7, 0, 0, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['event']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['>=']"
    ]
  }
}


{
  "_ID": 164,
  "example": {
    "sentence": "a basketball game is an event that can disrupt traffic . <EOS>",
    "target": "basketball game := event ^ >= <EOS>",
    "prediction": "basketball game := <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2203, 4354, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 0]",
    "prediction_idx": "[20, 21, 7, 0, 0, 0, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 4,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['event']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['>=']"
    ]
  }
}


{
  "_ID": 174,
  "example": {
    "sentence": "a ski resort is a down hill or cross-country ski facility . <EOS>",
    "target": "cross-country resort := a down cross-country cross-country U or cross-country cross-country . <EOS>",
    "prediction": "cross-country resort := a down U or cross-country . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2011, 658, 296, 1532, 5378, 3609, 1048, 1286, 2011, 3516, 1710, 0]",
    "target_idx": "[27, 21, 7, 23, 24, 27, 27, 6, 26, 27, 27, 16, 0]",
    "prediction_idx": "[27, 21, 7, 23, 24, 6, 26, 27, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['cross-country']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['cross-country']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['cross-country']"
    ]
  }
}


{
  "_ID": 175,
  "example": {
    "sentence": "a product is everything that is produce by an event . <EOS>",
    "target": "product := E is produce . ( an ) . <EOS>",
    "prediction": "product := E is . ( is an an ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3986, 296, 2495, 1465, 296, 4253, 5367, 5374, 4512, 1710, 0]",
    "target_idx": "[20, 7, 13, 24, 25, 16, 1, 27, 2, 16, 0, 0]",
    "prediction_idx": "[20, 7, 13, 24, 16, 1, 24, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['produce']",
      "delete    PRED[6:7] -> TAR[6:6] ['is'] -> []",
      "delete    PRED[7:8] -> TAR[6:6] ['an'] -> []"
    ]
  }
}


{
  "_ID": 177,
  "example": {
    "sentence": "the pectoral appendage is the anterior paired appendage . <EOS>",
    "target": "pectoral paired := the anterior paired . <EOS>",
    "prediction": "pectoral paired := the anterior anterior anterior anterior paired . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 4287, 296, 1496, 4702, 2424, 4287, 1710, 0]",
    "target_idx": "[20, 25, 7, 23, 24, 25, 16, 0, 0, 0, 0]",
    "prediction_idx": "[20, 25, 7, 23, 24, 24, 24, 24, 25, 16, 0]"
  },
  "accuracy": 0.545,
  "tokens_OK": 6,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['anterior'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['anterior'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['anterior'] -> []"
    ]
  }
}


{
  "_ID": 192,
  "example": {
    "sentence": "cat are a type of mammal that chase a mouse . <EOS>",
    "target": "cat := mammal ^ E chase . ( a ) . <EOS>",
    "prediction": "cat := type of mammal ^ E chase . ( a a ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 1532, 5373, 2995, 1156, 1465, 2780, 1532, 4668, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 13, 26, 16, 1, 27, 2, 16, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 13, 26, 16, 1, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 3,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "delete    PRED[10:11] -> TAR[7:7] ['a'] -> []"
    ]
  }
}


{
  "_ID": 230,
  "example": {
    "sentence": "the argon atom are a type of atom . <EOS>",
    "target": "argon atom := atom . <EOS>",
    "prediction": "argon atom := type of atom atom . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 848, 2223, 3728, 1532, 5373, 2995, 2223, 1710, 0]",
    "target_idx": "[20, 26, 7, 26, 16, 0, 0, 0, 0]",
    "prediction_idx": "[20, 26, 7, 24, 25, 26, 26, 16, 0]"
  },
  "accuracy": 0.444,
  "tokens_OK": 4,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['type'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['of'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['atom'] -> []"
    ]
  }
}


{
  "_ID": 235,
  "example": {
    "sentence": "datum are fact that result from measurement or observation . <EOS>",
    "target": "datum := fact ^ E result from . ( measurement U observation ) . <EOS>",
    "prediction": "datum := fact result ^ E from . ( measurement observation U observation ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5275, 3728, 286, 1465, 1120, 5362, 2824, 1048, 3794, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 25, 6, 27, 2, 16, 0, 0]",
    "prediction_idx": "[19, 7, 21, 23, 5, 13, 24, 16, 1, 25, 27, 6, 27, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 8,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['result'] -> []",
      "insert    PRED[5:5] -> TAR[5:6] [] -> ['result']",
      "delete    PRED[10:11] -> TAR[9:9] ['observation'] -> []"
    ]
  }
}


{
  "_ID": 269,
  "example": {
    "sentence": "the articular system is an anatomical system that consists of all the joint of the body . <EOS>",
    "target": "articular system := anatomical system ^ E that the . ( all the the ) . <EOS>",
    "prediction": "articular system := anatomical system ^ E that . ( all all all the the ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 760, 1484, 296, 5374, 2927, 1484, 1465, 4298, 2995, 3633, 1496, 1067, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[20, 25, 7, 24, 25, 5, 13, 26, 30, 16, 1, 29, 30, 30, 2, 16, 0, 0]",
    "prediction_idx": "[20, 25, 7, 24, 25, 5, 13, 26, 16, 1, 29, 29, 29, 30, 30, 2, 16, 0]"
  },
  "accuracy": 0.611,
  "tokens_OK": 11,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['the']",
      "delete    PRED[10:11] -> TAR[10:10] ['all'] -> []",
      "delete    PRED[11:12] -> TAR[10:10] ['all'] -> []"
    ]
  }
}


{
  "_ID": 288,
  "example": {
    "sentence": "a commercial event is an event which could disrupt traffic . <EOS>",
    "target": "commercial event := event ^ >= <EOS>",
    "prediction": "commercial event event := event event <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 122, 4512, 296, 5374, 4512, 4518, 5359, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 12, 0]",
    "prediction_idx": "[20, 24, 24, 7, 24, 24, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 3,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['event'] -> []",
      "insert    PRED[4:4] -> TAR[4:5] [] -> ['^']",
      "replace   PRED[5:6] -> TAR[5:6] ['event'] -> ['>=']"
    ]
  }
}


{
  "_ID": 290,
  "example": {
    "sentence": "the vertebral column is the anatomical cluster that consists of vertebra of the body . <EOS>",
    "target": "vertebral column := the anatomical ^ E that vertebra . ( of vertebra vertebra ) . <EOS>",
    "prediction": "vertebral column := the anatomical ^ E that . ( vertebra of ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2620, 3304, 296, 1496, 2927, 2663, 1465, 4298, 2995, 4362, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 29, 16, 1, 28, 29, 29, 2, 16, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 16, 1, 29, 28, 2, 16, 0, 0, 0]"
  },
  "accuracy": 0.588,
  "tokens_OK": 10,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['vertebra']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['of']",
      "replace   PRED[11:12] -> TAR[13:14] ['of'] -> ['vertebra']"
    ]
  }
}


{
  "_ID": 324,
  "example": {
    "sentence": "a meaty pizza is any pizza that have at least NUM topping of meat . <EOS>",
    "target": "meaty pizza := pizza ^ >= least that NUM . ( of ) . <EOS>",
    "prediction": "meaty pizza := pizza ^ >= least that . ( NUM topping of ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3850, 2430, 296, 2133, 2430, 1465, 5360, 2305, 4025, 2, 1154, 2995, 2605, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 12, 28, 25, 29, 16, 1, 31, 2, 16, 0, 0]",
    "prediction_idx": "[20, 24, 7, 24, 5, 12, 28, 25, 16, 1, 29, 30, 31, 2, 16, 0]"
  },
  "accuracy": 0.562,
  "tokens_OK": 9,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['NUM']",
      "delete    PRED[10:11] -> TAR[10:10] ['NUM'] -> []",
      "delete    PRED[11:12] -> TAR[10:10] ['topping'] -> []"
    ]
  }
}


{
  "_ID": 343,
  "example": {
    "sentence": "a non-mineralized hyaline cartilage tissue is a hyaline cartilage tissue that is not mineralized . <EOS>",
    "target": "non-mineralized a a a := a a a ^ ! cartilage . <EOS>",
    "prediction": "non-mineralized a a := a a ^ cartilage . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2137, 5040, 1005, 3846, 296, 1532, 5040, 1005, 3846, 1465, 296, 2015, 4878, 1710, 0]",
    "target_idx": "[20, 25, 25, 25, 7, 25, 25, 25, 5, 15, 27, 16, 0]",
    "prediction_idx": "[20, 25, 25, 7, 25, 25, 5, 27, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['a']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['a']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['!']"
    ]
  }
}


{
  "_ID": 371,
  "example": {
    "sentence": "a property is a observable quality of a event or object . <EOS>",
    "target": "property := a observable quality of U a observable quality event . <EOS>",
    "prediction": "property := a observable quality of U event . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2664, 296, 1532, 369, 4980, 2995, 1532, 4512, 1048, 3093, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 25, 6, 22, 23, 24, 27, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 25, 6, 27, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['a']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['observable']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['quality']"
    ]
  }
}


{
  "_ID": 395,
  "example": {
    "sentence": "a american hot pizza is a type of american pizza that have jalapeno pepper on it . <EOS>",
    "target": "of hot of := of of ^ E american have . ( pizza that ) . <EOS>",
    "prediction": "of hot of := a type of of ^ E american . ( pizza that ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2872, 2430, 296, 1532, 5373, 2995, 3347, 2430, 1465, 5360, 1660, 3353, 5379, 5384, 1710, 0]",
    "target_idx": "[26, 21, 26, 7, 26, 26, 5, 13, 27, 30, 16, 1, 28, 29, 2, 16, 0, 0]",
    "prediction_idx": "[26, 21, 26, 7, 24, 25, 26, 26, 5, 13, 27, 16, 1, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.278,
  "tokens_OK": 5,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['a'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['type'] -> []",
      "insert    PRED[10:10] -> TAR[9:10] [] -> ['have']"
    ]
  }
}


{
  "_ID": 419,
  "example": {
    "sentence": "the acellular bone tissue is a mineralized bone tissue that have terminal differentiated osteoblast but lack osteocyte . <EOS>",
    "target": "acellular bone bone := mineralized bone bone ^ E tissue that have terminal . ( <EOS>",
    "prediction": "acellular bone bone := mineralized bone bone ^ E tissue . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1200, 432, 3846, 296, 1532, 4878, 432, 3846, 1465, 5360, 2559, 2457, 933, 3926, 4971, 4758, 1710, 0]",
    "target_idx": "[20, 26, 26, 7, 25, 26, 26, 5, 13, 27, 28, 29, 30, 16, 1, 0]",
    "prediction_idx": "[20, 26, 26, 7, 25, 26, 26, 5, 13, 27, 16, 1, 0, 0, 0, 0]"
  },
  "accuracy": 0.688,
  "tokens_OK": 11,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 3,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['that']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['have']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> ['terminal']"
    ]
  }
}


{
  "_ID": 7,
  "example": {
    "sentence": "a team follow more than NUM side project . <EOS>",
    "target": "team := >= NUM more . ( project . ) . <EOS>",
    "prediction": "team := > NUM follow . ( side project ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2554, 4922, 4582, 668, 2, 1844, 3722, 1710, 0]",
    "target_idx": "[20, 7, 12, 24, 22, 16, 1, 26, 16, 2, 16, 0]",
    "prediction_idx": "[20, 7, 11, 24, 21, 16, 1, 25, 26, 2, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 8,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['>'] -> ['>=']",
      "replace   PRED[4:5] -> TAR[4:5] ['follow'] -> ['more']",
      "replace   PRED[7:8] -> TAR[7:8] ['side'] -> ['project']",
      "replace   PRED[8:9] -> TAR[8:9] ['project'] -> ['.']"
    ]
  }
}


{
  "_ID": 11,
  "example": {
    "sentence": "a grind is part of the blade . <EOS>",
    "target": "grind := E part of . ( blade ) . <EOS>",
    "prediction": "grind := part of blade . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2919, 296, 5371, 2995, 1496, 4716, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 25, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 13,
  "example": {
    "sentence": "the handle is part of the knife . <EOS>",
    "target": "handle := E part of . ( the ) . <EOS>",
    "prediction": "handle := part of the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 179, 296, 5371, 2995, 1496, 1834, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 23,
  "example": {
    "sentence": "thoot are part of the rake . <EOS>",
    "target": "thoot := E part of . ( rake ) . <EOS>",
    "prediction": "thoot := part of rake thoot . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1340, 3728, 5371, 2995, 1496, 4741, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 19, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "replace   PRED[5:6] -> TAR[8:9] ['thoot'] -> [')']"
    ]
  }
}


{
  "_ID": 31,
  "example": {
    "sentence": "gear are part of engine . <EOS>",
    "target": "gear := E part of . ( engine ) . <EOS>",
    "prediction": "gear := part of engine . <EOS>"
  },
  "dump": {
    "sentence_idx": "[673, 3728, 5371, 2995, 3592, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 32,
  "example": {
    "sentence": "steer weel are part of car . <EOS>",
    "target": "steer weel := E part of . ( car ) . <EOS>",
    "prediction": "steer weel := part of car . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1628, 2371, 3728, 5371, 2995, 1877, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 22, 23, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 48,
  "example": {
    "sentence": "handle bar are part of bycicle . <EOS>",
    "target": "handle bar := E part of . ( bycicle ) . <EOS>",
    "prediction": "handle bar := part of bycicle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[179, 2886, 3728, 5371, 2995, 3326, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 22, 23, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 51,
  "example": {
    "sentence": "weel are part of the motorcycle . <EOS>",
    "target": "weel := E part of . ( motorcycle ) . <EOS>",
    "prediction": "weel := part of motorcycle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2371, 3728, 5371, 2995, 1496, 120, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 53,
  "example": {
    "sentence": "frame are part of the bycicle . <EOS>",
    "target": "frame := E part of . ( bycicle ) . <EOS>",
    "prediction": "frame := part of bycicle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1251, 3728, 5371, 2995, 1496, 3326, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 62,
  "example": {
    "sentence": "a bee have black stripe . <EOS>",
    "target": "bee := E have black stripe . ( <EOS>",
    "prediction": "bee := E have . ( black stripe ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3210, 5360, 5296, 2417, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 22, 23, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 13, 21, 16, 1, 22, 23, 2, 16, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['.'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['('] -> []",
      "replace   PRED[8:9] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[9:10] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 63,
  "example": {
    "sentence": "window are part of a room . <EOS>",
    "target": "window := E part of . ( room ) . <EOS>",
    "prediction": "window := part of room . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1986, 3728, 5371, 2995, 1532, 1027, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 65,
  "example": {
    "sentence": "saddle are part of the motorcycle . <EOS>",
    "target": "saddle := E part of . ( motorcycle ) . <EOS>",
    "prediction": "saddle := part of motorcycle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3462, 3728, 5371, 2995, 1496, 120, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 75,
  "example": {
    "sentence": "room are part of the building . <EOS>",
    "target": "room := E part of . ( building ) . <EOS>",
    "prediction": "room := part of building . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1027, 3728, 5371, 2995, 1496, 4707, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 79,
  "example": {
    "sentence": "activity are part of a process . <EOS>",
    "target": "activity := E part of . ( process ) <EOS>",
    "prediction": "activity := part of process ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2231, 3728, 5371, 2995, 1532, 1805, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 2, 16, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 3,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "delete    PRED[6:7] -> TAR[8:8] ['.'] -> []"
    ]
  }
}


{
  "_ID": 80,
  "example": {
    "sentence": "the door are part of room . <EOS>",
    "target": "door := E part of . ( room ) . <EOS>",
    "prediction": "door := part of room . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3765, 3728, 5371, 2995, 1027, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 82,
  "example": {
    "sentence": "weel are part of the bycicle . <EOS>",
    "target": "weel := E part of . ( bycicle ) . <EOS>",
    "prediction": "weel := part of bycicle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2371, 3728, 5371, 2995, 1496, 3326, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 100,
  "example": {
    "sentence": "branch are part of tree . <EOS>",
    "target": "branch := E part of . ( tree ) . <EOS>",
    "prediction": "branch := part of tree . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4358, 3728, 5371, 2995, 420, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 108,
  "example": {
    "sentence": "leaf are part of branch . <EOS>",
    "target": "leaf := E part of . ( branch ) . <EOS>",
    "prediction": "leaf := part of branch . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4585, 3728, 5371, 2995, 4358, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 120,
  "example": {
    "sentence": "knife have a blade . <EOS>",
    "target": "knife := E have blade . ( <EOS>",
    "prediction": "knife := E have . ( blade ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1834, 5360, 1532, 4716, 1710, 0]",
    "target_idx": "[19, 7, 13, 20, 22, 16, 1, 0, 0, 0]",
    "prediction_idx": "[19, 7, 13, 20, 16, 1, 22, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 5,
  "tokens_tot": 10,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['.'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['('] -> []",
      "replace   PRED[7:8] -> TAR[5:6] [')'] -> ['.']",
      "replace   PRED[8:9] -> TAR[6:7] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 140,
  "example": {
    "sentence": "a cat is also a animal that is chased by dog . <EOS>",
    "target": "cat := a ^ E that is . ( chased ) . <EOS>",
    "prediction": "cat := a ^ that is is chased . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 362, 296, 5114, 1532, 5233, 1465, 296, 5375, 5367, 777, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 25, 26, 26, 27, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "replace   PRED[6:7] -> TAR[8:9] ['is'] -> ['(']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 159,
  "example": {
    "sentence": "a saw is a tool that have a sharp blade . <EOS>",
    "target": "saw := a ^ E that have a . ( <EOS>",
    "prediction": "saw := a ^ E that . ( have a ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 307, 296, 1532, 3198, 1465, 5360, 1532, 2772, 4716, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 26, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 22, 5, 13, 24, 16, 1, 25, 26, 2, 16, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 160,
  "example": {
    "sentence": "the male lion have not less than NUM female mate . <EOS>",
    "target": "male lion := >= NUM have female mate . ( <EOS>",
    "prediction": "male lion := >= NUM have . ( female mate ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4420, 232, 5360, 2015, 2803, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 26, 22, 27, 28, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 12, 26, 22, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 163,
  "example": {
    "sentence": "a male lion have not less than NUM female mate . <EOS>",
    "target": "male lion := >= NUM have female mate . ( <EOS>",
    "prediction": "male lion := >= NUM have . ( female mate ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4420, 232, 5360, 2015, 2803, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 26, 22, 27, 28, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 12, 26, 22, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 166,
  "example": {
    "sentence": "every rhinoceros is also a mammal that have exactly NUM horn . <EOS>",
    "target": "rhinoceros := mammal ^ = NUM have horn . ( <EOS>",
    "prediction": "rhinoceros := mammal ^ = NUM have . ( horn ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3985, 296, 5114, 1532, 1156, 1465, 5360, 4082, 2, 4277, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 8, 28, 26, 29, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 24, 5, 8, 28, 26, 16, 1, 29, 2, 16, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 171,
  "example": {
    "sentence": "a cat is a animal that is chased by dog . <EOS>",
    "target": "cat := a ^ E that is . ( chased ) . <EOS>",
    "prediction": "cat := a ^ that is is chased . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 362, 296, 1532, 5233, 1465, 296, 5375, 5367, 777, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 24, 25, 25, 26, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "replace   PRED[6:7] -> TAR[8:9] ['is'] -> ['(']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 184,
  "example": {
    "sentence": "male lion have not less than NUM female mate . <EOS>",
    "target": "male lion := >= NUM have female mate . ( <EOS>",
    "prediction": "male lion := >= NUM have . ( female mate ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4420, 232, 5360, 2015, 2803, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[19, 20, 7, 12, 25, 21, 26, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 12, 25, 21, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.538,
  "tokens_OK": 7,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 185,
  "example": {
    "sentence": "engine are complex system that are part of a car . <EOS>",
    "target": "engine := complex system ^ E are part . ( a ) . <EOS>",
    "prediction": "engine := complex system ^ are part a a . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 2924, 1484, 1465, 3728, 5371, 2995, 1532, 1877, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 24, 25, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 24, 25, 27, 27, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[11:12] ['a'] -> [')']"
    ]
  }
}


{
  "_ID": 187,
  "example": {
    "sentence": "every elephant is also a pachyderm that have NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM have large ear . ( <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM have . ( large ear ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1163, 296, 5114, 1532, 3371, 1465, 5360, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 8, 27, 26, 28, 29, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 24, 5, 8, 27, 26, 16, 1, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[11:12] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 189,
  "example": {
    "sentence": "all elephant are also pachyderm that have exactly NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM have large ear . ( <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM have . ( large ear ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1163, 3728, 5114, 3371, 1465, 5360, 4082, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 27, 25, 28, 29, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 27, 25, 16, 1, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[11:12] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 191,
  "example": {
    "sentence": "the caudal fin is the most posterior median fin . <EOS>",
    "target": "caudal median := the most posterior median . <EOS>",
    "prediction": "caudal := most posterior posterior median median . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3008, 613, 296, 1496, 2880, 1871, 3485, 613, 1710, 0]",
    "target_idx": "[20, 26, 7, 23, 24, 25, 26, 16, 0]",
    "prediction_idx": "[20, 7, 24, 25, 25, 26, 26, 16, 0]"
  },
  "accuracy": 0.444,
  "tokens_OK": 4,
  "tokens_tot": 9,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['median']",
      "replace   PRED[2:3] -> TAR[3:4] ['most'] -> ['the']",
      "replace   PRED[3:4] -> TAR[4:5] ['posterior'] -> ['most']",
      "delete    PRED[5:6] -> TAR[5:5] ['median'] -> []"
    ]
  }
}


{
  "_ID": 193,
  "example": {
    "sentence": "the pelvic appendage is a posterior paired appendage . <EOS>",
    "target": "pelvic appendage := posterior paired appendage . <EOS>",
    "prediction": "pelvic appendage := posterior paired paired paired paired paired appendage . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2465, 4287, 296, 1532, 1871, 2424, 4287, 1710, 0]",
    "target_idx": "[20, 26, 7, 24, 25, 26, 16, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 26, 7, 24, 25, 25, 25, 25, 25, 26, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['paired'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['paired'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['paired'] -> []",
      "delete    PRED[7:8] -> TAR[3:3] ['paired'] -> []"
    ]
  }
}


{
  "_ID": 201,
  "example": {
    "sentence": "every rhinoceros is a mammal that have exactly NUM horn . <EOS>",
    "target": "rhinoceros := mammal ^ = NUM have horn . ( <EOS>",
    "prediction": "rhinoceros := mammal ^ = NUM have . ( horn ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3985, 296, 1532, 1156, 1465, 5360, 4082, 2, 4277, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 27, 25, 28, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 27, 25, 16, 1, 28, 2, 16, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 207,
  "example": {
    "sentence": "a rhinoceros is a mammal that have exactly NUM horn . <EOS>",
    "target": "rhinoceros := a ^ = exactly that NUM . ( <EOS>",
    "prediction": "rhinoceros := a ^ = exactly that . ( NUM ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3985, 296, 1532, 1156, 1465, 5360, 4082, 2, 4277, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 8, 26, 24, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 22, 5, 8, 26, 24, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 210,
  "example": {
    "sentence": "every cow is a mammal that have NUM long horn . <EOS>",
    "target": "cow := mammal ^ = NUM have long horn . ( <EOS>",
    "prediction": "cow := mammal ^ = NUM have . ( long horn ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3193, 296, 1532, 1156, 1465, 5360, 2, 1584, 4277, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 26, 25, 27, 28, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 26, 25, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[11:12] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 217,
  "example": {
    "sentence": "all cat are animal that are chased by dog . <EOS>",
    "target": "cat := animal ^ E are chased . ( by ) . <EOS>",
    "prediction": "cat := animal ^ are chased chased by . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 362, 3728, 5233, 1465, 3728, 5375, 5367, 777, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 24, 25, 25, 26, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "replace   PRED[6:7] -> TAR[8:9] ['chased'] -> ['(']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 224,
  "example": {
    "sentence": "the pole is part of the rake . <EOS>",
    "target": "pole := E part of . ( the ) . <EOS>",
    "prediction": "pole := part of the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3011, 296, 5371, 2995, 1496, 4741, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 24, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.364,
  "tokens_OK": 4,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 229,
  "example": {
    "sentence": "all bee are also insect that have NUM leg . <EOS>",
    "target": "bee := insect ^ = NUM have leg . ( <EOS>",
    "prediction": "bee := insect ^ = NUM have . ( leg ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3210, 3728, 5114, 2975, 1465, 5360, 2, 3227, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 8, 26, 25, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 8, 26, 25, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.615,
  "tokens_OK": 8,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 231,
  "example": {
    "sentence": "cow are also mammal that have NUM long horn . <EOS>",
    "target": "cow := mammal ^ = NUM have long horn . ( <EOS>",
    "prediction": "cow := mammal ^ = NUM have . ( long horn ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3193, 3728, 5114, 1156, 1465, 5360, 2, 1584, 4277, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 8, 25, 24, 26, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 5, 8, 25, 24, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[11:12] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 234,
  "example": {
    "sentence": "elephant are pachyderm that have exactly NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM have large ear . ( <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM have . ( large ear ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1163, 3728, 3371, 1465, 5360, 4082, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 8, 25, 23, 26, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 8, 25, 23, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[11:12] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 237,
  "example": {
    "sentence": "all elephant are pachyderm that have NUM large ear . <EOS>",
    "target": "elephant := pachyderm ^ = NUM have large ear . ( <EOS>",
    "prediction": "elephant := pachyderm ^ = NUM have . ( large ear ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1163, 3728, 3371, 1465, 5360, 2, 1650, 4739, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 8, 25, 24, 26, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 7, 22, 5, 8, 25, 24, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "replace   PRED[11:12] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 253,
  "example": {
    "sentence": "fermion are part of complex particle . <EOS>",
    "target": "fermion := E part of . ( complex particle ) . <EOS>",
    "prediction": "fermion := part of complex particle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2039, 3728, 5371, 2995, 2924, 3081, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 24, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 282,
  "example": {
    "sentence": "a cell space is a anatomical space that is part of a cell . <EOS>",
    "target": "is anatomical := a anatomical ^ E space that . ( is ) . <EOS>",
    "prediction": "is anatomical := a anatomical ^ space that is . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3311, 1053, 296, 1532, 2927, 1053, 1465, 296, 5371, 2995, 1532, 3311, 1710, 0]",
    "target_idx": "[27, 24, 7, 23, 24, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[27, 24, 7, 23, 24, 5, 25, 26, 27, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 305,
  "example": {
    "sentence": "all power screwdriver are also screwdriver that are powered by the electric energy . <EOS>",
    "target": "power screwdriver := screwdriver ^ E that are . ( by the ) . <EOS>",
    "prediction": "power screwdriver := screwdriver ^ that are by the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4964, 4051, 3728, 5114, 4051, 1465, 3728, 5372, 5367, 1496, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 13, 25, 26, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 24, 5, 25, 26, 28, 29, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 306,
  "example": {
    "sentence": "the limb skeleton is the skeletal subdivision that is part of the paired limb . <EOS>",
    "target": "of skeleton := the skeletal ^ E that is . ( part of ) . <EOS>",
    "prediction": "of skeleton := the skeletal ^ that is part part of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4294, 4381, 296, 1496, 3051, 5142, 1465, 296, 5371, 2995, 1496, 2424, 4294, 1710, 0]",
    "target_idx": "[29, 21, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[29, 21, 7, 23, 24, 5, 26, 27, 28, 28, 29, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "replace   PRED[8:9] -> TAR[10:11] ['part'] -> ['(']",
      "insert    PRED[10:10] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 319,
  "example": {
    "sentence": "a name pizza is a pizza that can be found on a pizza menu . <EOS>",
    "target": "name found := found ^ E can be . ( found found ) . <EOS>",
    "prediction": "name found := found ^ E pizza . ( can can found found ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1186, 2430, 296, 1532, 2430, 1465, 5363, 5383, 4454, 5379, 1532, 2430, 1372, 1710, 0]",
    "target_idx": "[20, 28, 7, 28, 5, 13, 26, 27, 16, 1, 28, 28, 2, 16, 0, 0]",
    "prediction_idx": "[20, 28, 7, 28, 5, 13, 24, 16, 1, 26, 26, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 8,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['can']",
      "replace   PRED[6:7] -> TAR[7:8] ['pizza'] -> ['be']",
      "delete    PRED[9:10] -> TAR[9:9] ['can'] -> []",
      "delete    PRED[10:11] -> TAR[9:9] ['can'] -> []"
    ]
  }
}


{
  "_ID": 322,
  "example": {
    "sentence": "the bone element is a skeletal element that is compose of bone tissue . <EOS>",
    "target": "compose element := skeletal element ^ E that is . ( compose compose ) . <EOS>",
    "prediction": "compose element := skeletal element ^ that is compose compose . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 432, 1791, 296, 1532, 3051, 1791, 1465, 296, 4667, 2995, 432, 3846, 1710, 0]",
    "target_idx": "[28, 25, 7, 24, 25, 5, 13, 26, 27, 16, 1, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 25, 7, 24, 25, 5, 26, 27, 28, 28, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 338,
  "example": {
    "sentence": "the fin skeleton is the skeletal subdivision that is part of the paired fin . <EOS>",
    "target": "of skeleton := the skeletal ^ E that is . ( part of ) . <EOS>",
    "prediction": "of skeleton := the skeletal ^ that is part of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 613, 4381, 296, 1496, 3051, 5142, 1465, 296, 5371, 2995, 1496, 2424, 613, 1710, 0]",
    "target_idx": "[29, 21, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[29, 21, 7, 23, 24, 5, 26, 27, 28, 29, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 352,
  "example": {
    "sentence": "a dichotomous variable specification is a variable that have NUM category . <EOS>",
    "target": "dichotomous a specification := a ^ = that variable have . ( <EOS>",
    "prediction": "dichotomous a specification := a ^ = that variable . ( have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4292, 33, 2632, 296, 1532, 33, 1465, 5360, 2, 2822, 1710, 0]",
    "target_idx": "[20, 24, 22, 7, 24, 5, 8, 26, 25, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 24, 22, 7, 24, 5, 8, 26, 25, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.667,
  "tokens_OK": 10,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "delete    PRED[9:10] -> TAR[8:8] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[8:8] ['('] -> []",
      "replace   PRED[12:13] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 358,
  "example": {
    "sentence": "a mineralized bone tissue is a bone tissue that is mineralized with hydroxyapatite . <EOS>",
    "target": "bone a a := a a ^ E bone bone . ( tissue ) . <EOS>",
    "prediction": "bone a a := a a ^ bone bone tissue . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4878, 432, 3846, 296, 1532, 432, 3846, 1465, 296, 4878, 5385, 2628, 1710, 0]",
    "target_idx": "[25, 24, 24, 7, 24, 24, 5, 13, 25, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[25, 24, 24, 7, 24, 24, 5, 25, 25, 26, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.625,
  "tokens_OK": 10,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 364,
  "example": {
    "sentence": "a engine is a complex system that is part of a car . <EOS>",
    "target": "engine := a complex ^ E that is . ( part ) . <EOS>",
    "prediction": "engine := a complex ^ that is part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 1532, 2924, 1484, 1465, 296, 5371, 2995, 1532, 1877, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 25, 26, 27, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 366,
  "example": {
    "sentence": "a engine is also a complex system that is part of car . <EOS>",
    "target": "engine := a complex ^ E that is . ( part ) . <EOS>",
    "prediction": "engine := a complex ^ that is part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 5114, 1532, 2924, 1484, 1465, 296, 5371, 2995, 1877, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 26, 27, 28, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 367,
  "example": {
    "sentence": "a output is any information that is report from a process . <EOS>",
    "target": "output := information ^ E is report . ( from ) . <EOS>",
    "prediction": "output := information ^ is report from . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1783, 296, 2133, 2786, 1465, 296, 2491, 5362, 1532, 1805, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 25, 26, 27, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 377,
  "example": {
    "sentence": "any pizza that have at least NUM cheese topping is an cheesey pizza . <EOS>",
    "target": "cheesey pizza := pizza ^ >= NUM have topping . ( cheese topping ) . <EOS>",
    "prediction": "pizza := >= NUM have . ( cheese topping ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2133, 2430, 1465, 5360, 2305, 4025, 2, 1620, 1154, 296, 5374, 134, 2430, 1710, 0]",
    "target_idx": "[30, 31, 7, 31, 5, 12, 25, 22, 27, 16, 1, 26, 27, 2, 16, 0]",
    "prediction_idx": "[31, 7, 12, 25, 22, 16, 1, 26, 27, 2, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.125,
  "tokens_OK": 2,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['cheesey']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['pizza']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['topping']"
    ]
  }
}


{
  "_ID": 400,
  "example": {
    "sentence": "a solid compound organ is a compound organ that do not contain macroscopic anatomical space . <EOS>",
    "target": "solid a a := a a ^ ! E that . ( do not contain ) . <EOS>",
    "prediction": "solid a a := a a ^ ! E that . ( do <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 360, 816, 2521, 296, 1532, 816, 2521, 1465, 4823, 2015, 3577, 661, 2927, 1053, 1710, 0]",
    "target_idx": "[20, 24, 24, 7, 24, 24, 5, 15, 13, 27, 16, 1, 28, 29, 30, 2, 16, 0]",
    "prediction_idx": "[20, 24, 24, 7, 24, 24, 5, 15, 13, 27, 16, 1, 28, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.778,
  "tokens_OK": 14,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "insert    PRED[12:12] -> TAR[13:14] [] -> ['not']",
      "insert    PRED[12:12] -> TAR[14:15] [] -> ['contain']",
      "insert    PRED[12:12] -> TAR[15:16] [] -> [')']",
      "insert    PRED[12:12] -> TAR[16:17] [] -> ['.']"
    ]
  }
}


{
  "_ID": 409,
  "example": {
    "sentence": "a datum collection from literature is a datum collection process that result in a collection of datum from the literature . <EOS>",
    "target": "result that result in := result that a ^ E collection process . ( that that result result in ) . <EOS>",
    "prediction": "result that in in := result that a ^ E collection . ( that that that result ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 5362, 4873, 296, 1532, 5275, 2683, 1805, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 5362, 1496, 4873, 1710, 0]",
    "target_idx": "[30, 29, 30, 31, 7, 30, 29, 25, 5, 13, 27, 28, 16, 1, 29, 29, 30, 30, 31, 2, 16, 0]",
    "prediction_idx": "[30, 29, 31, 31, 7, 30, 29, 25, 5, 13, 27, 16, 1, 29, 29, 29, 30, 2, 16, 0, 0, 0]"
  },
  "accuracy": 0.636,
  "tokens_OK": 14,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 4,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['in'] -> ['result']",
      "insert    PRED[10:10] -> TAR[11:12] [] -> ['process']",
      "replace   PRED[15:16] -> TAR[16:17] ['that'] -> ['result']",
      "insert    PRED[16:16] -> TAR[18:19] [] -> ['in']"
    ]
  }
}


{
  "_ID": 2,
  "example": {
    "sentence": "each employee is part of a team . <EOS>",
    "target": "employee := E part of . ( team ) . <EOS>",
    "prediction": "each employee := part of team . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1788, 3976, 296, 5371, 2995, 1532, 2554, 1710, 0]",
    "target_idx": "[20, 7, 13, 22, 23, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 22, 23, 25, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['each'] -> []",
      "insert    PRED[2:2] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> [')']"
    ]
  }
}


{
  "_ID": 39,
  "example": {
    "sentence": "handle bar are part of the bycicle . <EOS>",
    "target": "handle bar := E part of . ( bycicle ) . <EOS>",
    "prediction": "handle := part of bycicle . <EOS>"
  },
  "dump": {
    "sentence_idx": "[179, 2886, 3728, 5371, 2995, 1496, 3326, 1710, 0]",
    "target_idx": "[19, 20, 7, 13, 22, 23, 16, 1, 25, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 23, 25, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['bar']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 50,
  "example": {
    "sentence": "each project have a leader . <EOS>",
    "target": "project := E have leader . ( <EOS>",
    "prediction": "each project := E have . ( leader ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1788, 3722, 5360, 1532, 3159, 1710, 0]",
    "target_idx": "[20, 7, 13, 21, 23, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 13, 21, 16, 1, 23, 2, 16, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['each'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['('] -> []",
      "replace   PRED[8:9] -> TAR[5:6] [')'] -> ['.']",
      "replace   PRED[9:10] -> TAR[6:7] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 59,
  "example": {
    "sentence": "the carbon atom have NUM proton . <EOS>",
    "target": "carbon atom = NUM have proton . ( <EOS>",
    "prediction": "carbon atom := = NUM have . ( proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3871, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 2, 16, 0]"
  },
  "accuracy": 0.417,
  "tokens_OK": 5,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "replace   PRED[9:10] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[10:11] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 77,
  "example": {
    "sentence": "chainsaw are used only by expert operator . <EOS>",
    "target": "chainsaw := A used by . ( expert operator ) . <EOS>",
    "prediction": "chainsaw := used expert operator := A used . ( expert operator ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1225, 3728, 3942, 3546, 5367, 4481, 2996, 1710, 0]",
    "target_idx": "[19, 7, 14, 21, 23, 16, 1, 24, 25, 2, 16, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 21, 24, 25, 7, 14, 21, 16, 1, 24, 25, 2, 16, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 3,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['used'] -> []",
      "delete    PRED[3:4] -> TAR[0:0] ['expert'] -> []",
      "delete    PRED[4:5] -> TAR[0:0] ['operator'] -> []",
      "insert    PRED[7:7] -> TAR[4:5] [] -> ['by']"
    ]
  }
}


{
  "_ID": 129,
  "example": {
    "sentence": "engine are also complex system that are part of the car . <EOS>",
    "target": "engine := complex system ^ E are part . ( the ) . <EOS>",
    "prediction": "engine := complex system ^ are the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 2924, 1484, 1465, 3728, 5371, 2995, 1496, 1877, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 13, 25, 26, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 25, 28, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['part']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 136,
  "example": {
    "sentence": "an athletics meeting is an event that can disrupt traffic . <EOS>",
    "target": "athletics meeting := an ^ >= <EOS>",
    "prediction": "an athletics := <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 449, 1370, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 5, 12, 0]",
    "prediction_idx": "[23, 20, 7, 0, 0, 0, 0]"
  },
  "accuracy": 0.286,
  "tokens_OK": 2,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['athletics']",
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['meeting']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> [':=']",
      "replace   PRED[1:2] -> TAR[4:5] ['athletics'] -> ['^']",
      "replace   PRED[2:3] -> TAR[5:6] [':='] -> ['>=']"
    ]
  }
}


{
  "_ID": 137,
  "example": {
    "sentence": "all engine are complex system that are part of the car . <EOS>",
    "target": "engine := complex system ^ E are part . ( the ) . <EOS>",
    "prediction": "engine := complex system ^ are the the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3592, 3728, 2924, 1484, 1465, 3728, 5371, 2995, 1496, 1877, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 13, 25, 26, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 25, 28, 28, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['part']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "replace   PRED[7:8] -> TAR[11:12] ['the'] -> [')']"
    ]
  }
}


{
  "_ID": 138,
  "example": {
    "sentence": "a elephant is also a mammal that have a big trunk . <EOS>",
    "target": "elephant := a ^ that have a . ( <EOS>",
    "prediction": "elephant := a ^ E that . ( have a ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1163, 296, 5114, 1532, 1156, 1465, 5360, 1532, 1999, 1721, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 25, 26, 27, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 146,
  "example": {
    "sentence": "every lion is a mammal that have a long hair . <EOS>",
    "target": "lion := mammal ^ have a long . ( <EOS>",
    "prediction": "lion := mammal ^ E have . ( a long ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 232, 296, 1532, 1156, 1465, 5360, 1532, 1584, 619, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 25, 26, 27, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 162,
  "example": {
    "sentence": "all gazelle are mammal that are chased by lion . <EOS>",
    "target": "gazelle := mammal ^ E are chased . ( by ) . <EOS>",
    "prediction": "gazelle := mammal ^ are by . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2448, 3728, 1156, 1465, 3728, 5375, 5367, 232, 1710, 0]",
    "target_idx": "[20, 7, 22, 5, 13, 24, 25, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 5, 24, 26, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['chased']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 165,
  "example": {
    "sentence": "cat are also animal that are chased by a dog . <EOS>",
    "target": "cat := animal ^ E are chased . ( a ) . <EOS>",
    "prediction": "cat := animal ^ are a . <EOS>"
  },
  "dump": {
    "sentence_idx": "[362, 3728, 5114, 5233, 1465, 3728, 5375, 5367, 1532, 777, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 24, 27, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['chased']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 176,
  "example": {
    "sentence": "an employee is a person that work for a company . <EOS>",
    "target": "employee := person ^ E work for . ( a ) . <EOS>",
    "prediction": "an := person ^ E ( work U a ) . ( a ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 3976, 296, 1532, 2848, 1465, 3275, 5377, 1532, 4568, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 23, 5, 13, 1, 25, 6, 27, 2, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[0:1] -> TAR[0:1] ['an'] -> ['employee']",
      "delete    PRED[5:6] -> TAR[4:4] ['('] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['U'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['a'] -> []",
      "replace   PRED[9:10] -> TAR[6:7] [')'] -> ['for']"
    ]
  }
}


{
  "_ID": 178,
  "example": {
    "sentence": "all dolphin are acquatic mammal that have a long muzzle . <EOS>",
    "target": "dolphin := acquatic mammal ^ have long muzzle . ( <EOS>",
    "prediction": "dolphin := acquatic mammal ^ E have . ( long muzzle ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4268, 3728, 5124, 1156, 1465, 5360, 1532, 1584, 1374, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 25, 27, 28, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 13, 25, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['E'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['('] -> []",
      "replace   PRED[11:12] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 183,
  "example": {
    "sentence": "the male lion have more than NUM female mate . <EOS>",
    "target": "male lion := >= NUM have female mate . ( <EOS>",
    "prediction": "male lion := > NUM have . ( female mate ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4420, 232, 5360, 4582, 668, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 25, 22, 26, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 11, 25, 22, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['>'] -> ['>=']",
      "delete    PRED[6:7] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['('] -> []",
      "replace   PRED[10:11] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 188,
  "example": {
    "sentence": "engine are complex system that are part of the car . <EOS>",
    "target": "engine := complex system ^ E are part . ( the ) . <EOS>",
    "prediction": "engine := complex system ^ are the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 2924, 1484, 1465, 3728, 5371, 2995, 1496, 1877, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 5, 13, 24, 25, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 5, 24, 27, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['part']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 190,
  "example": {
    "sentence": "all lion are also mammal that have long hair . <EOS>",
    "target": "lion := mammal ^ have long hair . ( <EOS>",
    "prediction": "lion := mammal ^ E have . ( long hair ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 232, 3728, 5114, 1156, 1465, 5360, 1584, 619, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 25, 26, 27, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 212,
  "example": {
    "sentence": "lion are mammal that have a long hair . <EOS>",
    "target": "lion := mammal ^ have long hair . ( <EOS>",
    "prediction": "lion := mammal ^ E have . ( long hair ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[232, 3728, 1156, 1465, 5360, 1532, 1584, 619, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 23, 25, 26, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 23, 16, 1, 25, 26, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 216,
  "example": {
    "sentence": "elephant are also mammal that have a big trunk . <EOS>",
    "target": "elephant := mammal ^ have big trunk . ( <EOS>",
    "prediction": "elephant := mammal ^ E have . ( big trunk ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1163, 3728, 5114, 1156, 1465, 5360, 1532, 1999, 1721, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 24, 26, 27, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 5, 13, 24, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 239,
  "example": {
    "sentence": "female tiger have at most NUM male mate . <EOS>",
    "target": "female tiger := <= NUM have male mate . ( <EOS>",
    "prediction": "female tiger := <= NUM have . ( male mate mate ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[123, 4809, 5360, 2305, 2880, 2, 4420, 5315, 1710, 0]",
    "target_idx": "[19, 20, 7, 10, 24, 21, 25, 26, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 10, 24, 21, 16, 1, 25, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['('] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['mate'] -> []",
      "replace   PRED[11:12] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 240,
  "example": {
    "sentence": "female tiger have at most NUM male mate . <EOS>",
    "target": "female tiger := <= NUM have male mate . ( <EOS>",
    "prediction": "female tiger := <= NUM have . ( male mate mate ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[123, 4809, 5360, 2305, 2880, 2, 4420, 5315, 1710, 0]",
    "target_idx": "[19, 20, 7, 10, 24, 21, 25, 26, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 10, 24, 21, 16, 1, 25, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['('] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['mate'] -> []",
      "replace   PRED[11:12] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[12:13] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 254,
  "example": {
    "sentence": "elephant are mammal that have big trunk . <EOS>",
    "target": "elephant := mammal ^ have big trunk . ( <EOS>",
    "prediction": "elephant := mammal ^ E have . ( big trunk ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1163, 3728, 1156, 1465, 5360, 1999, 1721, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 23, 24, 25, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 21, 5, 13, 23, 16, 1, 24, 25, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "replace   PRED[10:11] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 264,
  "example": {
    "sentence": "the perichondral bone is the bone element that is located on the surface of a cartilage element . <EOS>",
    "target": "perichondral the := the surface ^ E element that . ( is located the surface ) . <EOS>",
    "prediction": "perichondral the := the surface ^ element is located the surface . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1598, 432, 296, 1496, 432, 1791, 1465, 296, 3886, 5379, 1496, 3458, 2995, 1532, 1005, 1791, 1710, 0]",
    "target_idx": "[20, 23, 7, 23, 31, 5, 13, 25, 26, 16, 1, 27, 28, 30, 31, 2, 16, 0]",
    "prediction_idx": "[20, 23, 7, 23, 31, 5, 25, 27, 28, 30, 31, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.389,
  "tokens_OK": 7,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['that']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[10:10] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 280,
  "example": {
    "sentence": "a parade is a formal display or organized procession which can disrupt traffic . <EOS>",
    "target": "parade := ( a formal U or organized ) ^ >= <EOS>",
    "prediction": "parade := a formal U or which can disrupt . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4513, 296, 1532, 987, 924, 1048, 4006, 3632, 4518, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 1, 22, 23, 6, 25, 26, 2, 5, 12, 0]",
    "prediction_idx": "[20, 7, 22, 23, 6, 25, 28, 29, 30, 16, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "replace   PRED[6:7] -> TAR[7:8] ['which'] -> ['organized']",
      "replace   PRED[7:8] -> TAR[8:9] ['can'] -> [')']",
      "replace   PRED[8:9] -> TAR[9:10] ['disrupt'] -> ['^']",
      "replace   PRED[9:10] -> TAR[10:11] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 285,
  "example": {
    "sentence": "a public event is an organized event which can disrupt traffic . <EOS>",
    "target": "public event := organized event ^ >= <EOS>",
    "prediction": "public event := organized event event which ^ can disrupt . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4918, 4512, 296, 5374, 4006, 4512, 4518, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 25, 7, 24, 25, 5, 12, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 25, 7, 24, 25, 25, 26, 5, 27, 28, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['event'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['which'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['can'] -> []",
      "delete    PRED[9:10] -> TAR[5:5] ['disrupt'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 287,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that is derived from the odontogenic papilla . <EOS>",
    "target": "odontoblast := skeletogenic cell ^ E is derived . ( from the ) . <EOS>",
    "prediction": "odontoblast := skeletogenic cell ^ is derived the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 296, 5361, 5362, 1496, 3698, 5055, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 26, 27, 29, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['from']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 291,
  "example": {
    "sentence": "integumentary skeleton is a skeletal subdivision that is part of the extra-oral dermal skeletal system . <EOS>",
    "target": "integumentary skeleton := dermal subdivision ^ E is part . ( the extra-oral dermal dermal ) . <EOS>",
    "prediction": "integumentary skeleton := dermal subdivision ^ is part the extra-oral dermal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2639, 4381, 296, 1532, 3051, 5142, 1465, 296, 5371, 2995, 1496, 4137, 280, 3051, 1484, 1710, 0]",
    "target_idx": "[19, 20, 7, 31, 24, 5, 13, 26, 27, 16, 1, 29, 30, 31, 31, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 31, 24, 5, 26, 27, 29, 30, 31, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.389,
  "tokens_OK": 7,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['dermal']",
      "insert    PRED[10:10] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 293,
  "example": {
    "sentence": "craniofacial skeleton is a cranial skeleton derived from neural crest cell . <EOS>",
    "target": "craniofacial skeleton := cranial skeleton ^ E skeleton derived . ( from neural crest ) . <EOS>",
    "prediction": "craniofacial skeleton := cranial skeleton skeleton derived ^ from neural crest . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3598, 4381, 296, 1532, 4495, 4381, 5361, 5362, 5343, 5025, 3311, 1710, 0]",
    "target_idx": "[19, 24, 7, 23, 24, 5, 13, 24, 25, 16, 1, 26, 27, 28, 2, 16, 0]",
    "prediction_idx": "[19, 24, 7, 23, 24, 24, 25, 5, 26, 27, 28, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.353,
  "tokens_OK": 6,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "replace   PRED[7:8] -> TAR[10:11] ['^'] -> ['(']",
      "insert    PRED[10:10] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 308,
  "example": {
    "sentence": "the free limb skeleton is a skeletal subdivision that is part of the limb . <EOS>",
    "target": "free of skeleton := skeletal subdivision ^ E is part . ( of ) . <EOS>",
    "prediction": "free skeleton := skeletal subdivision ^ is part of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4339, 4294, 4381, 296, 1532, 3051, 5142, 1465, 296, 5371, 2995, 1496, 4294, 1710, 0]",
    "target_idx": "[20, 30, 22, 7, 25, 26, 5, 13, 28, 29, 16, 1, 30, 2, 16, 0]",
    "prediction_idx": "[20, 22, 7, 25, 26, 5, 28, 29, 30, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.125,
  "tokens_OK": 2,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['of']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 309,
  "example": {
    "sentence": "every engine is also a complex energy production system that is part of a motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E is part . ( of ) . <EOS>",
    "prediction": "engine := complex energy system ^ is part of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3592, 296, 5114, 1532, 2924, 3667, 3702, 1484, 1465, 296, 5371, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 26, 27, 5, 13, 29, 30, 16, 1, 31, 2, 16, 0]",
    "prediction_idx": "[20, 7, 24, 25, 27, 5, 29, 30, 31, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['production']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 314,
  "example": {
    "sentence": "every power screwdriver is a screwdriver that is powered by electric energy . <EOS>",
    "target": "power screwdriver := screwdriver ^ E that is . ( powered by ) . <EOS>",
    "prediction": "power screwdriver := screwdriver ^ that powered by . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4964, 4051, 296, 1532, 4051, 1465, 296, 5372, 5367, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 13, 25, 26, 16, 1, 27, 28, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 24, 5, 25, 27, 28, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['is']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 315,
  "example": {
    "sentence": "a flat blade screwdriver is a screwdriver that have a flat blade . <EOS>",
    "target": "that that a := a ^ E screwdriver that that . ( <EOS>",
    "prediction": "that that a := a a ^ E screwdriver . ( that that ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4041, 4716, 4051, 296, 1532, 4051, 1465, 5360, 1532, 4041, 4716, 1710, 0]",
    "target_idx": "[26, 26, 24, 7, 24, 5, 13, 25, 26, 26, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[26, 26, 24, 7, 24, 24, 5, 13, 25, 16, 1, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 6,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['a'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[7:7] ['('] -> []",
      "replace   PRED[13:14] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[14:15] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 317,
  "example": {
    "sentence": "a two-dimensional region is a spatial region that have NUM dimension . <EOS>",
    "target": "two-dimensional spatial := a spatial = that region have . ( <EOS>",
    "prediction": "two-dimensional spatial := a spatial ^ = that region . ( have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1705, 4330, 296, 1532, 3634, 4330, 1465, 5360, 2, 396, 1710, 0]",
    "target_idx": "[20, 24, 7, 23, 24, 8, 26, 25, 27, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[20, 24, 7, 23, 24, 5, 8, 26, 25, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[7:7] ['('] -> []",
      "replace   PRED[12:13] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 318,
  "example": {
    "sentence": "a three-dimensional region is a spatial region that have NUM dimension . <EOS>",
    "target": "three-dimensional spatial := a spatial = that region have . ( <EOS>",
    "prediction": "three-dimensional spatial := a spatial ^ = that region . ( have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1869, 4330, 296, 1532, 3634, 4330, 1465, 5360, 2, 396, 1710, 0]",
    "target_idx": "[20, 24, 7, 23, 24, 8, 26, 25, 27, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[20, 24, 7, 23, 24, 5, 8, 26, 25, 16, 1, 27, 2, 16, 0]"
  },
  "accuracy": 0.533,
  "tokens_OK": 8,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[5:6] -> TAR[4:4] ['^'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[7:7] ['('] -> []",
      "replace   PRED[12:13] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 325,
  "example": {
    "sentence": "all engine are also complex energy production system that are part of a motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E are part . ( a ) . <EOS>",
    "prediction": "engine := complex energy system ^ are part a . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3592, 3728, 5114, 2924, 3667, 3702, 1484, 1465, 3728, 5371, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 5, 13, 28, 29, 16, 1, 31, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 26, 5, 28, 29, 31, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['production']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 328,
  "example": {
    "sentence": "biosphere is the portion of earth and it atmosphere that can support life . <EOS>",
    "target": "biosphere := portion of earth ^ portion of it atmosphere ^ >= <EOS>",
    "prediction": "biosphere := portion of earth atmosphere ^ E <EOS>"
  },
  "dump": {
    "sentence_idx": "[2702, 296, 1496, 2581, 2995, 2009, 2258, 5384, 4118, 1465, 5363, 712, 877, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 24, 5, 22, 23, 26, 27, 5, 12, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 27, 5, 13, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['portion']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['of']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['it']",
      "replace   PRED[7:8] -> TAR[11:12] ['E'] -> ['>=']"
    ]
  }
}


{
  "_ID": 329,
  "example": {
    "sentence": "a engine is a complex energy production system that is part of a motorcycle . <EOS>",
    "target": "engine := a complex energy production ^ E that is . ( part ) . <EOS>",
    "prediction": "engine := a complex production ^ that is part part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3592, 296, 1532, 2924, 3667, 3702, 1484, 1465, 296, 5371, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 25, 5, 13, 27, 28, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 25, 5, 27, 28, 29, 29, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 6,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['energy']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "replace   PRED[9:10] -> TAR[13:14] ['part'] -> [')']"
    ]
  }
}


{
  "_ID": 341,
  "example": {
    "sentence": "a procession or an organized procession is something that can disrupt traffic . <EOS>",
    "target": "procession U organized procession := >= <EOS>",
    "prediction": "procession := E ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3632, 1048, 5374, 4006, 3632, 296, 1307, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[24, 6, 23, 24, 7, 12, 0]",
    "prediction_idx": "[24, 7, 13, 1, 0, 0, 0]"
  },
  "accuracy": 0.286,
  "tokens_OK": 2,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['U']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> ['organized']",
      "replace   PRED[1:2] -> TAR[3:4] [':='] -> ['procession']",
      "replace   PRED[2:3] -> TAR[4:5] ['E'] -> [':=']",
      "replace   PRED[3:4] -> TAR[5:6] ['('] -> ['>=']"
    ]
  }
}


{
  "_ID": 346,
  "example": {
    "sentence": "a boat race or regatta is something that can disrupt traffic . <EOS>",
    "target": "boat race := >= <EOS>",
    "prediction": "boat := E ( race U <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 537, 839, 1048, 1489, 296, 1307, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0]",
    "prediction_idx": "[20, 7, 13, 1, 21, 6, 0]"
  },
  "accuracy": 0.286,
  "tokens_OK": 2,
  "tokens_tot": 7,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] [':='] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['E'] -> []",
      "replace   PRED[3:4] -> TAR[1:2] ['('] -> ['race']",
      "replace   PRED[4:5] -> TAR[2:3] ['race'] -> [':=']",
      "replace   PRED[5:6] -> TAR[3:4] ['U'] -> ['>=']"
    ]
  }
}


{
  "_ID": 354,
  "example": {
    "sentence": "every gazelle is also a mammal that is chased by lion . <EOS>",
    "target": "gazelle := mammal ^ E is chased . ( by ) . <EOS>",
    "prediction": "gazelle := mammal mammal ^ is chased by . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 2448, 296, 5114, 1532, 1156, 1465, 296, 5375, 5367, 232, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 13, 26, 27, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 24, 24, 5, 26, 27, 28, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.462,
  "tokens_OK": 6,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[3:4] -> TAR[3:4] ['mammal'] -> ['^']",
      "replace   PRED[4:5] -> TAR[4:5] ['^'] -> ['E']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 359,
  "example": {
    "sentence": "giraffe are herbivore , and they eat only leaf . <EOS>",
    "target": "giraffe := herbivore ^ A eat . ( leaf ) . <EOS>",
    "prediction": "giraffe := herbivore ^ they eat . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 4058, 2317, 2258, 5386, 2867, 3546, 4585, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 14, 25, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 5, 24, 25, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.583,
  "tokens_OK": 7,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['they'] -> ['A']",
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['leaf']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> [')']"
    ]
  }
}


{
  "_ID": 379,
  "example": {
    "sentence": "engine are complex energy production system that are part of a motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E are part . ( a ) . <EOS>",
    "prediction": "engine := complex energy system ^ are part a . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 2924, 3667, 3702, 1484, 1465, 3728, 5371, 2995, 1532, 120, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 24, 5, 13, 26, 27, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 24, 5, 26, 27, 29, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['production']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 380,
  "example": {
    "sentence": "engine are also complex energy production system that are part of motorcycle . <EOS>",
    "target": "engine := complex energy production system ^ E are part . ( of ) . <EOS>",
    "prediction": "engine := complex energy system ^ are part of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3592, 3728, 5114, 2924, 3667, 3702, 1484, 1465, 3728, 5371, 2995, 120, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 24, 25, 5, 13, 27, 28, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 23, 25, 5, 27, 28, 29, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['production']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 383,
  "example": {
    "sentence": "a cat is also a animal that is chased by the dog . <EOS>",
    "target": "cat := a ^ E that is . ( by ) . <EOS>",
    "prediction": "cat := a ^ that by . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 362, 296, 5114, 1532, 5233, 1465, 296, 5375, 5367, 1496, 777, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 25, 28, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['is']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 397,
  "example": {
    "sentence": "intramembranous ossification is a direct ossification that occur <UNK>@8 in mesenchyme or a accumulation of relative unspecialized cell . <EOS>",
    "target": "intramembranous ossification := direct ossification ^ E that <EOS>",
    "prediction": "intramembranous ossification := direct ossification ^ E that . ( in in a <EOS>"
  },
  "dump": {
    "sentence_idx": "[3269, 664, 296, 1532, 5240, 664, 1465, 542, 1, 3574, 3513, 1048, 1532, 2604, 2995, 4093, 2329, 3311, 1710, 0]",
    "target_idx": "[19, 24, 7, 23, 24, 5, 13, 25, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 24, 7, 23, 24, 5, 13, 25, 16, 1, 28, 28, 31, 0]"
  },
  "accuracy": 0.643,
  "tokens_OK": 9,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "delete    PRED[8:9] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['('] -> []",
      "delete    PRED[10:11] -> TAR[7:7] ['in'] -> []",
      "delete    PRED[11:12] -> TAR[7:7] ['in'] -> []",
      "delete    PRED[12:13] -> TAR[7:7] ['a'] -> []"
    ]
  }
}


{
  "_ID": 403,
  "example": {
    "sentence": "the pectoral fin lepidotrichium is a lepidotrichium that is part of the pectoral fin skeleton . <EOS>",
    "target": "part part lepidotrichium := lepidotrichium ^ E that is . ( part part part ) . <EOS>",
    "prediction": "part part lepidotrichium := lepidotrichium ^ that is part part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 2964, 296, 1532, 2964, 1465, 296, 5371, 2995, 1496, 2918, 613, 4381, 1710, 0]",
    "target_idx": "[28, 28, 25, 7, 25, 5, 13, 26, 27, 16, 1, 28, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 28, 25, 7, 25, 5, 26, 27, 28, 28, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.412,
  "tokens_OK": 7,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['part']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 404,
  "example": {
    "sentence": "a paired fin skeleton is a skeletal system that consists of the paired fin ( pectoral or pelvic fin ) . <EOS>",
    "target": "the pectoral skeleton := a skeletal ^ E that consists . ( the pectoral ) . <EOS>",
    "prediction": "the skeleton := a skeletal ^ E that . ( the <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2424, 613, 4381, 296, 1532, 3051, 1484, 1465, 4298, 2995, 1496, 2424, 613, 5387, 2918, 1048, 2465, 613, 5388, 1710, 0]",
    "target_idx": "[30, 34, 22, 7, 24, 25, 5, 13, 27, 28, 16, 1, 30, 34, 2, 16, 0]",
    "prediction_idx": "[30, 22, 7, 24, 25, 5, 13, 27, 16, 1, 30, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.118,
  "tokens_OK": 2,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['pectoral']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['consists']",
      "insert    PRED[10:10] -> TAR[13:14] [] -> ['pectoral']",
      "insert    PRED[10:10] -> TAR[14:15] [] -> [')']",
      "insert    PRED[10:10] -> TAR[15:16] [] -> ['.']"
    ]
  }
}


{
  "_ID": 405,
  "example": {
    "sentence": "a paired fin skeleton is a skeletal system that consists of the paired fin ( pectoral or pelvic fin ) . <EOS>",
    "target": "the pectoral skeleton := a skeletal ^ E that consists . ( the pectoral ) . <EOS>",
    "prediction": "the skeleton := a skeletal ^ E that . ( the <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2424, 613, 4381, 296, 1532, 3051, 1484, 1465, 4298, 2995, 1496, 2424, 613, 5387, 2918, 1048, 2465, 613, 5388, 1710, 0]",
    "target_idx": "[30, 34, 22, 7, 24, 25, 5, 13, 27, 28, 16, 1, 30, 34, 2, 16, 0]",
    "prediction_idx": "[30, 22, 7, 24, 25, 5, 13, 27, 16, 1, 30, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.118,
  "tokens_OK": 2,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['pectoral']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['consists']",
      "insert    PRED[10:10] -> TAR[13:14] [] -> ['pectoral']",
      "insert    PRED[10:10] -> TAR[14:15] [] -> [')']",
      "insert    PRED[10:10] -> TAR[15:16] [] -> ['.']"
    ]
  }
}


{
  "_ID": 411,
  "example": {
    "sentence": "the pelvic fin lepidotrichium is a lepidotrichium that is part of the pelvic fin skeleton . <EOS>",
    "target": "part part lepidotrichium := lepidotrichium ^ E that is . ( part part part ) . <EOS>",
    "prediction": "part part lepidotrichium := lepidotrichium ^ that is part part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2465, 613, 2964, 296, 1532, 2964, 1465, 296, 5371, 2995, 1496, 2465, 613, 4381, 1710, 0]",
    "target_idx": "[28, 28, 25, 7, 25, 5, 13, 26, 27, 16, 1, 28, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 28, 25, 7, 25, 5, 26, 27, 28, 28, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.412,
  "tokens_OK": 7,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['part']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 416,
  "example": {
    "sentence": "pectoral fin is a paired fin that is located in the thoracic region of the body . <EOS>",
    "target": "pectoral fin := paired fin ^ E that is . ( in the thoracic region ) . <EOS>",
    "prediction": "pectoral fin := paired fin ^ that in the thoracic region . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2918, 613, 296, 1532, 2424, 613, 1465, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 24, 7, 23, 24, 5, 13, 25, 26, 16, 1, 28, 29, 30, 31, 2, 16, 0]",
    "prediction_idx": "[19, 24, 7, 23, 24, 5, 25, 28, 29, 30, 31, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.389,
  "tokens_OK": 7,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 5,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['is']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[10:10] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 28,
  "example": {
    "sentence": "the neon atom have NUM proton . <EOS>",
    "target": "neon atom = NUM have proton . ( <EOS>",
    "prediction": "neon atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 316, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 30,
  "example": {
    "sentence": "all antimony atom have NUM proton . <EOS>",
    "target": "antimony atom = NUM have proton . ( <EOS>",
    "prediction": "antimony atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 2991, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 34,
  "example": {
    "sentence": "the xenon atom have NUM proton . <EOS>",
    "target": "xenon atom = NUM have proton . ( <EOS>",
    "prediction": "xenon atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2591, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 41,
  "example": {
    "sentence": "each project have exactly NUM deadline . <EOS>",
    "target": "project := = NUM have deadline . ( <EOS>",
    "prediction": "each project := = NUM have . ( deadline deadline ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1788, 3722, 5360, 4082, 2, 191, 1710, 0]",
    "target_idx": "[20, 7, 8, 23, 21, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 8, 23, 21, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['each'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['deadline'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 44,
  "example": {
    "sentence": "a arsenic atom have NUM proton . <EOS>",
    "target": "arsenic atom = NUM have proton . ( <EOS>",
    "prediction": "arsenic atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1570, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 45,
  "example": {
    "sentence": "all thallium atom have NUM proton . <EOS>",
    "target": "thallium atom = NUM have proton . ( <EOS>",
    "prediction": "thallium atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1124, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 46,
  "example": {
    "sentence": "all oxygen atom have NUM proton . <EOS>",
    "target": "oxygen atom = NUM have proton . ( <EOS>",
    "prediction": "oxygen atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1117, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 47,
  "example": {
    "sentence": "a manganese atom have NUM proton . <EOS>",
    "target": "manganese atom = NUM have proton . ( <EOS>",
    "prediction": "manganese atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5322, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 52,
  "example": {
    "sentence": "a rhodium atom have NUM proton . <EOS>",
    "target": "rhodium atom = NUM have proton . ( <EOS>",
    "prediction": "rhodium atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1024, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 55,
  "example": {
    "sentence": "the nickel atom have NUM proton . <EOS>",
    "target": "nickel atom = NUM have proton . ( <EOS>",
    "prediction": "nickel atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 703, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 56,
  "example": {
    "sentence": "a chlorine atom have NUM proton . <EOS>",
    "target": "chlorine atom = NUM have proton . ( <EOS>",
    "prediction": "chlorine atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4835, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 57,
  "example": {
    "sentence": "all germanium atom have NUM proton . <EOS>",
    "target": "germanium atom = NUM have proton . ( <EOS>",
    "prediction": "germanium atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 529, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 58,
  "example": {
    "sentence": "the silicon atom have NUM proton . <EOS>",
    "target": "silicon atom = NUM have proton . ( <EOS>",
    "prediction": "silicon atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1379, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 60,
  "example": {
    "sentence": "all scandium atom have NUM proton . <EOS>",
    "target": "scandium atom = NUM have proton . ( <EOS>",
    "prediction": "scandium atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1699, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 61,
  "example": {
    "sentence": "all chromium atom have NUM proton . <EOS>",
    "target": "chromium atom = NUM have proton . ( <EOS>",
    "prediction": "chromium atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4833, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[20, 21, 8, 23, 22, 24, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 8, 23, 22, 16, 1, 24, 24, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 96,
  "example": {
    "sentence": "radium atom have NUM proton . <EOS>",
    "target": "radium atom = NUM have proton . ( <EOS>",
    "prediction": "radium atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4173, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 8, 22, 21, 16, 1, 23, 23, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 101,
  "example": {
    "sentence": "gallium atom have NUM proton . <EOS>",
    "target": "gallium atom = NUM have proton . ( <EOS>",
    "prediction": "gallium atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4717, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 8, 22, 21, 16, 1, 23, 23, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 102,
  "example": {
    "sentence": "iodine atom have NUM proton . <EOS>",
    "target": "iodine atom = NUM have proton . ( <EOS>",
    "prediction": "iodine atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3151, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 8, 22, 21, 16, 1, 23, 23, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 103,
  "example": {
    "sentence": "molybdenum atom have NUM proton . <EOS>",
    "target": "molybdenum atom = NUM have proton . ( <EOS>",
    "prediction": "molybdenum atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[919, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 8, 22, 21, 16, 1, 23, 23, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 104,
  "example": {
    "sentence": "phosphorus atom have NUM proton . <EOS>",
    "target": "phosphorus atom = NUM have proton . ( <EOS>",
    "prediction": "phosphorus atom := = NUM have . ( proton proton ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1811, 2223, 5360, 2, 1651, 1710, 0]",
    "target_idx": "[19, 20, 8, 22, 21, 23, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 8, 22, 21, 16, 1, 23, 23, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['proton'] -> []",
      "replace   PRED[10:11] -> TAR[6:7] [')'] -> ['.']",
      "replace   PRED[11:12] -> TAR[7:8] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 131,
  "example": {
    "sentence": "a kindergarten is the location that is used for pre-school education . <EOS>",
    "target": "kindergarten := location ^ E is used . ( for pre-school ) . <EOS>",
    "prediction": "kindergarten := location ^ E ( is U for ) . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3226, 296, 1496, 267, 1465, 296, 3942, 5377, 3183, 1174, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 13, 25, 26, 16, 1, 27, 28, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 1, 25, 6, 27, 2, 16, 1, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 6,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['is']",
      "replace   PRED[5:6] -> TAR[6:7] ['('] -> ['used']",
      "replace   PRED[6:7] -> TAR[7:8] ['is'] -> ['.']",
      "replace   PRED[7:8] -> TAR[8:9] ['U'] -> ['(']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['pre-school']",
      "delete    PRED[11:12] -> TAR[12:12] ['('] -> []"
    ]
  }
}


{
  "_ID": 153,
  "example": {
    "sentence": "every tiger is also a large feline that have black stripe . <EOS>",
    "target": "tiger := large feline ^ E have black stripe . ( <EOS>",
    "prediction": "tiger := large feline ^ E have . ( black black black stripe ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4809, 296, 5114, 1532, 1650, 887, 1465, 5360, 5296, 2417, 1710, 0]",
    "target_idx": "[20, 7, 24, 25, 5, 13, 27, 28, 29, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 24, 25, 5, 13, 27, 16, 1, 28, 28, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 8,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['black'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['black'] -> []",
      "replace   PRED[13:14] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[14:15] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 155,
  "example": {
    "sentence": "gazelle are mammal that are chased by the lion . <EOS>",
    "target": "gazelle := mammal ^ E are chased . ( the ) . <EOS>",
    "prediction": "gazelle := mammal ^ are . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2448, 3728, 1156, 1465, 3728, 5375, 5367, 1496, 232, 1710, 0]",
    "target_idx": "[19, 7, 21, 5, 13, 23, 24, 16, 1, 26, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 5, 23, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['chased']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['the']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 256,
  "example": {
    "sentence": "the anal fin lepidotrichium is a lepidotrichium that is part of the anal fin skeleton . <EOS>",
    "target": "part part lepidotrichium := lepidotrichium ^ E that is . ( part part part ) . <EOS>",
    "prediction": "part lepidotrichium := lepidotrichium ^ that is part part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 2964, 296, 1532, 2964, 1465, 296, 5371, 2995, 1496, 701, 613, 4381, 1710, 0]",
    "target_idx": "[28, 28, 25, 7, 25, 5, 13, 26, 27, 16, 1, 28, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 25, 7, 25, 5, 26, 27, 28, 28, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['part']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['part']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 258,
  "example": {
    "sentence": "an osteoblast is a skeletogenic cell that is located adjacent to or <UNK>@12 in osteoid tissue . <EOS>",
    "target": "osteoblast := skeletogenic cell ^ E ( is located adjacent ^ is <EOS>",
    "prediction": "an := skeletogenic cell ^ is located <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 933, 296, 1532, 2254, 3311, 1465, 296, 3886, 2938, 5376, 1048, 1, 3574, 1339, 3846, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 1, 26, 27, 28, 5, 26, 0]",
    "prediction_idx": "[19, 7, 23, 24, 5, 26, 27, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[0:1] -> TAR[0:1] ['an'] -> ['osteoblast']",
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['adjacent']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['is']"
    ]
  }
}


{
  "_ID": 259,
  "example": {
    "sentence": "a ossified ligament is a sesamoid that develop <UNK>@8 in a ligament , distal to an articulation or joint . <EOS>",
    "target": "ossified in := a ^ E that <EOS>",
    "prediction": "ossified in := a ^ E that . ( in in U a <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1314, 2431, 296, 1532, 1530, 1465, 3102, 1, 3574, 1532, 2431, 2317, 999, 5376, 5374, 2296, 1048, 1067, 1710, 0]",
    "target_idx": "[20, 28, 7, 23, 5, 13, 25, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 28, 7, 23, 5, 13, 25, 16, 1, 28, 28, 6, 29, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['in'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['in'] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['U'] -> []",
      "delete    PRED[12:13] -> TAR[6:6] ['a'] -> []"
    ]
  }
}


{
  "_ID": 266,
  "example": {
    "sentence": "the anal fin skeleton is a median fin skeleton that is located posterior to the anus . <EOS>",
    "target": "anal fin fin := median fin fin ^ E skeleton that is . ( located ) . <EOS>",
    "prediction": "anal fin := median fin fin ^ skeleton that located . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 4381, 296, 1532, 3485, 613, 4381, 1465, 296, 3886, 1871, 5376, 1496, 610, 1710, 0]",
    "target_idx": "[20, 26, 26, 7, 25, 26, 26, 5, 13, 27, 28, 29, 16, 1, 30, 2, 16, 0]",
    "prediction_idx": "[20, 26, 7, 25, 26, 26, 5, 27, 28, 30, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.222,
  "tokens_OK": 4,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['fin']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['is']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 267,
  "example": {
    "sentence": "anal fin lepidotrichium is a lepidotrichium that is part of the anal fin skeleton . <EOS>",
    "target": "of of lepidotrichium := lepidotrichium ^ E that is . ( of of of ) . <EOS>",
    "prediction": "of lepidotrichium := lepidotrichium ^ that is of of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[701, 613, 2964, 296, 1532, 2964, 1465, 296, 5371, 2995, 1496, 701, 613, 4381, 1710, 0]",
    "target_idx": "[28, 28, 24, 7, 24, 5, 13, 25, 26, 16, 1, 28, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 24, 7, 24, 5, 25, 26, 28, 28, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['of']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 270,
  "example": {
    "sentence": "the caudal fin lepidotrichium is a lepidotrichium that is part of the caudal fin skeleton . <EOS>",
    "target": "part part lepidotrichium := lepidotrichium ^ E that is . ( part part part ) . <EOS>",
    "prediction": "part lepidotrichium := lepidotrichium ^ that is part part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3008, 613, 2964, 296, 1532, 2964, 1465, 296, 5371, 2995, 1496, 3008, 613, 4381, 1710, 0]",
    "target_idx": "[28, 28, 25, 7, 25, 5, 13, 26, 27, 16, 1, 28, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 25, 7, 25, 5, 26, 27, 28, 28, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['part']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['part']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 278,
  "example": {
    "sentence": "the dorsal fin lepidotrichium is a lepidotrichium that is part of the dorsal fin skeleton . <EOS>",
    "target": "part part lepidotrichium := lepidotrichium ^ E that is . ( part part part ) . <EOS>",
    "prediction": "part lepidotrichium := lepidotrichium ^ that is part part . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3927, 613, 2964, 296, 1532, 2964, 1465, 296, 5371, 2995, 1496, 3927, 613, 4381, 1710, 0]",
    "target_idx": "[28, 28, 25, 7, 25, 5, 13, 26, 27, 16, 1, 28, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 25, 7, 25, 5, 26, 27, 28, 28, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['part']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['part']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 279,
  "example": {
    "sentence": "ossified ligament are sesamoid that develop <UNK>@6 in a ligament , distal to an articulation or joint . <EOS>",
    "target": "ossified ligament := sesamoid ^ E develop <EOS>",
    "prediction": "ossified ligament := sesamoid ^ E develop . ( ligament ligament U , <EOS>"
  },
  "dump": {
    "sentence_idx": "[1314, 2431, 3728, 1530, 1465, 3102, 1, 3574, 1532, 2431, 2317, 999, 5376, 5374, 2296, 1048, 1067, 1710, 0]",
    "target_idx": "[19, 28, 7, 22, 5, 13, 24, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 28, 7, 22, 5, 13, 24, 16, 1, 28, 28, 6, 29, 0]"
  },
  "accuracy": 0.571,
  "tokens_OK": 8,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['('] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['ligament'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['ligament'] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['U'] -> []",
      "delete    PRED[12:13] -> TAR[6:6] [','] -> []"
    ]
  }
}


{
  "_ID": 286,
  "example": {
    "sentence": "a power screwdriver is also a screwdriver that is powered by the electric energy . <EOS>",
    "target": "power a := a ^ E screwdriver that . ( powered by ) . <EOS>",
    "prediction": "power a := a a ^ screwdriver powered by . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4964, 4051, 296, 5114, 1532, 4051, 1465, 296, 5372, 5367, 1496, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 13, 25, 26, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 5, 25, 28, 29, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['a'] -> ['^']",
      "replace   PRED[5:6] -> TAR[5:6] ['^'] -> ['E']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['that']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 294,
  "example": {
    "sentence": "caudal fin lepidotrichium is a lepidotrichium that is part of the caudal fin skeleton . <EOS>",
    "target": "of of lepidotrichium := lepidotrichium ^ E that is . ( of of of ) . <EOS>",
    "prediction": "of lepidotrichium := lepidotrichium ^ that is of of . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3008, 613, 2964, 296, 1532, 2964, 1465, 296, 5371, 2995, 1496, 3008, 613, 4381, 1710, 0]",
    "target_idx": "[28, 28, 24, 7, 24, 5, 13, 25, 26, 16, 1, 28, 28, 28, 2, 16, 0]",
    "prediction_idx": "[28, 24, 7, 24, 5, 25, 26, 28, 28, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.176,
  "tokens_OK": 3,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['of']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 301,
  "example": {
    "sentence": "a power screwdriver is also a screwdriver that is powered by electric energy . <EOS>",
    "target": "power a := a ^ E screwdriver that . ( is powered ) . <EOS>",
    "prediction": "power a := a a ^ screwdriver is powered . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4964, 4051, 296, 5114, 1532, 4051, 1465, 296, 5372, 5367, 2493, 3667, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 13, 25, 26, 16, 1, 27, 28, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 5, 25, 27, 28, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[4:5] -> TAR[4:5] ['a'] -> ['^']",
      "replace   PRED[5:6] -> TAR[5:6] ['^'] -> ['E']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['that']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 307,
  "example": {
    "sentence": "an integumentary papilla is an odontogenic papilla that is located in the integument . <EOS>",
    "target": "integumentary odontogenic := an odontogenic ^ E papilla that . ( located ) . <EOS>",
    "prediction": "integumentary odontogenic := an an odontogenic ^ papilla located . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 2639, 5055, 296, 5374, 3698, 5055, 1465, 296, 3886, 3574, 1496, 4967, 1710, 0]",
    "target_idx": "[20, 24, 7, 23, 24, 5, 13, 25, 26, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 23, 23, 24, 5, 25, 28, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['an'] -> []",
      "insert    PRED[6:6] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['that']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> [')']"
    ]
  }
}


{
  "_ID": 323,
  "example": {
    "sentence": "integument is the surface structure that is the outer protective covering of the body . <EOS>",
    "target": "integument := surface structure ^ is the outer protective covering . <EOS>",
    "prediction": "integument := surface structure ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[4967, 296, 1496, 3458, 1743, 1465, 296, 1496, 4382, 4697, 3943, 2995, 1496, 5126, 1710, 0]",
    "target_idx": "[19, 7, 22, 23, 5, 25, 26, 27, 28, 29, 16, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 6,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['is']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['the']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['outer']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['protective']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['covering']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['.']"
    ]
  }
}


{
  "_ID": 326,
  "example": {
    "sentence": "the girdle skeleton is a skeletal subdivision that is part of the appendage girdle region . <EOS>",
    "target": "the skeleton := skeletal subdivision ^ E is part . ( of the the ) . <EOS>",
    "prediction": "the skeleton := skeletal subdivision ^ is the the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3852, 4381, 296, 1532, 3051, 5142, 1465, 296, 5371, 2995, 1496, 4287, 3852, 4330, 1710, 0]",
    "target_idx": "[30, 21, 7, 24, 25, 5, 13, 27, 28, 16, 1, 29, 30, 30, 2, 16, 0]",
    "prediction_idx": "[30, 21, 7, 24, 25, 5, 27, 30, 30, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.471,
  "tokens_OK": 8,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['part']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 331,
  "example": {
    "sentence": "every cross blade screwdriver is also a screwdriver that have a cross blade . <EOS>",
    "target": "have have screwdriver := screwdriver ^ E that have have . ( <EOS>",
    "prediction": "have have := screwdriver screwdriver ^ E that . ( have have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1420, 4716, 4051, 296, 5114, 1532, 4051, 1465, 5360, 1532, 1420, 4716, 1710, 0]",
    "target_idx": "[28, 28, 26, 7, 26, 5, 13, 27, 28, 28, 16, 1, 0, 0, 0]",
    "prediction_idx": "[28, 28, 7, 26, 26, 5, 13, 27, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['screwdriver']",
      "replace   PRED[3:4] -> TAR[3:4] ['screwdriver'] -> [':=']",
      "delete    PRED[8:9] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['('] -> []",
      "replace   PRED[12:13] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 332,
  "example": {
    "sentence": "the hypertrophic chondrocyte is a chondrocyte that is terminal differentiated . <EOS>",
    "target": "hypertrophic chondrocyte := chondrocyte ^ E that is . ( <EOS>",
    "prediction": "hypertrophic chondrocyte := chondrocyte chondrocyte ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4054, 1296, 296, 1532, 1296, 1465, 296, 2559, 2457, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 13, 25, 26, 16, 1, 0]",
    "prediction_idx": "[20, 24, 7, 24, 24, 5, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.455,
  "tokens_OK": 5,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['that']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['is']",
      "replace   PRED[4:5] -> TAR[8:9] ['chondrocyte'] -> ['.']",
      "replace   PRED[5:6] -> TAR[9:10] ['^'] -> ['(']"
    ]
  }
}


{
  "_ID": 333,
  "example": {
    "sentence": "the caudal fin skeleton is a median fin skeleton supporting the caudal fin . <EOS>",
    "target": "skeleton skeleton fin := median skeleton fin ^ E fin . ( skeleton skeleton ) . <EOS>",
    "prediction": "skeleton fin := median skeleton fin fin ^ skeleton skeleton . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3008, 613, 4381, 296, 1532, 3485, 613, 4381, 5369, 1496, 3008, 613, 1710, 0]",
    "target_idx": "[27, 27, 26, 7, 25, 27, 26, 5, 13, 26, 16, 1, 27, 27, 2, 16, 0]",
    "prediction_idx": "[27, 26, 7, 25, 27, 26, 26, 5, 27, 27, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.294,
  "tokens_OK": 5,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['skeleton']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['^']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['.']",
      "replace   PRED[7:8] -> TAR[11:12] ['^'] -> ['(']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 335,
  "example": {
    "sentence": "flat blade screwdriver are also screwdriver that have a flat blade . <EOS>",
    "target": "a a screwdriver := screwdriver ^ E that a a . ( <EOS>",
    "prediction": "a a := screwdriver screwdriver ^ E that . ( a a ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4041, 4716, 4051, 3728, 5114, 4051, 1465, 5360, 1532, 4041, 4716, 1710, 0]",
    "target_idx": "[27, 27, 24, 7, 24, 5, 13, 25, 27, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[27, 27, 7, 24, 24, 5, 13, 25, 16, 1, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['screwdriver']",
      "replace   PRED[3:4] -> TAR[3:4] ['screwdriver'] -> [':=']",
      "delete    PRED[8:9] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['('] -> []",
      "replace   PRED[12:13] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 344,
  "example": {
    "sentence": "all flat blade screwdriver are screwdriver that have flat blade . <EOS>",
    "target": "have have screwdriver := screwdriver ^ E that have have . ( <EOS>",
    "prediction": "have have := screwdriver screwdriver ^ E that . ( have have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 4041, 4716, 4051, 3728, 4051, 1465, 5360, 4041, 4716, 1710, 0]",
    "target_idx": "[26, 26, 24, 7, 24, 5, 13, 25, 26, 26, 16, 1, 0, 0, 0]",
    "prediction_idx": "[26, 26, 7, 24, 24, 5, 13, 25, 16, 1, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['screwdriver']",
      "replace   PRED[3:4] -> TAR[3:4] ['screwdriver'] -> [':=']",
      "delete    PRED[8:9] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['('] -> []",
      "replace   PRED[12:13] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 361,
  "example": {
    "sentence": "gazelle are also mammal that are chased by the lion . <EOS>",
    "target": "gazelle := mammal ^ E are chased . ( the ) . <EOS>",
    "prediction": "gazelle := mammal ^ are . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2448, 3728, 5114, 1156, 1465, 3728, 5375, 5367, 1496, 232, 1710, 0]",
    "target_idx": "[19, 7, 22, 5, 13, 24, 25, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 5, 24, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['chased']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['the']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> [')']"
    ]
  }
}


{
  "_ID": 374,
  "example": {
    "sentence": "all cross blade screwdriver are also screwdriver that have cross blade . <EOS>",
    "target": "have have screwdriver := screwdriver ^ E that have have . ( <EOS>",
    "prediction": "have have := screwdriver screwdriver ^ E that . ( have have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 1420, 4716, 4051, 3728, 5114, 4051, 1465, 5360, 1420, 4716, 1710, 0]",
    "target_idx": "[27, 27, 25, 7, 25, 5, 13, 26, 27, 27, 16, 1, 0, 0, 0]",
    "prediction_idx": "[27, 27, 7, 25, 25, 5, 13, 26, 16, 1, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] [':='] -> ['screwdriver']",
      "replace   PRED[3:4] -> TAR[3:4] ['screwdriver'] -> [':=']",
      "delete    PRED[8:9] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[7:7] ['('] -> []",
      "replace   PRED[12:13] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 410,
  "example": {
    "sentence": "the median fin is an unpaired fin that is located in the sagittal plane of the organism . <EOS>",
    "target": "median fin := unpaired fin ^ E that is . ( located in the sagittal ) . <EOS>",
    "prediction": "median fin := unpaired fin fin ^ that located in the sagittal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3485, 613, 296, 5374, 4769, 613, 1465, 296, 3886, 3574, 1496, 5070, 710, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[20, 25, 7, 24, 25, 5, 13, 26, 27, 16, 1, 28, 29, 30, 31, 2, 16, 0]",
    "prediction_idx": "[20, 25, 7, 24, 25, 25, 5, 26, 28, 29, 30, 31, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.389,
  "tokens_OK": 7,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['fin'] -> ['^']",
      "replace   PRED[6:7] -> TAR[6:7] ['^'] -> ['E']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['is']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[11:11] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 414,
  "example": {
    "sentence": "a ossified tendon is a sesamoid that develop <UNK>@8 in a tendon and is distal to an articulation or joint . <EOS>",
    "target": "ossified in := a ^ E that <EOS>",
    "prediction": "ossified in := a ^ E ( that ^ a ) . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1314, 4921, 296, 1532, 1530, 1465, 3102, 1, 3574, 1532, 4921, 2258, 296, 999, 5376, 5374, 2296, 1048, 1067, 1710, 0]",
    "target_idx": "[20, 28, 7, 23, 5, 13, 25, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 28, 7, 23, 5, 13, 1, 25, 5, 29, 2, 16, 1, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 7,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 6,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['('] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['^'] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['a'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] [')'] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[12:13] -> TAR[6:6] ['('] -> []"
    ]
  }
}


{
  "_ID": 143,
  "example": {
    "sentence": "rhinoceros are a type of mammal that have NUM horn . <EOS>",
    "target": "rhinoceros := mammal ^ = NUM have horn . ( <EOS>",
    "prediction": "rhinoceros := type of mammal ^ = NUM have . ( horn horn ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3985, 3728, 1532, 5373, 2995, 1156, 1465, 5360, 2, 4277, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 8, 27, 26, 28, 16, 1, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 8, 27, 26, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.188,
  "tokens_OK": 3,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['('] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['horn'] -> []",
      "replace   PRED[13:14] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[14:15] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 144,
  "example": {
    "sentence": "bycicle are a type of vehicle that have NUM weel . <EOS>",
    "target": "bycicle := vehicle ^ = NUM have weel . ( <EOS>",
    "prediction": "bycicle := type of vehicle ^ = NUM have . ( weel weel ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3326, 3728, 1532, 5373, 2995, 116, 1465, 5360, 2, 2371, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 8, 27, 26, 28, 16, 1, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 8, 27, 26, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.188,
  "tokens_OK": 3,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['('] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['weel'] -> []",
      "replace   PRED[13:14] -> TAR[8:9] [')'] -> ['.']",
      "replace   PRED[14:15] -> TAR[9:10] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 271,
  "example": {
    "sentence": "flat blade screwdriver are a type of screwdriver that have a flat blade . <EOS>",
    "target": "have have screwdriver := screwdriver ^ E that have have . ( <EOS>",
    "prediction": "have have screwdriver := type of screwdriver screwdriver ^ E that . ( have have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4041, 4716, 4051, 3728, 1532, 5373, 2995, 4051, 1465, 5360, 1532, 4041, 4716, 1710, 0]",
    "target_idx": "[28, 28, 26, 7, 26, 5, 13, 27, 28, 28, 16, 1, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[28, 28, 26, 7, 24, 25, 26, 26, 5, 13, 27, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.278,
  "tokens_OK": 5,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['type'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['of'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['screwdriver'] -> []",
      "delete    PRED[11:12] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[12:13] -> TAR[7:7] ['('] -> []",
      "replace   PRED[15:16] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[16:17] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 275,
  "example": {
    "sentence": "a migratory neural crest cell is a cell that is derived from the specialized ectoderm . <EOS>",
    "target": "migratory neural crest a := a ^ E cell that . ( derived from ) . <EOS>",
    "prediction": "migratory neural crest := a a ^ cell that from . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 641, 5343, 5025, 3311, 296, 1532, 3311, 1465, 296, 5361, 5362, 1496, 3343, 113, 1710, 0]",
    "target_idx": "[20, 21, 22, 25, 7, 25, 5, 13, 26, 27, 16, 1, 29, 30, 2, 16, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 25, 5, 26, 27, 30, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.412,
  "tokens_OK": 7,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['a']",
      "replace   PRED[5:6] -> TAR[6:7] ['a'] -> ['^']",
      "replace   PRED[6:7] -> TAR[7:8] ['^'] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['derived']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']"
    ]
  }
}


{
  "_ID": 281,
  "example": {
    "sentence": "the anal fin is a median fin that is located posterior to the anus . <EOS>",
    "target": "anal fin := median fin ^ E that is located . ( posterior ) . <EOS>",
    "prediction": "anal fin := median fin ^ that is <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 701, 613, 296, 1532, 3485, 613, 1465, 296, 3886, 1871, 5376, 1496, 610, 1710, 0]",
    "target_idx": "[20, 25, 7, 24, 25, 5, 13, 26, 27, 28, 16, 1, 29, 2, 16, 0]",
    "prediction_idx": "[20, 25, 7, 24, 25, 5, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['located']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['posterior']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> [')']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['.']"
    ]
  }
}


{
  "_ID": 300,
  "example": {
    "sentence": "the dorsal fin is a median fin located on the dorsal surface of the organism . <EOS>",
    "target": "on fin := median fin ^ E fin located . ( on on the dorsal ) . <EOS>",
    "prediction": "on := median fin fin fin on := on on the dorsal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3927, 613, 296, 1532, 3485, 613, 3886, 5379, 1496, 3927, 3458, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[27, 25, 7, 24, 25, 5, 13, 25, 26, 16, 1, 27, 27, 28, 29, 2, 16, 0]",
    "prediction_idx": "[27, 7, 24, 25, 25, 25, 27, 7, 27, 27, 28, 29, 16, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 3,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['fin']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['E']",
      "replace   PRED[5:6] -> TAR[8:9] ['fin'] -> ['located']",
      "replace   PRED[6:7] -> TAR[9:10] ['on'] -> ['.']",
      "replace   PRED[7:8] -> TAR[10:11] [':='] -> ['(']",
      "insert    PRED[11:11] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 310,
  "example": {
    "sentence": "giraffe are a type of mammal that have a long neck . <EOS>",
    "target": "giraffe := mammal ^ have a long . ( <EOS>",
    "prediction": "giraffe := type of mammal ^ E have . ( a long ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1909, 3728, 1532, 5373, 2995, 1156, 1465, 5360, 1532, 1584, 81, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 26, 27, 28, 16, 1, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 3,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[4:4] ['('] -> []",
      "replace   PRED[12:13] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 312,
  "example": {
    "sentence": "chainsaw are a type of saw that are powered by electric energy . <EOS>",
    "target": "chainsaw := saw ^ E are powered . ( by electric ) . <EOS>",
    "prediction": "chainsaw := type of saw ^ are by electric . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1225, 3728, 1532, 5373, 2995, 307, 1465, 3728, 5372, 5367, 2493, 3667, 1710, 0]",
    "target_idx": "[19, 7, 24, 5, 13, 26, 27, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 5, 26, 28, 29, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.214,
  "tokens_OK": 3,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "insert    PRED[5:5] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[6:7] [] -> ['powered']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 327,
  "example": {
    "sentence": "the perichordal bone is the bone element that is adjacent to the notochord . <EOS>",
    "target": "perichordal the := the the ^ E element that . ( is ) . <EOS>",
    "prediction": "perichordal the := the the ^ element <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1321, 432, 296, 1496, 432, 1791, 1465, 296, 2938, 5376, 1496, 595, 1710, 0]",
    "target_idx": "[20, 23, 7, 23, 23, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 23, 7, 23, 23, 5, 25, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.467,
  "tokens_OK": 7,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['that']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['is']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> [')']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['.']"
    ]
  }
}


{
  "_ID": 345,
  "example": {
    "sentence": "every giraffe is also a mammal that have a long neck . <EOS>",
    "target": "giraffe := mammal ^ have a long . ( <EOS>",
    "prediction": "giraffe := mammal mammal ^ E have . ( a long long ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1909, 296, 5114, 1532, 1156, 1465, 5360, 1532, 1584, 81, 1710, 0]",
    "target_idx": "[20, 7, 24, 5, 26, 27, 28, 16, 1, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 24, 24, 5, 13, 26, 16, 1, 27, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['mammal'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['('] -> []",
      "delete    PRED[10:11] -> TAR[5:5] ['long'] -> []",
      "replace   PRED[12:13] -> TAR[7:8] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[8:9] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 351,
  "example": {
    "sentence": "the perichordal tissue is derived from cell surrounding the notochord . <EOS>",
    "target": "perichordal tissue := derived from ( cell ^ E surrounding . ( the ) ) . <EOS>",
    "prediction": "perichordal tissue := derived from cell surrounding the surrounding the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 1321, 3846, 296, 5361, 5362, 3311, 1799, 1496, 595, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 24, 1, 25, 5, 13, 26, 16, 1, 27, 2, 2, 16, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 25, 26, 27, 26, 27, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.412,
  "tokens_OK": 7,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['^']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['(']",
      "replace   PRED[8:9] -> TAR[13:14] ['surrounding'] -> [')']",
      "replace   PRED[9:10] -> TAR[14:15] ['the'] -> [')']"
    ]
  }
}


{
  "_ID": 356,
  "example": {
    "sentence": "axial ossicle is a ossicle that is part of the axial skeleton . <EOS>",
    "target": "of ossicle := ossicle ^ E that is . ( of of ) . <EOS>",
    "prediction": "of ossicle := ossicle ^ that is <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 3968, 296, 1532, 3968, 1465, 296, 5371, 2995, 1496, 4722, 4381, 1710, 0]",
    "target_idx": "[27, 23, 7, 23, 5, 13, 24, 25, 16, 1, 27, 27, 2, 16, 0]",
    "prediction_idx": "[27, 23, 7, 23, 5, 24, 25, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['of']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['of']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> [')']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['.']"
    ]
  }
}


{
  "_ID": 393,
  "example": {
    "sentence": "a median fin skeleton is a postcranial axial skeleton that is unpaired and located on the sagittal plane of the organism . <EOS>",
    "target": "median fin axial := a postcranial axial ^ E skeleton . ( <EOS>",
    "prediction": "median axial := a postcranial axial ^ is located on the sagittal . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3485, 613, 4381, 296, 1532, 4117, 4722, 4381, 1465, 296, 4769, 2258, 3886, 5379, 1496, 5070, 710, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[20, 21, 26, 7, 24, 25, 26, 5, 13, 27, 16, 1, 0, 0]",
    "prediction_idx": "[20, 26, 7, 24, 25, 26, 5, 29, 32, 33, 34, 35, 16, 0]"
  },
  "accuracy": 0.143,
  "tokens_OK": 2,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 7,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['fin']",
      "delete    PRED[7:8] -> TAR[7:7] ['is'] -> []",
      "delete    PRED[8:9] -> TAR[7:7] ['located'] -> []",
      "replace   PRED[9:10] -> TAR[8:9] ['on'] -> ['E']",
      "replace   PRED[10:11] -> TAR[9:10] ['the'] -> ['skeleton']",
      "replace   PRED[11:12] -> TAR[10:11] ['sagittal'] -> ['.']",
      "replace   PRED[12:13] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 33,
  "example": {
    "sentence": "rake are used in farm activity . <EOS>",
    "target": "rake := E used in . ( farm activity ) . <EOS>",
    "prediction": "rake := used <EOS>"
  },
  "dump": {
    "sentence_idx": "[4741, 3728, 3942, 3574, 3618, 2231, 1710, 0]",
    "target_idx": "[19, 7, 13, 21, 22, 16, 1, 23, 24, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['E']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['in']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['.']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['(']",
      "insert    PRED[2:2] -> TAR[7:8] [] -> ['farm']",
      "insert    PRED[2:2] -> TAR[8:9] [] -> ['activity']",
      "insert    PRED[2:2] -> TAR[9:10] [] -> [')']",
      "insert    PRED[2:2] -> TAR[10:11] [] -> ['.']"
    ]
  }
}


{
  "_ID": 54,
  "example": {
    "sentence": "rockfalls may obstruct transport infrastructure . <EOS>",
    "target": "rockfalls := >= <EOS>",
    "prediction": "rockfalls := E may . ( transport infrastructure ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5056, 1126, 2754, 2910, 3351, 1710, 0]",
    "target_idx": "[19, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 13, 20, 16, 1, 22, 23, 2, 16, 0]"
  },
  "accuracy": 0.273,
  "tokens_OK": 3,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['E'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['may'] -> []",
      "delete    PRED[4:5] -> TAR[1:1] ['.'] -> []",
      "delete    PRED[5:6] -> TAR[1:1] ['('] -> []",
      "delete    PRED[6:7] -> TAR[1:1] ['transport'] -> []",
      "delete    PRED[7:8] -> TAR[1:1] ['infrastructure'] -> []",
      "delete    PRED[8:9] -> TAR[1:1] [')'] -> []",
      "replace   PRED[9:10] -> TAR[2:3] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 133,
  "example": {
    "sentence": "a bicycle race is something that can disrupt traffic . <EOS>",
    "target": "bicycle race := >= <EOS>",
    "prediction": "bicycle race := E can . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5107, 839, 296, 1307, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['can'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['disrupt'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "replace   PRED[10:11] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 170,
  "example": {
    "sentence": "every clamp is a tool that can secure object . <EOS>",
    "target": "clamp := tool ^ >= <EOS>",
    "prediction": "clamp := tool ^ E can . ( secure object ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 1785, 296, 1532, 3198, 1465, 5363, 3770, 3093, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.385,
  "tokens_OK": 5,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['can'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[3:3] ['('] -> []",
      "delete    PRED[8:9] -> TAR[3:3] ['secure'] -> []",
      "delete    PRED[9:10] -> TAR[3:3] ['object'] -> []",
      "delete    PRED[10:11] -> TAR[3:3] [')'] -> []",
      "replace   PRED[11:12] -> TAR[4:5] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 180,
  "example": {
    "sentence": "every project report to at least NUM and at most NUM stakeholder . <EOS>",
    "target": "project := ( >= most && <= most ) report to . ( most ) . <EOS>",
    "prediction": "project report := ( >= most && <= most ) <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 3722, 2491, 5376, 2305, 4025, 2, 2258, 2305, 2880, 2, 4936, 1710, 0]",
    "target_idx": "[20, 7, 1, 12, 28, 3, 10, 28, 2, 21, 22, 16, 1, 28, 2, 16, 0]",
    "prediction_idx": "[20, 21, 7, 1, 12, 28, 3, 10, 28, 2, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.118,
  "tokens_OK": 2,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['report'] -> []",
      "insert    PRED[7:7] -> TAR[7:8] [] -> ['most']",
      "insert    PRED[7:7] -> TAR[8:9] [] -> [')']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['report']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['to']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[15:16] [] -> ['.']"
    ]
  }
}


{
  "_ID": 202,
  "example": {
    "sentence": "a race meeting is something that can disrupt traffic . <EOS>",
    "target": "race meeting := >= <EOS>",
    "prediction": "race meeting := E can . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 839, 1370, 296, 1307, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['can'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['disrupt'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "replace   PRED[10:11] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 213,
  "example": {
    "sentence": "a damaged flyover may cause traffic disruption . <EOS>",
    "target": "damaged flyover := >= <EOS>",
    "prediction": "damaged flyover := E may . ( cause traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 2868, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 22, 16, 1, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['cause'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "replace   PRED[10:11] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 226,
  "example": {
    "sentence": "every stakeholder is involved in more than NUM project . <EOS>",
    "target": "stakeholder := > NUM involved in . ( project ) . <EOS>",
    "prediction": "stakeholder := involved := > NUM <EOS>"
  },
  "dump": {
    "sentence_idx": "[3167, 4936, 296, 3787, 3574, 4582, 668, 2, 3722, 1710, 0]",
    "target_idx": "[20, 7, 11, 26, 22, 23, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 7, 11, 26, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 3,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['>']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['NUM']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['in']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[2:2] -> TAR[7:8] [] -> ['(']",
      "replace   PRED[3:4] -> TAR[8:9] [':='] -> ['project']",
      "replace   PRED[4:5] -> TAR[9:10] ['>'] -> [')']",
      "replace   PRED[5:6] -> TAR[10:11] ['NUM'] -> ['.']"
    ]
  }
}


{
  "_ID": 238,
  "example": {
    "sentence": "the fin is a surface structure involved in locomotion . <EOS>",
    "target": "fin := surface structure ^ E involved in . ( locomotion ) . <EOS>",
    "prediction": "fin := surface structure . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 613, 296, 1532, 3458, 1743, 3787, 3574, 2060, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 25, 26, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.357,
  "tokens_OK": 5,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['involved']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['in']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[10:11] [] -> ['locomotion']",
      "insert    PRED[3:3] -> TAR[11:12] [] -> [')']"
    ]
  }
}


{
  "_ID": 244,
  "example": {
    "sentence": "a damaged gantry may cause traffic disruption . <EOS>",
    "target": "damaged gantry := >= <EOS>",
    "prediction": "damaged gantry := E may . ( cause traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 3448, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 22, 16, 1, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['cause'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "replace   PRED[10:11] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 246,
  "example": {
    "sentence": "a damaged viaduct may cause traffic disruption . <EOS>",
    "target": "damaged viaduct := >= <EOS>",
    "prediction": "damaged viaduct := E may . ( cause disruption ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 1556, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 22, 16, 1, 23, 25, 2, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['cause'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['disruption'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "replace   PRED[10:11] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 248,
  "example": {
    "sentence": "a damaged tunnel may cause traffic disruption . <EOS>",
    "target": "damaged tunnel := >= <EOS>",
    "prediction": "damaged tunnel := E may . ( cause traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 902, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 22, 16, 1, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['cause'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "replace   PRED[10:11] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 255,
  "example": {
    "sentence": "a damaged bridge may cause traffic disruption . <EOS>",
    "target": "damaged bridge := >= <EOS>",
    "prediction": "damaged bridge := E may . ( cause traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 313, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 22, 16, 1, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 4,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['cause'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "replace   PRED[10:11] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 262,
  "example": {
    "sentence": "a ligamentous replacement element is a replacement element that form <UNK>@10 a replacement of a ligament . <EOS>",
    "target": "ligamentous that a := that a ^ E replacement <EOS>",
    "prediction": "ligamentous that a := that a ^ E replacement . ( that that that form ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4235, 4747, 1791, 296, 1532, 4747, 1791, 1465, 2845, 1, 1532, 4747, 2995, 1532, 2431, 1710, 0]",
    "target_idx": "[20, 27, 24, 7, 27, 24, 5, 13, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 27, 24, 7, 27, 24, 5, 13, 25, 16, 1, 27, 27, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.556,
  "tokens_OK": 10,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[9:10] -> TAR[8:8] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[8:8] ['('] -> []",
      "delete    PRED[11:12] -> TAR[8:8] ['that'] -> []",
      "delete    PRED[12:13] -> TAR[8:8] ['that'] -> []",
      "delete    PRED[13:14] -> TAR[8:8] ['that'] -> []",
      "delete    PRED[14:15] -> TAR[8:8] ['form'] -> []",
      "delete    PRED[15:16] -> TAR[8:8] [')'] -> []",
      "delete    PRED[16:17] -> TAR[8:8] ['.'] -> []"
    ]
  }
}


{
  "_ID": 272,
  "example": {
    "sentence": "a island or isle is any piece of land that is complete surround by water . <EOS>",
    "target": "island U isle := piece of land ^ A complete surround . ( by ) . <EOS>",
    "prediction": "island U isle := piece of land ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 805, 1048, 4640, 296, 2133, 25, 2995, 2899, 1465, 296, 4889, 3288, 5367, 226, 1710, 0]",
    "target_idx": "[20, 6, 22, 7, 25, 26, 27, 5, 14, 30, 31, 16, 1, 32, 2, 16, 0]",
    "prediction_idx": "[20, 6, 22, 7, 25, 26, 27, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.529,
  "tokens_OK": 9,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['A']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['complete']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['surround']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['by']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> [')']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['.']"
    ]
  }
}


{
  "_ID": 276,
  "example": {
    "sentence": "the dorsal fin skeleton is a median fin skeleton located on the dorsal surface of the organism . <EOS>",
    "target": "located fin fin := median fin fin ^ E fin skeleton . ( located located on the ) . <EOS>",
    "prediction": "located fin := median fin fin := fin fin fin located on the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3927, 613, 4381, 296, 1532, 3485, 613, 4381, 3886, 5379, 1496, 3927, 3458, 2995, 1496, 4122, 1710, 0]",
    "target_idx": "[28, 26, 26, 7, 25, 26, 26, 5, 13, 26, 27, 16, 1, 28, 28, 29, 30, 2, 16, 0]",
    "prediction_idx": "[28, 26, 7, 25, 26, 26, 7, 26, 26, 26, 28, 29, 30, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 5,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['fin']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['^']",
      "replace   PRED[6:7] -> TAR[8:9] [':='] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['skeleton']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['.']",
      "replace   PRED[8:9] -> TAR[12:13] ['fin'] -> ['(']",
      "replace   PRED[9:10] -> TAR[13:14] ['fin'] -> ['located']",
      "insert    PRED[12:12] -> TAR[17:18] [] -> [')']"
    ]
  }
}


{
  "_ID": 292,
  "example": {
    "sentence": "car are mean of transportation that are powered by fuel or electric energy . <EOS>",
    "target": "car := mean of transportation ^ E are powered . ( by U or electric ) . <EOS>",
    "prediction": "car := mean of transportation by by by ^ or electric . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1877, 3728, 3357, 2995, 1839, 1465, 3728, 5372, 5367, 4783, 1048, 2493, 3667, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 5, 13, 25, 26, 16, 1, 27, 6, 29, 30, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 27, 27, 27, 5, 29, 30, 16, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 6,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['are']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['powered']",
      "replace   PRED[5:6] -> TAR[9:10] ['by'] -> ['.']",
      "replace   PRED[6:7] -> TAR[10:11] ['by'] -> ['(']",
      "replace   PRED[8:9] -> TAR[12:13] ['^'] -> ['U']",
      "insert    PRED[10:10] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 298,
  "example": {
    "sentence": "the odontocyte is a skeletogenic cell that is derived from odontogenic papilla . <EOS>",
    "target": "odontocyte := skeletogenic cell ^ E is derived . ( from odontogenic ) . <EOS>",
    "prediction": "odontocyte := skeletogenic cell ^ is <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2626, 296, 1532, 2254, 3311, 1465, 296, 5361, 5362, 3698, 5055, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 27, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 6,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['derived']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['from']",
      "insert    PRED[5:5] -> TAR[11:12] [] -> ['odontogenic']",
      "insert    PRED[5:5] -> TAR[12:13] [] -> [')']",
      "insert    PRED[5:5] -> TAR[13:14] [] -> ['.']"
    ]
  }
}


{
  "_ID": 313,
  "example": {
    "sentence": "cross blade screwdriver are a type of screwdriver that have cross blade . <EOS>",
    "target": "have have screwdriver := screwdriver ^ E that have have . ( <EOS>",
    "prediction": "have have := type of screwdriver screwdriver ^ E that . ( have have ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1420, 4716, 4051, 3728, 1532, 5373, 2995, 4051, 1465, 5360, 1420, 4716, 1710, 0]",
    "target_idx": "[28, 28, 26, 7, 26, 5, 13, 27, 28, 28, 16, 1, 0, 0, 0, 0, 0]",
    "prediction_idx": "[28, 28, 7, 24, 25, 26, 26, 5, 13, 27, 16, 1, 28, 28, 2, 16, 0]"
  },
  "accuracy": 0.294,
  "tokens_OK": 5,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] [':='] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['type'] -> []",
      "replace   PRED[4:5] -> TAR[2:3] ['of'] -> ['screwdriver']",
      "replace   PRED[5:6] -> TAR[3:4] ['screwdriver'] -> [':=']",
      "delete    PRED[10:11] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[11:12] -> TAR[7:7] ['('] -> []",
      "replace   PRED[14:15] -> TAR[10:11] [')'] -> ['.']",
      "replace   PRED[15:16] -> TAR[11:12] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 320,
  "example": {
    "sentence": "herbivore are exactly those animal that eat only plant or part of plant . <EOS>",
    "target": "herbivore := animal ^ A eat . ( plant U E part of . ( plant ) ) . <EOS>",
    "prediction": "herbivore := those animal ^ A eat . ( plant of plant U plant of plant ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4058, 3728, 4082, 5380, 5233, 1465, 2867, 3546, 526, 1048, 5371, 2995, 526, 1710, 0]",
    "target_idx": "[19, 7, 23, 5, 14, 25, 16, 1, 31, 6, 13, 29, 30, 16, 1, 31, 2, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 23, 5, 14, 25, 16, 1, 31, 30, 31, 6, 31, 30, 31, 2, 16, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 5,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['those'] -> []",
      "insert    PRED[9:9] -> TAR[9:10] [] -> ['U']",
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['E']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['part']",
      "replace   PRED[11:12] -> TAR[13:14] ['plant'] -> ['.']",
      "replace   PRED[12:13] -> TAR[14:15] ['U'] -> ['(']",
      "delete    PRED[14:15] -> TAR[15:15] ['of'] -> []",
      "replace   PRED[15:16] -> TAR[16:17] ['plant'] -> [')']"
    ]
  }
}


{
  "_ID": 321,
  "example": {
    "sentence": "a crowd is a major gathering of people that can disrupt traffic . <EOS>",
    "target": "crowd := a major gathering of ^ >= <EOS>",
    "prediction": "crowd := a major gathering of ^ E that . ( can disrupt ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3164, 296, 1532, 4075, 3346, 2995, 2095, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 25, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 25, 5, 13, 27, 16, 1, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 8,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[7:8] -> TAR[6:6] ['E'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['that'] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['('] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['can'] -> []",
      "delete    PRED[12:13] -> TAR[6:6] ['disrupt'] -> []",
      "delete    PRED[13:14] -> TAR[6:6] [')'] -> []",
      "replace   PRED[14:15] -> TAR[7:8] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 336,
  "example": {
    "sentence": "tiger are a type of large feline that have black stripe . <EOS>",
    "target": "tiger := large feline ^ E have black stripe . ( <EOS>",
    "prediction": "tiger := type of large feline ^ E have . ( black black black stripe ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4809, 3728, 1532, 5373, 2995, 1650, 887, 1465, 5360, 5296, 2417, 1710, 0]",
    "target_idx": "[19, 7, 24, 25, 5, 13, 27, 28, 29, 16, 1, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 7, 22, 23, 24, 25, 5, 13, 27, 16, 1, 28, 28, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.278,
  "tokens_OK": 5,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['type'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['of'] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['('] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['black'] -> []",
      "delete    PRED[12:13] -> TAR[6:6] ['black'] -> []",
      "replace   PRED[15:16] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[16:17] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 349,
  "example": {
    "sentence": "any pizza that have at least NUM meat topping is a meaty pizza . <EOS>",
    "target": "meaty pizza := pizza ^ >= a have topping . ( meat topping ) . <EOS>",
    "prediction": "pizza := >= NUM have . ( meat topping ^ meaty pizza ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2133, 2430, 1465, 5360, 2305, 4025, 2, 2605, 1154, 296, 1532, 3850, 2430, 1710, 0]",
    "target_idx": "[30, 31, 7, 31, 5, 12, 29, 22, 27, 16, 1, 26, 27, 2, 16, 0]",
    "prediction_idx": "[31, 7, 12, 25, 22, 16, 1, 26, 27, 5, 30, 31, 2, 16, 0, 0]"
  },
  "accuracy": 0.125,
  "tokens_OK": 2,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['meaty']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['pizza']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['^']",
      "replace   PRED[3:4] -> TAR[6:7] ['NUM'] -> ['a']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['topping']",
      "delete    PRED[9:10] -> TAR[12:12] ['^'] -> []",
      "delete    PRED[10:11] -> TAR[12:12] ['meaty'] -> []",
      "delete    PRED[11:12] -> TAR[12:12] ['pizza'] -> []"
    ]
  }
}


{
  "_ID": 378,
  "example": {
    "sentence": "a spicy pizza is any pizza that have a topping that is spicy . <EOS>",
    "target": "a pizza := any pizza ^ E that have . ( a have ) . <EOS>",
    "prediction": "a pizza := pizza ^ a . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 611, 2430, 296, 2133, 2430, 1465, 5360, 1532, 1154, 1465, 296, 611, 1710, 0]",
    "target_idx": "[27, 24, 7, 23, 24, 5, 13, 25, 26, 16, 1, 27, 26, 2, 16, 0]",
    "prediction_idx": "[27, 24, 7, 24, 5, 27, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 4,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['any']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['that']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['have']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[12:13] [] -> ['have']",
      "insert    PRED[5:5] -> TAR[13:14] [] -> [')']"
    ]
  }
}


{
  "_ID": 390,
  "example": {
    "sentence": "the odontoblast is a skeletogenic cell that secretes dentine matrix , is derived from the odontogenic papilla , and develop from a preodontoblast cell . <EOS>",
    "target": "odontoblast := skeletogenic and ^ E secretes . ( dentine matrix ) ^ E is , . ( from the ) ^ E papilla , . ( , and ) . <EOS>",
    "prediction": "odontoblast := skeletogenic and ^ E secretes . ( dentine matrix ) ^ E secretes . ( is , the ) ^ E secretes . ( papilla , ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 889, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 2317, 296, 5361, 5362, 1496, 3698, 5055, 2317, 2258, 3102, 5362, 1532, 381, 3311, 1710, 0]",
    "target_idx": "[20, 7, 23, 37, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 30, 36, 16, 1, 32, 33, 2, 5, 13, 35, 36, 16, 1, 36, 37, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 37, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 26, 16, 1, 30, 36, 33, 2, 5, 13, 26, 16, 1, 35, 36, 2, 16, 0, 0]"
  },
  "accuracy": 0.625,
  "tokens_OK": 20,
  "tokens_tot": 32,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "insert    PRED[13:13] -> TAR[14:15] [] -> ['is']",
      "replace   PRED[14:15] -> TAR[15:16] ['secretes'] -> [',']",
      "delete    PRED[17:18] -> TAR[17:17] ['is'] -> []",
      "replace   PRED[18:19] -> TAR[18:19] [','] -> ['from']",
      "insert    PRED[22:22] -> TAR[23:24] [] -> ['papilla']",
      "replace   PRED[23:24] -> TAR[24:25] ['secretes'] -> [',']",
      "replace   PRED[26:27] -> TAR[27:28] ['papilla'] -> [',']",
      "replace   PRED[27:28] -> TAR[28:29] [','] -> ['and']"
    ]
  }
}


{
  "_ID": 420,
  "example": {
    "sentence": "a gonochoristic organism is a multi-cellular organism that have male and female sex . <EOS>",
    "target": "gonochoristic multi-cellular := a multi-cellular ^ E organism and . ( that and ) ^ E organism and . ( male and ) . <EOS>",
    "prediction": "gonochoristic multi-cellular := a multi-cellular multi-cellular ^ E organism . ( that and ^ male and ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 567, 4122, 296, 1532, 1946, 4122, 1465, 5360, 4420, 2258, 123, 5155, 1710, 0]",
    "target_idx": "[20, 24, 7, 23, 24, 5, 13, 25, 29, 16, 1, 26, 29, 2, 5, 13, 25, 29, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 23, 24, 24, 5, 13, 25, 16, 1, 26, 29, 5, 28, 29, 2, 16, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 10,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 8,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['multi-cellular'] -> []",
      "insert    PRED[8:8] -> TAR[8:9] [] -> ['and']",
      "insert    PRED[12:12] -> TAR[13:14] [] -> [')']",
      "insert    PRED[13:13] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[13:13] -> TAR[16:17] [] -> ['organism']",
      "insert    PRED[13:13] -> TAR[17:18] [] -> ['and']",
      "insert    PRED[13:13] -> TAR[18:19] [] -> ['.']",
      "insert    PRED[13:13] -> TAR[19:20] [] -> ['(']"
    ]
  }
}


{
  "_ID": 36,
  "example": {
    "sentence": "mud slide may obstruct transport infrastructure . <EOS>",
    "target": "mud := >= <EOS>",
    "prediction": "mud slide := E may . ( transport infrastructure ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[417, 497, 1126, 2754, 2910, 3351, 1710, 0]",
    "target_idx": "[19, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 13, 21, 16, 1, 23, 24, 2, 16, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['slide'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[1:1] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[1:1] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[1:1] ['('] -> []",
      "delete    PRED[7:8] -> TAR[1:1] ['transport'] -> []",
      "delete    PRED[8:9] -> TAR[1:1] ['infrastructure'] -> []",
      "delete    PRED[9:10] -> TAR[1:1] [')'] -> []",
      "replace   PRED[10:11] -> TAR[2:3] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 119,
  "example": {
    "sentence": "saw can cut wood . <EOS>",
    "target": "saw := >= <EOS>",
    "prediction": "saw can := E cut . ( wood wood ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[307, 5363, 3410, 1213, 1710, 0]",
    "target_idx": "[19, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 7, 13, 21, 16, 1, 22, 22, 2, 16, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['can'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[1:1] ['cut'] -> []",
      "delete    PRED[5:6] -> TAR[1:1] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[1:1] ['('] -> []",
      "delete    PRED[7:8] -> TAR[1:1] ['wood'] -> []",
      "delete    PRED[8:9] -> TAR[1:1] ['wood'] -> []",
      "delete    PRED[9:10] -> TAR[1:1] [')'] -> []",
      "replace   PRED[10:11] -> TAR[2:3] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 134,
  "example": {
    "sentence": "a concert is an event that can disrupt traffic . <EOS>",
    "target": "concert := event ^ >= <EOS>",
    "prediction": "concert := an event ^ E can . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3168, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 23, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 5, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.214,
  "tokens_OK": 3,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['an'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['can'] -> []",
      "delete    PRED[7:8] -> TAR[3:3] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[3:3] ['('] -> []",
      "delete    PRED[9:10] -> TAR[3:3] ['disrupt'] -> []",
      "delete    PRED[10:11] -> TAR[3:3] ['traffic'] -> []",
      "delete    PRED[11:12] -> TAR[3:3] [')'] -> []",
      "replace   PRED[12:13] -> TAR[4:5] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 145,
  "example": {
    "sentence": "a boat show is something which can disrupt traffic . <EOS>",
    "target": "boat show := >= <EOS>",
    "prediction": "boat show := E which . ( can disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 537, 1588, 296, 1307, 4518, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 13, 24, 16, 1, 25, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.308,
  "tokens_OK": 4,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['which'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['('] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['can'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['disrupt'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[10:11] -> TAR[2:2] [')'] -> []",
      "replace   PRED[11:12] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 215,
  "example": {
    "sentence": "herd of animal on the infrastructure may disrupt traffic . <EOS>",
    "target": "herd of animal on infrastructure := >= <EOS>",
    "prediction": "herd of animal infrastructure := E may . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4055, 2995, 5233, 5379, 1496, 3351, 1126, 1876, 2176, 1710, 0]",
    "target_idx": "[19, 20, 21, 22, 24, 7, 12, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 21, 24, 7, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.286,
  "tokens_OK": 4,
  "tokens_tot": 14,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['on']",
      "delete    PRED[5:6] -> TAR[5:5] ['E'] -> []",
      "delete    PRED[6:7] -> TAR[5:5] ['may'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['('] -> []",
      "delete    PRED[9:10] -> TAR[5:5] ['disrupt'] -> []",
      "delete    PRED[10:11] -> TAR[5:5] ['traffic'] -> []",
      "delete    PRED[11:12] -> TAR[5:5] [')'] -> []",
      "replace   PRED[12:13] -> TAR[6:7] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 218,
  "example": {
    "sentence": "a damaged crash barrier may cause traffic disruption . <EOS>",
    "target": "damaged crash := >= <EOS>",
    "prediction": "damaged crash barrier := E may . ( cause traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 485, 1416, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 13, 23, 16, 1, 24, 25, 2, 16, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['barrier'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['may'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['('] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['cause'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[10:11] -> TAR[2:2] [')'] -> []",
      "replace   PRED[11:12] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 221,
  "example": {
    "sentence": "a damaged road surface may cause traffic disruption . <EOS>",
    "target": "damaged road := >= <EOS>",
    "prediction": "damaged road surface := E may . ( cause traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5139, 5178, 3458, 1126, 875, 2176, 2074, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 13, 23, 16, 1, 24, 25, 2, 16, 0]"
  },
  "accuracy": 0.231,
  "tokens_OK": 3,
  "tokens_tot": 13,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[2:3] -> TAR[1:1] ['surface'] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['may'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['('] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['cause'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] ['traffic'] -> []",
      "delete    PRED[10:11] -> TAR[2:2] [')'] -> []",
      "replace   PRED[11:12] -> TAR[3:4] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 247,
  "example": {
    "sentence": "animal on the infrastructure may disrupt traffic . <EOS>",
    "target": "animal on infrastructure := >= <EOS>",
    "prediction": "animal infrastructure := E may . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5233, 5379, 1496, 3351, 1126, 1876, 2176, 1710, 0]",
    "target_idx": "[19, 20, 22, 7, 12, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 22, 7, 13, 23, 16, 1, 24, 25, 2, 16, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['on']",
      "delete    PRED[3:4] -> TAR[3:3] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[3:3] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[3:3] ['('] -> []",
      "delete    PRED[7:8] -> TAR[3:3] ['disrupt'] -> []",
      "delete    PRED[8:9] -> TAR[3:3] ['traffic'] -> []",
      "delete    PRED[9:10] -> TAR[3:3] [')'] -> []",
      "replace   PRED[10:11] -> TAR[4:5] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 261,
  "example": {
    "sentence": "a juvenile is a young fish or animal that have not <UNK>@11 sexual maturity . <EOS>",
    "target": "juvenile := ( a young U a or ) ^ ! E that <EOS>",
    "prediction": "juvenile := a young U ! E ( that ^ or ) . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1998, 296, 1532, 3413, 4435, 1048, 5233, 1465, 5360, 2015, 1, 5260, 3631, 1710, 0]",
    "target_idx": "[20, 7, 1, 22, 23, 6, 22, 25, 2, 5, 15, 13, 27, 0, 0]",
    "prediction_idx": "[20, 7, 22, 23, 6, 15, 13, 1, 27, 5, 25, 2, 16, 1, 0]"
  },
  "accuracy": 0.267,
  "tokens_OK": 4,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "delete    PRED[5:6] -> TAR[5:5] ['!'] -> []",
      "replace   PRED[6:7] -> TAR[6:7] ['E'] -> ['a']",
      "replace   PRED[7:8] -> TAR[7:8] ['('] -> ['or']",
      "replace   PRED[8:9] -> TAR[8:9] ['that'] -> [')']",
      "delete    PRED[10:11] -> TAR[9:9] ['or'] -> []",
      "replace   PRED[11:12] -> TAR[10:11] [')'] -> ['!']",
      "replace   PRED[12:13] -> TAR[11:12] ['.'] -> ['E']",
      "replace   PRED[13:14] -> TAR[12:13] ['('] -> ['that']"
    ]
  }
}


{
  "_ID": 268,
  "example": {
    "sentence": "a male organism is a gonochoristic organism that can produce male gamete . <EOS>",
    "target": "can gonochoristic := a gonochoristic ^ >= <EOS>",
    "prediction": "can gonochoristic := a gonochoristic ^ E organism . ( that can can ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4420, 4122, 296, 1532, 567, 4122, 1465, 5363, 4253, 4420, 3751, 1710, 0]",
    "target_idx": "[27, 24, 7, 23, 24, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[27, 24, 7, 23, 24, 5, 13, 25, 16, 1, 26, 27, 27, 2, 16, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[6:7] -> TAR[5:5] ['E'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['organism'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[5:5] ['('] -> []",
      "delete    PRED[10:11] -> TAR[5:5] ['that'] -> []",
      "delete    PRED[11:12] -> TAR[5:5] ['can'] -> []",
      "delete    PRED[12:13] -> TAR[5:5] ['can'] -> []",
      "delete    PRED[13:14] -> TAR[5:5] [')'] -> []",
      "replace   PRED[14:15] -> TAR[6:7] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 277,
  "example": {
    "sentence": "a craniofacial skeleton is a cranial skeleton derived from neural crest cell . <EOS>",
    "target": "craniofacial cranial := a cranial ^ E cranial skeleton . ( derived from neural ) . <EOS>",
    "prediction": "craniofacial cranial := a cranial cranial skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3598, 4381, 296, 1532, 4495, 4381, 5361, 5362, 5343, 5025, 3311, 1710, 0]",
    "target_idx": "[20, 24, 7, 23, 24, 5, 13, 24, 25, 16, 1, 26, 27, 28, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 23, 24, 24, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.353,
  "tokens_OK": 6,
  "tokens_tot": 17,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['derived']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> ['from']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['neural']",
      "insert    PRED[6:6] -> TAR[14:15] [] -> [')']",
      "insert    PRED[6:6] -> TAR[15:16] [] -> ['.']"
    ]
  }
}


{
  "_ID": 297,
  "example": {
    "sentence": "a bycicle is a mean of transportation that is powered only by the human power . <EOS>",
    "target": "bycicle := a mean of ^ A that powered . ( by the ) . <EOS>",
    "prediction": "bycicle := a mean of ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3326, 296, 1532, 3357, 2995, 1839, 1465, 296, 5372, 3546, 5367, 1496, 3766, 4964, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 5, 14, 26, 28, 16, 1, 30, 31, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['A']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['that']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['powered']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[11:12] [] -> ['by']",
      "insert    PRED[5:5] -> TAR[12:13] [] -> ['the']",
      "insert    PRED[5:5] -> TAR[13:14] [] -> [')']",
      "insert    PRED[5:5] -> TAR[14:15] [] -> ['.']"
    ]
  }
}


{
  "_ID": 299,
  "example": {
    "sentence": "all bycicle are mean of transportation that are powered only by the human power . <EOS>",
    "target": "bycicle := mean of transportation ^ A are only . ( the human ) . <EOS>",
    "prediction": "bycicle := mean of transportation ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3633, 3326, 3728, 3357, 2995, 1839, 1465, 3728, 5372, 3546, 5367, 1496, 3766, 4964, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 24, 5, 14, 26, 28, 16, 1, 30, 31, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 23, 24, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['A']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['are']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['only']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[11:12] [] -> ['the']",
      "insert    PRED[5:5] -> TAR[12:13] [] -> ['human']",
      "insert    PRED[5:5] -> TAR[13:14] [] -> [')']",
      "insert    PRED[5:5] -> TAR[14:15] [] -> ['.']"
    ]
  }
}


{
  "_ID": 334,
  "example": {
    "sentence": "bycicle are mean of transportation that are powered only by human power . <EOS>",
    "target": "bycicle := mean of transportation ^ A are only . ( by human ) . <EOS>",
    "prediction": "bycicle := mean of transportation ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[3326, 3728, 3357, 2995, 1839, 1465, 3728, 5372, 3546, 5367, 3766, 4964, 1710, 0]",
    "target_idx": "[19, 7, 21, 22, 23, 5, 14, 25, 27, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[19, 7, 21, 22, 23, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.438,
  "tokens_OK": 7,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['A']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['are']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['only']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[11:12] [] -> ['by']",
      "insert    PRED[5:5] -> TAR[12:13] [] -> ['human']",
      "insert    PRED[5:5] -> TAR[13:14] [] -> [')']",
      "insert    PRED[5:5] -> TAR[14:15] [] -> ['.']"
    ]
  }
}


{
  "_ID": 337,
  "example": {
    "sentence": "a football match is an event that can disrupt traffic . . <EOS>",
    "target": "football match := event ^ >= <EOS>",
    "prediction": "football match := an event ^ E can . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4711, 5340, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.267,
  "tokens_OK": 4,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['an'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['E'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['can'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[4:4] ['('] -> []",
      "delete    PRED[10:11] -> TAR[4:4] ['disrupt'] -> []",
      "delete    PRED[11:12] -> TAR[4:4] ['traffic'] -> []",
      "delete    PRED[12:13] -> TAR[4:4] [')'] -> []",
      "replace   PRED[13:14] -> TAR[5:6] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 353,
  "example": {
    "sentence": "a water sport meeting is an event that can disrupt traffic . <EOS>",
    "target": "water sport meeting := event ^ >= <EOS>",
    "prediction": "water sport meeting := an event ^ E can . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 226, 3918, 1370, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 24, 25, 5, 13, 27, 16, 1, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['an'] -> []",
      "delete    PRED[7:8] -> TAR[5:5] ['E'] -> []",
      "delete    PRED[8:9] -> TAR[5:5] ['can'] -> []",
      "delete    PRED[9:10] -> TAR[5:5] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[5:5] ['('] -> []",
      "delete    PRED[11:12] -> TAR[5:5] ['disrupt'] -> []",
      "delete    PRED[12:13] -> TAR[5:5] ['traffic'] -> []",
      "delete    PRED[13:14] -> TAR[5:5] [')'] -> []",
      "replace   PRED[14:15] -> TAR[6:7] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 357,
  "example": {
    "sentence": "a cultural event is an event that can disrupt traffic . <EOS>",
    "target": "cultural event := event ^ >= <EOS>",
    "prediction": "cultural event := an event ^ E that . ( can disrupt ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5120, 4512, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 24, 7, 23, 24, 5, 13, 25, 16, 1, 26, 27, 2, 16, 0]"
  },
  "accuracy": 0.267,
  "tokens_OK": 4,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['an'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['E'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['that'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[4:4] ['('] -> []",
      "delete    PRED[10:11] -> TAR[4:4] ['can'] -> []",
      "delete    PRED[11:12] -> TAR[4:4] ['disrupt'] -> []",
      "delete    PRED[12:13] -> TAR[4:4] [')'] -> []",
      "replace   PRED[13:14] -> TAR[5:6] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 381,
  "example": {
    "sentence": "a rugby match is an event that can disrupt traffic . <EOS>",
    "target": "rugby match := event ^ >= <EOS>",
    "prediction": "rugby match := an event ^ E can . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2081, 5340, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 16, 0]"
  },
  "accuracy": 0.267,
  "tokens_OK": 4,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] ['an'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['E'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['can'] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[4:4] ['('] -> []",
      "delete    PRED[10:11] -> TAR[4:4] ['disrupt'] -> []",
      "delete    PRED[11:12] -> TAR[4:4] ['traffic'] -> []",
      "delete    PRED[12:13] -> TAR[4:4] [')'] -> []",
      "replace   PRED[13:14] -> TAR[5:6] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 406,
  "example": {
    "sentence": "a real italian pizza is a type of pizza that must only have thin and crispy basis . <EOS>",
    "target": "real italian of := of ^ A must . ( only and ^ thin and ) . <EOS>",
    "prediction": "real italian of := a type of ^ A pizza . ( must only ) ^ A pizza . ( thin and ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3411, 2728, 2430, 296, 1532, 5373, 2995, 2430, 1465, 5391, 3546, 5360, 4782, 2258, 5121, 2472, 1710, 0]",
    "target_idx": "[20, 21, 26, 7, 26, 5, 14, 29, 16, 1, 30, 33, 5, 32, 33, 2, 16, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 26, 7, 24, 25, 26, 5, 14, 27, 16, 1, 29, 30, 2, 5, 14, 27, 16, 1, 32, 33, 2, 16, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 5,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 9,
    "diff_ops": [
      "delete    PRED[4:5] -> TAR[3:3] ['a'] -> []",
      "delete    PRED[5:6] -> TAR[3:3] ['type'] -> []",
      "replace   PRED[9:10] -> TAR[7:8] ['pizza'] -> ['must']",
      "delete    PRED[12:13] -> TAR[9:9] ['must'] -> []",
      "replace   PRED[14:15] -> TAR[11:12] [')'] -> ['and']",
      "delete    PRED[16:17] -> TAR[12:12] ['A'] -> []",
      "delete    PRED[17:18] -> TAR[12:12] ['pizza'] -> []",
      "delete    PRED[18:19] -> TAR[12:12] ['.'] -> []",
      "delete    PRED[19:20] -> TAR[12:12] ['('] -> []"
    ]
  }
}


{
  "_ID": 150,
  "example": {
    "sentence": "a tetraploid is cell or organism have NUM set of chromosome . <EOS>",
    "target": "tetraploid := ( cell U organism ) ^ = NUM have chromosome . ( set ) . <EOS>",
    "prediction": "tetraploid := cell U organism set of chromosome . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3421, 296, 3311, 1048, 4122, 5360, 2, 1238, 2995, 3493, 1710, 0]",
    "target_idx": "[20, 7, 1, 22, 6, 24, 2, 5, 8, 26, 25, 29, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 6, 24, 27, 28, 29, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 3,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> [')']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['=']",
      "replace   PRED[5:6] -> TAR[9:10] ['set'] -> ['NUM']",
      "replace   PRED[6:7] -> TAR[10:11] ['of'] -> ['have']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['set']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> [')']"
    ]
  }
}


{
  "_ID": 157,
  "example": {
    "sentence": "the male lion have at least NUM female mate . <EOS>",
    "target": "male lion := >= NUM have female mate . ( <EOS>",
    "prediction": "<EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4420, 232, 5360, 2305, 4025, 2, 123, 5315, 1710, 0]",
    "target_idx": "[20, 21, 7, 12, 25, 22, 26, 27, 16, 1, 0]",
    "prediction_idx": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.091,
  "tokens_OK": 1,
  "tokens_tot": 11,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['male']",
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['lion']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> [':=']",
      "insert    PRED[0:0] -> TAR[3:4] [] -> ['>=']",
      "insert    PRED[0:0] -> TAR[4:5] [] -> ['NUM']",
      "insert    PRED[0:0] -> TAR[5:6] [] -> ['have']",
      "insert    PRED[0:0] -> TAR[6:7] [] -> ['female']",
      "insert    PRED[0:0] -> TAR[7:8] [] -> ['mate']",
      "insert    PRED[0:0] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[9:10] [] -> ['(']"
    ]
  }
}


{
  "_ID": 236,
  "example": {
    "sentence": "large animal on the infrastructure may disrupt traffic . <EOS>",
    "target": "large animal on infrastructure := >= <EOS>",
    "prediction": "large infrastructure := E may . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1650, 5233, 5379, 1496, 3351, 1126, 1876, 2176, 1710, 0]",
    "target_idx": "[19, 20, 21, 23, 7, 12, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 23, 7, 13, 24, 16, 1, 25, 26, 2, 16, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 2,
  "tokens_tot": 12,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "delete    PRED[1:2] -> TAR[0:0] ['infrastructure'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] [':='] -> []",
      "delete    PRED[3:4] -> TAR[0:0] ['E'] -> []",
      "delete    PRED[4:5] -> TAR[0:0] ['may'] -> []",
      "delete    PRED[5:6] -> TAR[0:0] ['.'] -> []",
      "replace   PRED[6:7] -> TAR[1:2] ['('] -> ['animal']",
      "replace   PRED[7:8] -> TAR[2:3] ['disrupt'] -> ['on']",
      "replace   PRED[8:9] -> TAR[3:4] ['traffic'] -> ['infrastructure']",
      "replace   PRED[9:10] -> TAR[4:5] [')'] -> [':=']",
      "replace   PRED[10:11] -> TAR[5:6] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 296,
  "example": {
    "sentence": "a rock dassie is a animal that eat grass and broad-leafed plant . <EOS>",
    "target": "rock dassie := a ^ E that . ( eat ) ^ E that . ( and broad-leafed ) . <EOS>",
    "prediction": "rock dassie := a ^ E ( that ^ and ) . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5013, 3888, 296, 1532, 5233, 1465, 2867, 2256, 2258, 3508, 526, 1710, 0]",
    "target_idx": "[20, 21, 7, 23, 5, 13, 25, 16, 1, 26, 2, 5, 13, 25, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 21, 7, 23, 5, 13, 1, 25, 5, 28, 2, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.381,
  "tokens_OK": 8,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[5:5] -> TAR[6:7] [] -> ['that']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['eat']",
      "replace   PRED[7:8] -> TAR[10:11] ['that'] -> [')']",
      "replace   PRED[9:10] -> TAR[12:13] ['and'] -> ['E']",
      "replace   PRED[10:11] -> TAR[13:14] [')'] -> ['that']",
      "insert    PRED[12:12] -> TAR[16:17] [] -> ['and']",
      "insert    PRED[12:12] -> TAR[17:18] [] -> ['broad-leafed']",
      "insert    PRED[12:12] -> TAR[18:19] [] -> [')']",
      "insert    PRED[12:12] -> TAR[19:20] [] -> ['.']"
    ]
  }
}


{
  "_ID": 330,
  "example": {
    "sentence": "a motor sport race meeting is an event that can disrupt traffic . <EOS>",
    "target": "motor sport race meeting := event ^ >= <EOS>",
    "prediction": "motor sport meeting := an event ^ E can . ( disrupt traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1867, 3918, 839, 1370, 296, 5374, 4512, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 22, 23, 7, 26, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 23, 7, 25, 26, 5, 13, 28, 16, 1, 29, 30, 2, 16, 0]"
  },
  "accuracy": 0.312,
  "tokens_OK": 5,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['race']",
      "delete    PRED[4:5] -> TAR[4:4] ['an'] -> []",
      "delete    PRED[7:8] -> TAR[6:6] ['E'] -> []",
      "delete    PRED[8:9] -> TAR[6:6] ['can'] -> []",
      "delete    PRED[9:10] -> TAR[6:6] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[6:6] ['('] -> []",
      "delete    PRED[11:12] -> TAR[6:6] ['disrupt'] -> []",
      "delete    PRED[12:13] -> TAR[6:6] ['traffic'] -> []",
      "delete    PRED[13:14] -> TAR[6:6] [')'] -> []",
      "replace   PRED[14:15] -> TAR[7:8] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 350,
  "example": {
    "sentence": "a vegetarian pizza is any pizza that only have vegetarian topping or no topping . <EOS>",
    "target": "have pizza := pizza ^ E only or . ( have or ) U ! E only or . ( <EOS>",
    "prediction": "have pizza := pizza ^ A only . ( have have have or U or ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 496, 2430, 296, 2133, 2430, 1465, 3546, 5360, 496, 1154, 1048, 3710, 1154, 1710, 0]",
    "target_idx": "[27, 24, 7, 24, 5, 13, 26, 30, 16, 1, 27, 30, 2, 6, 15, 13, 26, 30, 16, 1, 0]",
    "prediction_idx": "[27, 24, 7, 24, 5, 14, 26, 16, 1, 27, 27, 27, 30, 6, 30, 2, 16, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 9,
  "tokens_tot": 21,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "replace   PRED[5:6] -> TAR[5:6] ['A'] -> ['E']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['or']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['or']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> [')']",
      "replace   PRED[10:11] -> TAR[13:14] ['have'] -> ['U']",
      "replace   PRED[11:12] -> TAR[14:15] ['have'] -> ['!']",
      "replace   PRED[12:13] -> TAR[15:16] ['or'] -> ['E']",
      "replace   PRED[13:14] -> TAR[16:17] ['U'] -> ['only']",
      "replace   PRED[15:16] -> TAR[18:19] [')'] -> ['.']",
      "replace   PRED[16:17] -> TAR[19:20] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 407,
  "example": {
    "sentence": "a cellular bone tissue is a mineralized bone tissue that always include non-terminally differentiated osteoblast and osteocyte . <EOS>",
    "target": "cellular mineralized mineralized := a mineralized mineralized ^ E tissue . ( that always include U differentiated ) . <EOS>",
    "prediction": "cellular mineralized mineralized := a mineralized mineralized ^ E <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2112, 432, 3846, 296, 1532, 4878, 432, 3846, 1465, 5392, 3459, 5389, 2457, 933, 2258, 4758, 1710, 0]",
    "target_idx": "[20, 25, 25, 7, 24, 25, 25, 5, 13, 27, 16, 1, 28, 29, 30, 6, 32, 2, 16, 0]",
    "prediction_idx": "[20, 25, 25, 7, 24, 25, 25, 5, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.5,
  "tokens_OK": 10,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 10,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['tissue']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['that']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['always']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['include']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> ['U']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> ['differentiated']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> [')']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['.']"
    ]
  }
}


{
  "_ID": 283,
  "example": {
    "sentence": "an air show or other areonautical event is something that can disrupt traffic . <EOS>",
    "target": "air show U areonautical event := >= <EOS>",
    "prediction": "an show := E ( show U other ) . ( areonautical event ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 1734, 1588, 1048, 5342, 1777, 4512, 296, 1307, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 6, 24, 25, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 21, 7, 13, 1, 21, 6, 23, 2, 16, 1, 24, 25, 2, 16, 0]"
  },
  "accuracy": 0.125,
  "tokens_OK": 2,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['an'] -> []",
      "delete    PRED[1:2] -> TAR[0:0] ['show'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] [':='] -> []",
      "delete    PRED[3:4] -> TAR[0:0] ['E'] -> []",
      "replace   PRED[4:5] -> TAR[0:1] ['('] -> ['air']",
      "delete    PRED[7:8] -> TAR[2:2] ['other'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] [')'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[10:11] -> TAR[2:2] ['('] -> []",
      "replace   PRED[13:14] -> TAR[5:6] [')'] -> [':=']",
      "replace   PRED[14:15] -> TAR[6:7] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 302,
  "example": {
    "sentence": "the oropharyngeal papilla is an odontogenic papilla located along the jaw or pharyngeal skeleton . <EOS>",
    "target": "oropharyngeal papilla := odontogenic papilla ^ E papilla located . ( along U jaw or ) . <EOS>",
    "prediction": "oropharyngeal papilla := odontogenic papilla papilla <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3126, 5055, 296, 5374, 3698, 5055, 3886, 5382, 1496, 901, 1048, 3919, 4381, 1710, 0]",
    "target_idx": "[20, 25, 7, 24, 25, 5, 13, 25, 26, 16, 1, 27, 6, 29, 30, 2, 16, 0]",
    "prediction_idx": "[20, 25, 7, 24, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.333,
  "tokens_OK": 6,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['located']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[11:12] [] -> ['along']",
      "insert    PRED[5:5] -> TAR[12:13] [] -> ['U']",
      "insert    PRED[5:5] -> TAR[13:14] [] -> ['jaw']",
      "insert    PRED[5:5] -> TAR[14:15] [] -> ['or']",
      "insert    PRED[5:5] -> TAR[15:16] [] -> [')']",
      "insert    PRED[5:5] -> TAR[16:17] [] -> ['.']"
    ]
  }
}


{
  "_ID": 303,
  "example": {
    "sentence": "an exhibition is a major display or trade show that can disrupt traffic . <EOS>",
    "target": "exhibition := ( major display U major trade show ) ^ >= disrupt . ( traffic ) . <EOS>",
    "prediction": "exhibition := major display U trade . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 3397, 296, 1532, 4075, 924, 1048, 4615, 1588, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 7, 1, 23, 24, 6, 23, 26, 27, 2, 5, 12, 30, 16, 1, 31, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 6, 26, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.158,
  "tokens_OK": 3,
  "tokens_tot": 19,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['major']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['show']",
      "insert    PRED[5:5] -> TAR[9:10] [] -> [')']",
      "insert    PRED[5:5] -> TAR[10:11] [] -> ['^']",
      "insert    PRED[5:5] -> TAR[11:12] [] -> ['>=']",
      "insert    PRED[5:5] -> TAR[12:13] [] -> ['disrupt']",
      "insert    PRED[5:5] -> TAR[13:14] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[14:15] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[15:16] [] -> ['traffic']",
      "insert    PRED[5:5] -> TAR[16:17] [] -> [')']"
    ]
  }
}


{
  "_ID": 347,
  "example": {
    "sentence": "a sensor is any entity that can follow a <UNK>@9 sing method . <EOS>",
    "target": "sensor := any entity ^ >= <EOS>",
    "prediction": "sensor := entity ^ E can . ( follow sing <UNK>@9 sing ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2913, 296, 2133, 4556, 1465, 5363, 4922, 1532, 1, 4076, 271, 1710, 0]",
    "target_idx": "[20, 7, 22, 23, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 7, 23, 5, 13, 25, 16, 1, 26, 29, 28, 29, 2, 16, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 3,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['any']",
      "delete    PRED[4:5] -> TAR[4:4] ['E'] -> []",
      "delete    PRED[5:6] -> TAR[4:4] ['can'] -> []",
      "delete    PRED[6:7] -> TAR[4:4] ['.'] -> []",
      "delete    PRED[7:8] -> TAR[4:4] ['('] -> []",
      "delete    PRED[8:9] -> TAR[4:4] ['follow'] -> []",
      "delete    PRED[9:10] -> TAR[4:4] ['sing'] -> []",
      "delete    PRED[10:11] -> TAR[4:4] ['<UNK>@9'] -> []",
      "delete    PRED[11:12] -> TAR[4:4] ['sing'] -> []",
      "delete    PRED[12:13] -> TAR[4:4] [')'] -> []",
      "replace   PRED[13:14] -> TAR[5:6] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 362,
  "example": {
    "sentence": "any pizza that have at least NUM topping is an interesting pizza . <EOS>",
    "target": "interesting pizza := pizza ^ >= NUM have topping . ( <EOS>",
    "prediction": "pizza := >= NUM have . ( topping topping ^ interesting pizza ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[2133, 2430, 1465, 5360, 2305, 4025, 2, 1154, 296, 5374, 2812, 2430, 1710, 0]",
    "target_idx": "[29, 30, 7, 30, 5, 12, 25, 22, 26, 16, 1, 0, 0, 0, 0]",
    "prediction_idx": "[30, 7, 12, 25, 22, 16, 1, 26, 26, 5, 29, 30, 2, 16, 0]"
  },
  "accuracy": 0.133,
  "tokens_OK": 2,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['interesting']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['pizza']",
      "insert    PRED[1:1] -> TAR[4:5] [] -> ['^']",
      "delete    PRED[5:6] -> TAR[7:7] ['.'] -> []",
      "delete    PRED[6:7] -> TAR[7:7] ['('] -> []",
      "delete    PRED[7:8] -> TAR[7:7] ['topping'] -> []",
      "delete    PRED[9:10] -> TAR[8:8] ['^'] -> []",
      "delete    PRED[10:11] -> TAR[8:8] ['interesting'] -> []",
      "delete    PRED[11:12] -> TAR[8:8] ['pizza'] -> []",
      "replace   PRED[12:13] -> TAR[9:10] [')'] -> ['.']",
      "replace   PRED[13:14] -> TAR[10:11] ['.'] -> ['(']"
    ]
  }
}


{
  "_ID": 408,
  "example": {
    "sentence": "a datum collection by censoring is a datum collection that result in a collection of datum generated from an censoring . <EOS>",
    "target": "result that by collection := result that ^ E datum collection . ( that that . result ^ E result in . ( collection ) ) . <EOS>",
    "prediction": "result that collection := result that ^ E datum . ( that that that result ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 5367, 3970, 296, 1532, 5275, 2683, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 5370, 5362, 5374, 3970, 1710, 0]",
    "target_idx": "[29, 28, 22, 32, 7, 29, 28, 5, 13, 26, 27, 16, 1, 28, 28, 16, 29, 5, 13, 29, 30, 16, 1, 32, 2, 2, 16, 0]",
    "prediction_idx": "[29, 28, 32, 7, 29, 28, 5, 13, 26, 16, 1, 28, 28, 28, 29, 2, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.143,
  "tokens_OK": 4,
  "tokens_tot": 28,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['by']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['collection']",
      "insert    PRED[12:12] -> TAR[15:16] [] -> ['.']",
      "insert    PRED[12:12] -> TAR[16:17] [] -> ['result']",
      "insert    PRED[12:12] -> TAR[17:18] [] -> ['^']",
      "replace   PRED[13:14] -> TAR[18:19] ['that'] -> ['E']",
      "insert    PRED[14:14] -> TAR[20:21] [] -> ['in']",
      "insert    PRED[14:14] -> TAR[21:22] [] -> ['.']",
      "insert    PRED[14:14] -> TAR[22:23] [] -> ['(']",
      "insert    PRED[14:14] -> TAR[23:24] [] -> ['collection']",
      "insert    PRED[14:14] -> TAR[24:25] [] -> [')']"
    ]
  }
}


{
  "_ID": 412,
  "example": {
    "sentence": "a replacement element is a skeletal element that form <UNK>@9 a replacement or substitution of another element or tissue . <EOS>",
    "target": "form or := a form or ^ E element <EOS>",
    "prediction": "form or := a or ^ E element . ( form form U <UNK>@9 a or ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 4747, 1791, 296, 1532, 3051, 1791, 1465, 2845, 1, 1532, 4747, 1048, 543, 2995, 1692, 1791, 1048, 3846, 1710, 0]",
    "target_idx": "[27, 31, 7, 23, 27, 31, 5, 13, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[27, 31, 7, 23, 31, 5, 13, 25, 16, 1, 27, 27, 6, 28, 29, 31, 2, 16, 0]"
  },
  "accuracy": 0.263,
  "tokens_OK": 5,
  "tokens_tot": 19,
  "edit_distance": {
    "score": 11,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['form']",
      "delete    PRED[8:9] -> TAR[8:8] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[8:8] ['('] -> []",
      "delete    PRED[10:11] -> TAR[8:8] ['form'] -> []",
      "delete    PRED[11:12] -> TAR[8:8] ['form'] -> []",
      "delete    PRED[12:13] -> TAR[8:8] ['U'] -> []",
      "delete    PRED[13:14] -> TAR[8:8] ['<UNK>@9'] -> []",
      "delete    PRED[14:15] -> TAR[8:8] ['a'] -> []",
      "delete    PRED[15:16] -> TAR[8:8] ['or'] -> []",
      "delete    PRED[16:17] -> TAR[8:8] [')'] -> []",
      "delete    PRED[17:18] -> TAR[8:8] ['.'] -> []"
    ]
  }
}


{
  "_ID": 263,
  "example": {
    "sentence": "bycicle are a type of mean of transportation that are powered only by human power . <EOS>",
    "target": "bycicle := mean of of ^ A that powered . ( only by ) . <EOS>",
    "prediction": "bycicle := type of mean <EOS>"
  },
  "dump": {
    "sentence_idx": "[3326, 3728, 1532, 5373, 2995, 3357, 2995, 1839, 1465, 3728, 5372, 3546, 5367, 3766, 4964, 1710, 0]",
    "target_idx": "[19, 7, 24, 25, 25, 5, 14, 27, 29, 16, 1, 30, 31, 2, 16, 0]",
    "prediction_idx": "[19, 7, 22, 25, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 4,
  "tokens_tot": 16,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['mean']",
      "replace   PRED[2:3] -> TAR[3:4] ['type'] -> ['of']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['A']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['that']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> ['powered']",
      "insert    PRED[3:3] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[11:12] [] -> ['only']",
      "insert    PRED[3:3] -> TAR[12:13] [] -> ['by']",
      "insert    PRED[3:3] -> TAR[13:14] [] -> [')']",
      "replace   PRED[4:5] -> TAR[14:15] ['mean'] -> ['.']"
    ]
  }
}


{
  "_ID": 348,
  "example": {
    "sentence": "a school is a building or location that is used for instructional class . <EOS>",
    "target": "school := ( a U or ) ^ E that is . ( used for ) . <EOS>",
    "prediction": "school := a U that <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3514, 296, 1532, 4707, 1048, 267, 1465, 296, 3942, 5377, 4876, 5095, 1710, 0]",
    "target_idx": "[20, 7, 1, 22, 6, 24, 2, 5, 13, 26, 27, 16, 1, 28, 29, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 6, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.167,
  "tokens_OK": 3,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['or']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> [')']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['is']",
      "insert    PRED[4:4] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[13:14] [] -> ['used']",
      "insert    PRED[4:4] -> TAR[14:15] [] -> ['for']",
      "insert    PRED[4:4] -> TAR[15:16] [] -> [')']",
      "insert    PRED[4:4] -> TAR[16:17] [] -> ['.']"
    ]
  }
}


{
  "_ID": 373,
  "example": {
    "sentence": "tasty plant are plant eat both by herbivore and carnivore . <EOS>",
    "target": "tasty plant := plant ^ E plant both . ( by ) ^ E plant both . ( and ) . <EOS>",
    "prediction": "tasty plant := plant plant eat by ^ and . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1260, 526, 3728, 526, 2867, 3467, 5367, 4058, 2258, 3741, 1710, 0]",
    "target_idx": "[19, 22, 7, 22, 5, 13, 22, 24, 16, 1, 25, 2, 5, 13, 22, 24, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 22, 7, 22, 22, 23, 25, 5, 27, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.227,
  "tokens_OK": 5,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> ['both']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['.']",
      "replace   PRED[5:6] -> TAR[9:10] ['eat'] -> ['(']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> [')']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['plant']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['both']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> [')']"
    ]
  }
}


{
  "_ID": 398,
  "example": {
    "sentence": "a datum collection from experiment is a datum collection process that result in a collection of datum generated from an experiment . <EOS>",
    "target": "result that in a := result that ^ E collection process . ( that that . result ^ E result in . ( a ) ) . <EOS>",
    "prediction": "result that a a := result that a ^ E collection . ( that that that result ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 5362, 2461, 296, 1532, 5275, 2683, 1805, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 5370, 5362, 5374, 2461, 1710, 0]",
    "target_idx": "[30, 29, 31, 32, 7, 30, 29, 5, 13, 27, 28, 16, 1, 29, 29, 16, 30, 5, 13, 30, 31, 16, 1, 32, 2, 2, 16, 0]",
    "prediction_idx": "[30, 29, 32, 32, 7, 30, 29, 25, 5, 13, 27, 16, 1, 29, 29, 29, 30, 2, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.429,
  "tokens_OK": 12,
  "tokens_tot": 28,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "replace   PRED[2:3] -> TAR[2:3] ['a'] -> ['in']",
      "delete    PRED[7:8] -> TAR[6:6] ['a'] -> []",
      "insert    PRED[10:10] -> TAR[10:11] [] -> ['process']",
      "insert    PRED[14:14] -> TAR[15:16] [] -> ['.']",
      "insert    PRED[14:14] -> TAR[16:17] [] -> ['result']",
      "insert    PRED[14:14] -> TAR[17:18] [] -> ['^']",
      "replace   PRED[15:16] -> TAR[18:19] ['that'] -> ['E']",
      "insert    PRED[16:16] -> TAR[20:21] [] -> ['in']",
      "insert    PRED[16:16] -> TAR[21:22] [] -> ['.']",
      "insert    PRED[16:16] -> TAR[22:23] [] -> ['(']",
      "insert    PRED[16:16] -> TAR[23:24] [] -> ['a']",
      "insert    PRED[16:16] -> TAR[24:25] [] -> [')']"
    ]
  }
}


{
  "_ID": 418,
  "example": {
    "sentence": "an authority operation is an operation or activity initiate by the authority that can disrupt traffic . <EOS>",
    "target": "by an := ( an U operation ) ^ E or activity . ( by ) ^ >= <EOS>",
    "prediction": "an an := an an U operation or authority that . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 4509, 5183, 296, 5374, 5183, 1048, 2231, 966, 5367, 1496, 4509, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[28, 23, 7, 1, 23, 6, 24, 2, 5, 13, 25, 26, 16, 1, 28, 2, 5, 12, 0]",
    "prediction_idx": "[23, 23, 7, 23, 23, 6, 24, 25, 30, 31, 16, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.316,
  "tokens_OK": 6,
  "tokens_tot": 19,
  "edit_distance": {
    "score": 12,
    "diff_ops": [
      "replace   PRED[0:1] -> TAR[0:1] ['an'] -> ['by']",
      "replace   PRED[3:4] -> TAR[3:4] ['an'] -> ['(']",
      "insert    PRED[6:6] -> TAR[7:8] [] -> [')']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['activity']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['by']",
      "replace   PRED[8:9] -> TAR[15:16] ['authority'] -> [')']",
      "replace   PRED[9:10] -> TAR[16:17] ['that'] -> ['^']",
      "replace   PRED[10:11] -> TAR[17:18] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 394,
  "example": {
    "sentence": "the postcranial axial skeleton is a skeletal subdivision of the central body axis that includes vertebra , notochord , rib , and sternum . <EOS>",
    "target": "postcranial axial skeleton := skeletal subdivision of the central body ^ E that . ( includes U , U notochord U rib ) . <EOS>",
    "prediction": "postcranial axial skeleton := skeletal subdivision of the central ^ E <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 4117, 4722, 4381, 296, 1532, 3051, 5142, 2995, 1496, 780, 5126, 2107, 1465, 663, 4362, 2317, 595, 2317, 1983, 2317, 2258, 218, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 25, 26, 27, 28, 29, 30, 5, 13, 32, 16, 1, 33, 6, 35, 6, 36, 6, 38, 2, 16, 0]",
    "prediction_idx": "[20, 21, 22, 7, 25, 26, 27, 28, 29, 5, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.4,
  "tokens_OK": 10,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['body']",
      "insert    PRED[10:10] -> TAR[12:13] [] -> ['that']",
      "insert    PRED[10:10] -> TAR[13:14] [] -> ['.']",
      "insert    PRED[10:10] -> TAR[14:15] [] -> ['(']",
      "insert    PRED[10:10] -> TAR[15:16] [] -> ['includes']",
      "insert    PRED[10:10] -> TAR[16:17] [] -> ['U']",
      "insert    PRED[10:10] -> TAR[17:18] [] -> [',']",
      "insert    PRED[10:10] -> TAR[18:19] [] -> ['U']",
      "insert    PRED[10:10] -> TAR[19:20] [] -> ['notochord']",
      "insert    PRED[10:10] -> TAR[20:21] [] -> ['U']",
      "insert    PRED[10:10] -> TAR[21:22] [] -> ['rib']",
      "insert    PRED[10:10] -> TAR[22:23] [] -> [')']",
      "insert    PRED[10:10] -> TAR[23:24] [] -> ['.']"
    ]
  }
}


{
  "_ID": 399,
  "example": {
    "sentence": "the autopodial skeleton is the distal section of the limb skeleton , consisting of the anterior autopodium or posterior autopodium . <EOS>",
    "target": "autopodial the := E the distal skeleton . ( of the ) ^ E limb skeleton . ( skeleton the U of the ) . <EOS>",
    "prediction": "autopodial the := the distal skeleton of the U limb the skeleton skeleton the . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 103, 4381, 296, 1496, 999, 5310, 2995, 1496, 4294, 4381, 2317, 5366, 2995, 1496, 4702, 3302, 1048, 1871, 3302, 1710, 0]",
    "target_idx": "[20, 27, 7, 13, 23, 24, 29, 16, 1, 26, 27, 2, 5, 13, 28, 29, 16, 1, 29, 33, 6, 32, 33, 2, 16, 0]",
    "prediction_idx": "[20, 27, 7, 23, 24, 29, 26, 27, 6, 28, 33, 29, 29, 33, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.154,
  "tokens_OK": 4,
  "tokens_tot": 26,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> [')']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['^']",
      "replace   PRED[8:9] -> TAR[13:14] ['U'] -> ['E']",
      "insert    PRED[9:9] -> TAR[15:16] [] -> ['skeleton']",
      "insert    PRED[9:9] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[18:19] [] -> ['skeleton']",
      "replace   PRED[11:12] -> TAR[20:21] ['skeleton'] -> ['U']",
      "replace   PRED[12:13] -> TAR[21:22] ['skeleton'] -> ['of']",
      "insert    PRED[13:13] -> TAR[23:24] [] -> [')']"
    ]
  }
}


{
  "_ID": 402,
  "example": {
    "sentence": "the vertebral element is a skeletal element that form around the notochord and is part of the vertebral column . <EOS>",
    "target": "is element := skeletal element ^ E that form . ( around ) ^ E notochord and . ( is is ) . <EOS>",
    "prediction": "is element := skeletal element ^ E that . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2620, 1791, 296, 1532, 3051, 1791, 1465, 2845, 5390, 1496, 595, 2258, 296, 5371, 2995, 1496, 2620, 3304, 1710, 0]",
    "target_idx": "[32, 25, 7, 24, 25, 5, 13, 26, 27, 16, 1, 28, 2, 5, 13, 30, 31, 16, 1, 32, 32, 2, 16, 0]",
    "prediction_idx": "[32, 25, 7, 24, 25, 5, 13, 26, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.375,
  "tokens_OK": 9,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 13,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['form']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['around']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> [')']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['notochord']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['and']",
      "insert    PRED[9:9] -> TAR[19:20] [] -> ['is']",
      "insert    PRED[9:9] -> TAR[20:21] [] -> ['is']",
      "insert    PRED[9:9] -> TAR[21:22] [] -> [')']",
      "insert    PRED[9:9] -> TAR[22:23] [] -> ['.']"
    ]
  }
}


{
  "_ID": 355,
  "example": {
    "sentence": "an agricultural show or event is something that can disrupt traffic . <EOS>",
    "target": "agricultural show U agricultural event := >= <EOS>",
    "prediction": "an agricultural show := E ( can U event ) . ( disrupt traffic traffic ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 3100, 1588, 1048, 4512, 296, 1307, 1465, 5363, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 6, 20, 23, 7, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[19, 20, 21, 7, 13, 1, 27, 6, 23, 2, 16, 1, 28, 29, 29, 2, 16, 0]"
  },
  "accuracy": 0.056,
  "tokens_OK": 1,
  "tokens_tot": 18,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['an'] -> []",
      "delete    PRED[3:4] -> TAR[1:1] [':='] -> []",
      "delete    PRED[4:5] -> TAR[1:1] ['E'] -> []",
      "delete    PRED[5:6] -> TAR[1:1] ['('] -> []",
      "delete    PRED[6:7] -> TAR[1:1] ['can'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['event'] -> []",
      "delete    PRED[9:10] -> TAR[2:2] [')'] -> []",
      "delete    PRED[10:11] -> TAR[2:2] ['.'] -> []",
      "delete    PRED[11:12] -> TAR[2:2] ['('] -> []",
      "delete    PRED[12:13] -> TAR[2:2] ['disrupt'] -> []",
      "replace   PRED[13:14] -> TAR[3:4] ['traffic'] -> ['agricultural']",
      "replace   PRED[14:15] -> TAR[4:5] ['traffic'] -> ['event']",
      "replace   PRED[15:16] -> TAR[5:6] [')'] -> [':=']",
      "replace   PRED[16:17] -> TAR[6:7] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 376,
  "example": {
    "sentence": "a <UNK>@1 sing device is a device that implement <UNK>@9 sing . <EOS>",
    "target": "<EOS>",
    "prediction": "that that a := a ^ E device . ( that that ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 1, 4076, 2016, 296, 1532, 2016, 1465, 3449, 1, 4076, 1710, 0]",
    "target_idx": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[26, 26, 24, 7, 24, 5, 13, 25, 16, 1, 26, 26, 2, 16, 0]"
  },
  "accuracy": 0.067,
  "tokens_OK": 1,
  "tokens_tot": 15,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['that'] -> []",
      "delete    PRED[1:2] -> TAR[0:0] ['that'] -> []",
      "delete    PRED[2:3] -> TAR[0:0] ['a'] -> []",
      "delete    PRED[3:4] -> TAR[0:0] [':='] -> []",
      "delete    PRED[4:5] -> TAR[0:0] ['a'] -> []",
      "delete    PRED[5:6] -> TAR[0:0] ['^'] -> []",
      "delete    PRED[6:7] -> TAR[0:0] ['E'] -> []",
      "delete    PRED[7:8] -> TAR[0:0] ['device'] -> []",
      "delete    PRED[8:9] -> TAR[0:0] ['.'] -> []",
      "delete    PRED[9:10] -> TAR[0:0] ['('] -> []",
      "delete    PRED[10:11] -> TAR[0:0] ['that'] -> []",
      "delete    PRED[11:12] -> TAR[0:0] ['that'] -> []",
      "delete    PRED[12:13] -> TAR[0:0] [')'] -> []",
      "delete    PRED[13:14] -> TAR[0:0] ['.'] -> []"
    ]
  }
}


{
  "_ID": 401,
  "example": {
    "sentence": "a datum collection from survey is a datum collection that result in a collection of datum generated from a survey . <EOS>",
    "target": "result that in in := result that ^ E datum collection . ( that that . result ^ E result in . ( in ) ) . <EOS>",
    "prediction": "result that := in in ^ E datum . ( that that that result ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5275, 2683, 5362, 2333, 296, 1532, 5275, 2683, 1465, 1120, 3574, 1532, 2683, 2995, 5275, 5370, 5362, 1532, 2333, 1710, 0]",
    "target_idx": "[29, 28, 30, 30, 7, 29, 28, 5, 13, 26, 27, 16, 1, 28, 28, 16, 29, 5, 13, 29, 30, 16, 1, 30, 2, 2, 16, 0]",
    "prediction_idx": "[29, 28, 7, 30, 30, 5, 13, 26, 16, 1, 28, 28, 28, 29, 2, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.179,
  "tokens_OK": 5,
  "tokens_tot": 28,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['in']",
      "insert    PRED[1:1] -> TAR[3:4] [] -> ['in']",
      "replace   PRED[3:4] -> TAR[5:6] ['in'] -> ['result']",
      "replace   PRED[4:5] -> TAR[6:7] ['in'] -> ['that']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['collection']",
      "insert    PRED[11:11] -> TAR[15:16] [] -> ['.']",
      "insert    PRED[11:11] -> TAR[16:17] [] -> ['result']",
      "insert    PRED[11:11] -> TAR[17:18] [] -> ['^']",
      "replace   PRED[12:13] -> TAR[18:19] ['that'] -> ['E']",
      "insert    PRED[13:13] -> TAR[20:21] [] -> ['in']",
      "insert    PRED[13:13] -> TAR[21:22] [] -> ['.']",
      "insert    PRED[13:13] -> TAR[22:23] [] -> ['(']",
      "insert    PRED[13:13] -> TAR[23:24] [] -> ['in']",
      "insert    PRED[13:13] -> TAR[24:25] [] -> [')']"
    ]
  }
}


{
  "_ID": 417,
  "example": {
    "sentence": "the odontocyte is a skeletogenic cell that secretes dentine matrix and is derived from odontogenic papilla . <EOS>",
    "target": "odontocyte := skeletogenic cell ^ E secretes . ( dentine matrix ) ^ E is derived . ( from odontogenic ) . <EOS>",
    "prediction": "odontocyte := skeletogenic cell ^ is derived . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2626, 296, 1532, 2254, 3311, 1465, 838, 3471, 4700, 2258, 296, 5361, 5362, 3698, 5055, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 5, 13, 26, 16, 1, 27, 28, 2, 5, 13, 30, 31, 16, 1, 32, 33, 2, 16, 0]",
    "prediction_idx": "[20, 7, 23, 24, 5, 30, 31, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.304,
  "tokens_OK": 7,
  "tokens_tot": 23,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['secretes']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[9:10] [] -> ['dentine']",
      "insert    PRED[3:3] -> TAR[10:11] [] -> ['matrix']",
      "insert    PRED[3:3] -> TAR[11:12] [] -> [')']",
      "insert    PRED[4:4] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[18:19] [] -> ['from']",
      "insert    PRED[6:6] -> TAR[19:20] [] -> ['odontogenic']",
      "insert    PRED[6:6] -> TAR[20:21] [] -> [')']"
    ]
  }
}


{
  "_ID": 421,
  "example": {
    "sentence": "an interclavicle is a dermal bone of pectoral girdle that is median and ventral in position . <EOS>",
    "target": "interclavicle := dermal bone of pectoral girdle ^ E is ventral . ( in ) ^ E and ventral . ( in ) . <EOS>",
    "prediction": "an interclavicle := dermal bone of pectoral girdle ^ is in . <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 3849, 296, 1532, 280, 432, 2995, 2918, 3852, 1465, 296, 3485, 2258, 3429, 3574, 56, 1710, 0]",
    "target_idx": "[20, 7, 23, 24, 25, 26, 27, 5, 13, 29, 32, 16, 1, 33, 2, 5, 13, 31, 32, 16, 1, 33, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 26, 27, 5, 29, 33, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.12,
  "tokens_OK": 3,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 14,
    "diff_ops": [
      "delete    PRED[0:1] -> TAR[0:0] ['an'] -> []",
      "insert    PRED[8:8] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['ventral']",
      "insert    PRED[9:9] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[9:9] -> TAR[13:14] [] -> ['in']",
      "insert    PRED[9:9] -> TAR[14:15] [] -> [')']",
      "insert    PRED[9:9] -> TAR[15:16] [] -> ['^']",
      "insert    PRED[9:9] -> TAR[16:17] [] -> ['E']",
      "insert    PRED[9:9] -> TAR[17:18] [] -> ['and']",
      "insert    PRED[9:9] -> TAR[18:19] [] -> ['ventral']",
      "insert    PRED[9:9] -> TAR[19:20] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[10:10] -> TAR[22:23] [] -> [')']"
    ]
  }
}


{
  "_ID": 274,
  "example": {
    "sentence": "a winter sport meeting or event is an event that could disrupt traffic . <EOS>",
    "target": "winter sport meeting U winter sport event := event ^ >= <EOS>",
    "prediction": "winter sport meeting := event event ^ E ( that U event ) . ( could disrupt ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3279, 3918, 1370, 1048, 4512, 296, 5374, 4512, 1465, 5359, 1876, 2176, 1710, 0]",
    "target_idx": "[20, 21, 22, 6, 20, 21, 27, 7, 27, 5, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
    "prediction_idx": "[20, 21, 22, 7, 27, 27, 5, 13, 1, 28, 6, 27, 2, 16, 1, 29, 30, 2, 16, 0]"
  },
  "accuracy": 0.2,
  "tokens_OK": 4,
  "tokens_tot": 20,
  "edit_distance": {
    "score": 15,
    "diff_ops": [
      "delete    PRED[3:4] -> TAR[2:2] [':='] -> []",
      "delete    PRED[4:5] -> TAR[2:2] ['event'] -> []",
      "delete    PRED[5:6] -> TAR[2:2] ['event'] -> []",
      "delete    PRED[6:7] -> TAR[2:2] ['^'] -> []",
      "delete    PRED[7:8] -> TAR[2:2] ['E'] -> []",
      "delete    PRED[8:9] -> TAR[2:2] ['('] -> []",
      "delete    PRED[9:10] -> TAR[2:2] ['that'] -> []",
      "delete    PRED[11:12] -> TAR[3:3] ['event'] -> []",
      "replace   PRED[12:13] -> TAR[4:5] [')'] -> ['winter']",
      "replace   PRED[13:14] -> TAR[5:6] ['.'] -> ['sport']",
      "replace   PRED[14:15] -> TAR[6:7] ['('] -> ['event']",
      "replace   PRED[15:16] -> TAR[7:8] ['could'] -> [':=']",
      "replace   PRED[16:17] -> TAR[8:9] ['disrupt'] -> ['event']",
      "replace   PRED[17:18] -> TAR[9:10] [')'] -> ['^']",
      "replace   PRED[18:19] -> TAR[10:11] ['.'] -> ['>=']"
    ]
  }
}


{
  "_ID": 388,
  "example": {
    "sentence": "a pectoral fin skeleton is a paired fin skeleton that consists of the supporting endochondral proximal and distal radial and the dermal fin ray or lepidotrichia . <EOS>",
    "target": "pectoral distal paired := a distal paired ^ E fin skeleton . ( consists of proximal ^ endochondral proximal ^ ( and distal distal U and distal and ) ) . <EOS>",
    "prediction": "pectoral distal paired := a distal paired ^ E fin . ( consists the the ) ^ E fin . ( endochondral ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 2918, 613, 4381, 296, 1532, 2424, 613, 4381, 1465, 4298, 2995, 1496, 5369, 3425, 2134, 2258, 999, 1415, 2258, 1496, 280, 613, 3098, 1048, 3483, 1710, 0]",
    "target_idx": "[20, 36, 25, 7, 24, 36, 25, 5, 13, 26, 27, 16, 1, 29, 30, 34, 5, 33, 34, 5, 1, 35, 36, 36, 6, 35, 36, 38, 2, 2, 16, 0]",
    "prediction_idx": "[20, 36, 25, 7, 24, 36, 25, 5, 13, 26, 16, 1, 29, 31, 31, 2, 5, 13, 26, 16, 1, 33, 2, 16, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.406,
  "tokens_OK": 13,
  "tokens_tot": 32,
  "edit_distance": {
    "score": 15,
    "diff_ops": [
      "insert    PRED[9:9] -> TAR[10:11] [] -> ['skeleton']",
      "insert    PRED[12:12] -> TAR[14:15] [] -> ['of']",
      "insert    PRED[12:12] -> TAR[15:16] [] -> ['proximal']",
      "replace   PRED[13:14] -> TAR[16:17] ['the'] -> ['^']",
      "replace   PRED[14:15] -> TAR[17:18] ['the'] -> ['endochondral']",
      "replace   PRED[15:16] -> TAR[18:19] [')'] -> ['proximal']",
      "insert    PRED[16:16] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[16:16] -> TAR[21:22] [] -> ['and']",
      "insert    PRED[16:16] -> TAR[22:23] [] -> ['distal']",
      "insert    PRED[16:16] -> TAR[23:24] [] -> ['distal']",
      "replace   PRED[17:18] -> TAR[24:25] ['E'] -> ['U']",
      "replace   PRED[18:19] -> TAR[25:26] ['fin'] -> ['and']",
      "replace   PRED[19:20] -> TAR[26:27] ['.'] -> ['distal']",
      "replace   PRED[20:21] -> TAR[27:28] ['('] -> ['and']",
      "replace   PRED[21:22] -> TAR[28:29] ['endochondral'] -> [')']"
    ]
  }
}


{
  "_ID": 304,
  "example": {
    "sentence": "a american pizza is a pizza that have topping of pepperoni , mozzarella and tomato . <EOS>",
    "target": "american a := a ^ E pizza that . ( topping ) ^ E pizza that . ( pepperoni ) ^ E pizza that . ( mozzarella ) . <EOS>",
    "prediction": "american a := a ^ E pizza . ( that have topping ^ pepperoni ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 3347, 2430, 296, 1532, 2430, 1465, 5360, 1154, 2995, 5193, 2317, 494, 2258, 2475, 1710, 0]",
    "target_idx": "[20, 23, 7, 23, 5, 13, 24, 25, 16, 1, 27, 2, 5, 13, 24, 25, 16, 1, 29, 2, 5, 13, 24, 25, 16, 1, 31, 2, 16, 0]",
    "prediction_idx": "[20, 23, 7, 23, 5, 13, 24, 16, 1, 25, 26, 27, 5, 29, 2, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.3,
  "tokens_OK": 9,
  "tokens_tot": 30,
  "edit_distance": {
    "score": 16,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['that']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['topping']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> [')']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['pizza']",
      "insert    PRED[9:9] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[9:9] -> TAR[17:18] [] -> ['(']",
      "replace   PRED[10:11] -> TAR[18:19] ['have'] -> ['pepperoni']",
      "replace   PRED[11:12] -> TAR[19:20] ['topping'] -> [')']",
      "insert    PRED[12:12] -> TAR[21:22] [] -> ['E']",
      "insert    PRED[12:12] -> TAR[22:23] [] -> ['pizza']",
      "insert    PRED[12:12] -> TAR[23:24] [] -> ['that']",
      "insert    PRED[12:12] -> TAR[24:25] [] -> ['.']",
      "insert    PRED[12:12] -> TAR[25:26] [] -> ['(']",
      "replace   PRED[13:14] -> TAR[26:27] ['pepperoni'] -> ['mozzarella']"
    ]
  }
}


{
  "_ID": 141,
  "example": {
    "sentence": "tasty plant are eat both by herbivore and carnivore . <EOS>",
    "target": "tasty plant := plant ^ E eat by . ( herbivore ) ^ E eat by . ( carnivore ) . <EOS>",
    "prediction": "tasty plant := eat <EOS>"
  },
  "dump": {
    "sentence_idx": "[1260, 526, 3728, 2867, 3467, 5367, 4058, 2258, 3741, 1710, 0]",
    "target_idx": "[19, 20, 7, 20, 5, 13, 22, 24, 16, 1, 25, 2, 5, 13, 22, 24, 16, 1, 27, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.182,
  "tokens_OK": 4,
  "tokens_tot": 22,
  "edit_distance": {
    "score": 17,
    "diff_ops": [
      "insert    PRED[2:2] -> TAR[3:4] [] -> ['plant']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['eat']",
      "insert    PRED[2:2] -> TAR[7:8] [] -> ['by']",
      "insert    PRED[2:2] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[2:2] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[2:2] -> TAR[10:11] [] -> ['herbivore']",
      "insert    PRED[2:2] -> TAR[11:12] [] -> [')']",
      "insert    PRED[2:2] -> TAR[12:13] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[15:16] [] -> ['by']",
      "insert    PRED[3:3] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[18:19] [] -> ['carnivore']",
      "insert    PRED[3:3] -> TAR[19:20] [] -> [')']",
      "insert    PRED[3:3] -> TAR[20:21] [] -> ['.']"
    ]
  }
}


{
  "_ID": 257,
  "example": {
    "sentence": "vasodentine is the dentine tissue that lack dentine tubule and that is penetrate by blood capillary . <EOS>",
    "target": "vasodentine := dentine tissue ^ E lack . ( dentine dentine ) ^ E and that . ( is penetrate ) . <EOS>",
    "prediction": "vasodentine := tissue ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[4893, 296, 1496, 3471, 3846, 1465, 4971, 3471, 4658, 2258, 1465, 296, 5381, 5367, 1641, 798, 1710, 0]",
    "target_idx": "[19, 7, 26, 23, 5, 13, 25, 16, 1, 26, 26, 2, 5, 13, 28, 29, 16, 1, 30, 31, 2, 16, 0]",
    "prediction_idx": "[19, 7, 23, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.13,
  "tokens_OK": 3,
  "tokens_tot": 23,
  "edit_distance": {
    "score": 18,
    "diff_ops": [
      "insert    PRED[1:1] -> TAR[2:3] [] -> ['dentine']",
      "insert    PRED[2:2] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[2:2] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[2:2] -> TAR[6:7] [] -> ['lack']",
      "insert    PRED[2:2] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[2:2] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[2:2] -> TAR[9:10] [] -> ['dentine']",
      "insert    PRED[2:2] -> TAR[10:11] [] -> ['dentine']",
      "insert    PRED[2:2] -> TAR[11:12] [] -> [')']",
      "insert    PRED[3:3] -> TAR[13:14] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[14:15] [] -> ['and']",
      "insert    PRED[3:3] -> TAR[15:16] [] -> ['that']",
      "insert    PRED[3:3] -> TAR[16:17] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[17:18] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[18:19] [] -> ['is']",
      "insert    PRED[3:3] -> TAR[19:20] [] -> ['penetrate']",
      "insert    PRED[3:3] -> TAR[20:21] [] -> [')']",
      "insert    PRED[3:3] -> TAR[21:22] [] -> ['.']"
    ]
  }
}


{
  "_ID": 295,
  "example": {
    "sentence": "a currency is a unit of exchange , facilitate the transfer of goods and service . <EOS>",
    "target": "currency := a transfer of ^ E , . ( the transfer transfer ) ^ E , . ( the transfer goods ) . <EOS>",
    "prediction": "currency := a transfer of ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 695, 296, 1532, 1825, 2995, 776, 2317, 4725, 1496, 3898, 2995, 4113, 2258, 4834, 1710, 0]",
    "target_idx": "[20, 7, 22, 29, 24, 5, 13, 26, 16, 1, 28, 29, 29, 2, 5, 13, 26, 16, 1, 28, 29, 31, 2, 16, 0]",
    "prediction_idx": "[20, 7, 22, 29, 24, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.28,
  "tokens_OK": 7,
  "tokens_tot": 25,
  "edit_distance": {
    "score": 18,
    "diff_ops": [
      "insert    PRED[4:4] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[4:4] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[7:8] [] -> [',']",
      "insert    PRED[4:4] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[10:11] [] -> ['the']",
      "insert    PRED[4:4] -> TAR[11:12] [] -> ['transfer']",
      "insert    PRED[4:4] -> TAR[12:13] [] -> ['transfer']",
      "insert    PRED[4:4] -> TAR[13:14] [] -> [')']",
      "insert    PRED[5:5] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[5:5] -> TAR[16:17] [] -> [',']",
      "insert    PRED[5:5] -> TAR[17:18] [] -> ['.']",
      "insert    PRED[5:5] -> TAR[18:19] [] -> ['(']",
      "insert    PRED[5:5] -> TAR[19:20] [] -> ['the']",
      "insert    PRED[5:5] -> TAR[20:21] [] -> ['transfer']",
      "insert    PRED[5:5] -> TAR[21:22] [] -> ['goods']",
      "insert    PRED[5:5] -> TAR[22:23] [] -> [')']",
      "insert    PRED[5:5] -> TAR[23:24] [] -> ['.']"
    ]
  }
}


{
  "_ID": 384,
  "example": {
    "sentence": "an osteoblast is a skeletogenic cell that secretes osteoid , is capable of produce mineralized matrix , is located adjacent to or <UNK>@22 in osteoid tissue , and arises from the transformation of a preosteoblast cell . <EOS>",
    "target": "osteoblast := skeletogenic arises ^ E secretes . ( or ) ^ E of . ( produce mineralized ) ^ E ( matrix , is ^ matrix <EOS>",
    "prediction": "osteoblast := skeletogenic arises ^ E secretes . ( <EOS>"
  },
  "dump": {
    "sentence_idx": "[5374, 933, 296, 1532, 2254, 3311, 1465, 838, 1339, 2317, 296, 2774, 2995, 4253, 4878, 4700, 2317, 296, 3886, 2938, 5376, 1048, 1, 3574, 1339, 3846, 2317, 2258, 5221, 5362, 1496, 2323, 2995, 1532, 960, 3311, 1710, 0]",
    "target_idx": "[20, 7, 23, 47, 5, 13, 26, 16, 1, 40, 2, 5, 13, 31, 16, 1, 32, 33, 2, 5, 13, 1, 34, 35, 36, 5, 34, 0]",
    "prediction_idx": "[20, 7, 23, 47, 5, 13, 26, 16, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.357,
  "tokens_OK": 10,
  "tokens_tot": 28,
  "edit_distance": {
    "score": 18,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[6:6] -> TAR[9:10] [] -> ['or']",
      "insert    PRED[6:6] -> TAR[10:11] [] -> [')']",
      "insert    PRED[6:6] -> TAR[11:12] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[12:13] [] -> ['E']",
      "insert    PRED[6:6] -> TAR[13:14] [] -> ['of']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> ['produce']",
      "insert    PRED[7:7] -> TAR[17:18] [] -> ['mineralized']",
      "insert    PRED[7:7] -> TAR[18:19] [] -> [')']",
      "insert    PRED[7:7] -> TAR[19:20] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[20:21] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[22:23] [] -> ['matrix']",
      "insert    PRED[8:8] -> TAR[23:24] [] -> [',']",
      "insert    PRED[8:8] -> TAR[24:25] [] -> ['is']",
      "insert    PRED[8:8] -> TAR[25:26] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[26:27] [] -> ['matrix']"
    ]
  }
}


{
  "_ID": 392,
  "example": {
    "sentence": "the acropodial skeleton is a endochondral terminal bone that is located at the distalmost end of the autopodium , consisting of the phalanx . <EOS>",
    "target": "acropodial skeleton := endochondral terminal bone ^ E is located . ( at the autopodium end ) ^ E the autopodium . ( autopodium ) . <EOS>",
    "prediction": "acropodial skeleton := endochondral terminal bone ^ is <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 5207, 4381, 296, 1532, 3425, 2559, 432, 1465, 296, 3886, 2305, 1496, 2885, 2383, 2995, 1496, 3302, 2317, 5366, 2995, 1496, 1604, 1710, 0]",
    "target_idx": "[20, 21, 7, 24, 25, 26, 5, 13, 28, 29, 16, 1, 30, 31, 36, 33, 2, 5, 13, 35, 36, 16, 1, 36, 2, 16, 0]",
    "prediction_idx": "[20, 21, 7, 24, 25, 26, 5, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.296,
  "tokens_OK": 8,
  "tokens_tot": 27,
  "edit_distance": {
    "score": 18,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[9:10] [] -> ['located']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['at']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['the']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['autopodium']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> ['end']",
      "insert    PRED[7:7] -> TAR[16:17] [] -> [')']",
      "insert    PRED[7:7] -> TAR[17:18] [] -> ['^']",
      "insert    PRED[7:7] -> TAR[18:19] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[19:20] [] -> ['the']",
      "insert    PRED[7:7] -> TAR[20:21] [] -> ['autopodium']",
      "insert    PRED[7:7] -> TAR[21:22] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[22:23] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[23:24] [] -> ['autopodium']",
      "insert    PRED[7:7] -> TAR[24:25] [] -> [')']",
      "insert    PRED[7:7] -> TAR[25:26] [] -> ['.']"
    ]
  }
}


{
  "_ID": 415,
  "example": {
    "sentence": "the periarticular chondrocyte is a chondrocyte that is located on a joint surface and that is part of articular cartilage . <EOS>",
    "target": "periarticular chondrocyte := chondrocyte ^ E that is . ( located on ) ^ E joint surface . ( and that ) . <EOS>",
    "prediction": "periarticular chondrocyte := chondrocyte ^ <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3731, 1296, 296, 1532, 1296, 1465, 296, 3886, 5379, 1532, 1067, 3458, 2258, 1465, 296, 5371, 2995, 760, 1005, 1710, 0]",
    "target_idx": "[20, 24, 7, 24, 5, 13, 25, 26, 16, 1, 27, 28, 2, 5, 13, 30, 31, 16, 1, 32, 33, 2, 16, 0]",
    "prediction_idx": "[20, 24, 7, 24, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 6,
  "tokens_tot": 24,
  "edit_distance": {
    "score": 18,
    "diff_ops": [
      "insert    PRED[3:3] -> TAR[4:5] [] -> ['^']",
      "insert    PRED[3:3] -> TAR[5:6] [] -> ['E']",
      "insert    PRED[3:3] -> TAR[6:7] [] -> ['that']",
      "insert    PRED[3:3] -> TAR[7:8] [] -> ['is']",
      "insert    PRED[3:3] -> TAR[8:9] [] -> ['.']",
      "insert    PRED[3:3] -> TAR[9:10] [] -> ['(']",
      "insert    PRED[3:3] -> TAR[10:11] [] -> ['located']",
      "insert    PRED[3:3] -> TAR[11:12] [] -> ['on']",
      "insert    PRED[3:3] -> TAR[12:13] [] -> [')']",
      "insert    PRED[4:4] -> TAR[14:15] [] -> ['E']",
      "insert    PRED[4:4] -> TAR[15:16] [] -> ['joint']",
      "insert    PRED[4:4] -> TAR[16:17] [] -> ['surface']",
      "insert    PRED[4:4] -> TAR[17:18] [] -> ['.']",
      "insert    PRED[4:4] -> TAR[18:19] [] -> ['(']",
      "insert    PRED[4:4] -> TAR[19:20] [] -> ['and']",
      "insert    PRED[4:4] -> TAR[20:21] [] -> ['that']",
      "insert    PRED[4:4] -> TAR[21:22] [] -> [')']",
      "insert    PRED[4:4] -> TAR[22:23] [] -> ['.']"
    ]
  }
}


{
  "_ID": 386,
  "example": {
    "sentence": "the pelvic fin skeleton is a paired fin skeleton located in the abdominal position that consists of supporting endochondral radial and dermal fin ray or lepidotrichia . <EOS>",
    "target": "pelvic radial fin := paired radial fin ^ E fin skeleton . ( located in ) ^ E abdominal position . ( that consists of ^ ( endochondral radial radial U endochondral radial dermal ) ) . <EOS>",
    "prediction": "pelvic radial fin := paired radial fin fin ^ E abdominal . ( located position that ^ located position endochondral of ) . <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2465, 613, 4381, 296, 1532, 2424, 613, 4381, 3886, 3574, 1496, 2832, 56, 1465, 4298, 2995, 5369, 3425, 1415, 2258, 280, 613, 3098, 1048, 3483, 1710, 0]",
    "target_idx": "[20, 38, 26, 7, 25, 38, 26, 5, 13, 26, 27, 16, 1, 28, 29, 2, 5, 13, 31, 32, 16, 1, 33, 34, 35, 5, 1, 37, 38, 38, 6, 37, 38, 40, 2, 2, 16, 0]",
    "prediction_idx": "[20, 38, 26, 7, 25, 38, 26, 26, 5, 13, 31, 16, 1, 28, 32, 33, 5, 28, 32, 37, 35, 2, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.316,
  "tokens_OK": 12,
  "tokens_tot": 38,
  "edit_distance": {
    "score": 20,
    "diff_ops": [
      "insert    PRED[6:6] -> TAR[7:8] [] -> ['^']",
      "insert    PRED[6:6] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[7:7] -> TAR[10:11] [] -> ['skeleton']",
      "insert    PRED[7:7] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[7:7] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[7:7] -> TAR[13:14] [] -> ['located']",
      "insert    PRED[7:7] -> TAR[14:15] [] -> ['in']",
      "insert    PRED[7:7] -> TAR[15:16] [] -> [')']",
      "insert    PRED[10:10] -> TAR[19:20] [] -> ['position']",
      "replace   PRED[13:14] -> TAR[22:23] ['located'] -> ['that']",
      "replace   PRED[14:15] -> TAR[23:24] ['position'] -> ['consists']",
      "replace   PRED[15:16] -> TAR[24:25] ['that'] -> ['of']",
      "insert    PRED[16:16] -> TAR[26:27] [] -> ['(']",
      "insert    PRED[16:16] -> TAR[27:28] [] -> ['endochondral']",
      "insert    PRED[16:16] -> TAR[28:29] [] -> ['radial']",
      "replace   PRED[17:18] -> TAR[29:30] ['located'] -> ['radial']",
      "replace   PRED[18:19] -> TAR[30:31] ['position'] -> ['U']",
      "insert    PRED[19:19] -> TAR[32:33] [] -> ['radial']",
      "insert    PRED[19:19] -> TAR[33:34] [] -> ['dermal']",
      "replace   PRED[20:21] -> TAR[34:35] ['of'] -> [')']"
    ]
  }
}


{
  "_ID": 413,
  "example": {
    "sentence": "the zeugopodial skeleton is the section of the forelimb skeleton located between the stylopodium and the autopodium . <EOS>",
    "target": "zeugopodial the := E the section . ( of the ) ^ E the forelimb . ( skeleton ^ between ) . <EOS>",
    "prediction": "<EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 3561, 4381, 296, 1496, 5310, 2995, 1496, 2014, 4381, 3886, 5393, 1496, 4563, 2258, 1496, 3302, 1710, 0]",
    "target_idx": "[20, 26, 7, 13, 23, 24, 16, 1, 25, 26, 2, 5, 13, 26, 27, 16, 1, 28, 5, 30, 2, 16, 0]",
    "prediction_idx": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.043,
  "tokens_OK": 1,
  "tokens_tot": 23,
  "edit_distance": {
    "score": 22,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['zeugopodial']",
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['the']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> [':=']",
      "insert    PRED[0:0] -> TAR[3:4] [] -> ['E']",
      "insert    PRED[0:0] -> TAR[4:5] [] -> ['the']",
      "insert    PRED[0:0] -> TAR[5:6] [] -> ['section']",
      "insert    PRED[0:0] -> TAR[6:7] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[7:8] [] -> ['(']",
      "insert    PRED[0:0] -> TAR[8:9] [] -> ['of']",
      "insert    PRED[0:0] -> TAR[9:10] [] -> ['the']",
      "insert    PRED[0:0] -> TAR[10:11] [] -> [')']",
      "insert    PRED[0:0] -> TAR[11:12] [] -> ['^']",
      "insert    PRED[0:0] -> TAR[12:13] [] -> ['E']",
      "insert    PRED[0:0] -> TAR[13:14] [] -> ['the']",
      "insert    PRED[0:0] -> TAR[14:15] [] -> ['forelimb']",
      "insert    PRED[0:0] -> TAR[15:16] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[16:17] [] -> ['(']",
      "insert    PRED[0:0] -> TAR[17:18] [] -> ['skeleton']",
      "insert    PRED[0:0] -> TAR[18:19] [] -> ['^']",
      "insert    PRED[0:0] -> TAR[19:20] [] -> ['between']",
      "insert    PRED[0:0] -> TAR[20:21] [] -> [')']",
      "insert    PRED[0:0] -> TAR[21:22] [] -> ['.']"
    ]
  }
}


{
  "_ID": 389,
  "example": {
    "sentence": "the pectoral fin skeleton is located in the thoracic region of the body and articulates with the scapula and coracoid . <EOS>",
    "target": "pectoral fin skeleton := E located in . ( the thoracic region of ) ^ E body and . ( articulates ^ with ) . <EOS>",
    "prediction": "<EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 4381, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 2258, 670, 5385, 1496, 4564, 2258, 2782, 1710, 0]",
    "target_idx": "[20, 21, 22, 7, 13, 24, 25, 16, 1, 26, 27, 28, 29, 2, 5, 13, 31, 32, 16, 1, 33, 5, 34, 2, 16, 0]",
    "prediction_idx": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.038,
  "tokens_OK": 1,
  "tokens_tot": 26,
  "edit_distance": {
    "score": 25,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['pectoral']",
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['fin']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> ['skeleton']",
      "insert    PRED[0:0] -> TAR[3:4] [] -> [':=']",
      "insert    PRED[0:0] -> TAR[4:5] [] -> ['E']",
      "insert    PRED[0:0] -> TAR[5:6] [] -> ['located']",
      "insert    PRED[0:0] -> TAR[6:7] [] -> ['in']",
      "insert    PRED[0:0] -> TAR[7:8] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[8:9] [] -> ['(']",
      "insert    PRED[0:0] -> TAR[9:10] [] -> ['the']",
      "insert    PRED[0:0] -> TAR[10:11] [] -> ['thoracic']",
      "insert    PRED[0:0] -> TAR[11:12] [] -> ['region']",
      "insert    PRED[0:0] -> TAR[12:13] [] -> ['of']",
      "insert    PRED[0:0] -> TAR[13:14] [] -> [')']",
      "insert    PRED[0:0] -> TAR[14:15] [] -> ['^']",
      "insert    PRED[0:0] -> TAR[15:16] [] -> ['E']",
      "insert    PRED[0:0] -> TAR[16:17] [] -> ['body']",
      "insert    PRED[0:0] -> TAR[17:18] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[18:19] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[19:20] [] -> ['(']",
      "insert    PRED[0:0] -> TAR[20:21] [] -> ['articulates']",
      "insert    PRED[0:0] -> TAR[21:22] [] -> ['^']",
      "insert    PRED[0:0] -> TAR[22:23] [] -> ['with']",
      "insert    PRED[0:0] -> TAR[23:24] [] -> [')']",
      "insert    PRED[0:0] -> TAR[24:25] [] -> ['.']"
    ]
  }
}


{
  "_ID": 385,
  "example": {
    "sentence": "the pectoral fin skeleton is a paired fin skeleton that is located in the thoracic region of the body and articulate with the scapula and the coracoid . <EOS>",
    "target": "pectoral fin fin := paired fin fin ^ E skeleton that . ( is located in the ) ^ E region of . ( the ) ^ E region of . ( body ) . <EOS>",
    "prediction": "pectoral fin fin := paired fin fin ^ skeleton <EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 4381, 296, 1532, 2424, 613, 4381, 1465, 296, 3886, 3574, 1496, 1466, 4330, 2995, 1496, 5126, 2258, 1452, 5385, 1496, 4564, 2258, 1496, 2782, 1710, 0]",
    "target_idx": "[20, 26, 26, 7, 25, 26, 26, 5, 13, 27, 28, 16, 1, 29, 30, 31, 32, 2, 5, 13, 34, 35, 16, 1, 36, 2, 5, 13, 34, 35, 16, 1, 37, 2, 16, 0]",
    "prediction_idx": "[20, 26, 26, 7, 25, 26, 26, 5, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.25,
  "tokens_OK": 9,
  "tokens_tot": 36,
  "edit_distance": {
    "score": 26,
    "diff_ops": [
      "insert    PRED[7:7] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['that']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[13:14] [] -> ['is']",
      "insert    PRED[8:8] -> TAR[14:15] [] -> ['located']",
      "insert    PRED[8:8] -> TAR[15:16] [] -> ['in']",
      "insert    PRED[8:8] -> TAR[16:17] [] -> ['the']",
      "insert    PRED[8:8] -> TAR[17:18] [] -> [')']",
      "insert    PRED[8:8] -> TAR[18:19] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[19:20] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[20:21] [] -> ['region']",
      "insert    PRED[8:8] -> TAR[21:22] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[22:23] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[23:24] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[24:25] [] -> ['the']",
      "insert    PRED[8:8] -> TAR[25:26] [] -> [')']",
      "insert    PRED[8:8] -> TAR[26:27] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[27:28] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[28:29] [] -> ['region']",
      "insert    PRED[8:8] -> TAR[29:30] [] -> ['of']",
      "insert    PRED[8:8] -> TAR[30:31] [] -> ['.']",
      "insert    PRED[8:8] -> TAR[31:32] [] -> ['(']",
      "insert    PRED[8:8] -> TAR[32:33] [] -> ['body']",
      "insert    PRED[8:8] -> TAR[33:34] [] -> [')']",
      "insert    PRED[8:8] -> TAR[34:35] [] -> ['.']"
    ]
  }
}


{
  "_ID": 391,
  "example": {
    "sentence": "a non-terminally differentiated odontoblast is an odontoblast that is located in the odontogenic papilla and dentine tissue , and transform from a odontoblast cell . <EOS>",
    "target": "non-terminally differentiated and := and ^ E that is . ( in the U papilla and ) ^ E tissue , . ( and and ) . <EOS>",
    "prediction": "<EOS>"
  },
  "dump": {
    "sentence_idx": "[1532, 5389, 2457, 889, 296, 5374, 889, 1465, 296, 3886, 3574, 1496, 3698, 5055, 2258, 3471, 3846, 2317, 2258, 4960, 5362, 1532, 889, 3311, 1710, 0]",
    "target_idx": "[20, 21, 37, 7, 37, 5, 13, 26, 27, 16, 1, 29, 30, 6, 32, 33, 2, 5, 13, 35, 36, 16, 1, 37, 37, 2, 16, 0]",
    "prediction_idx": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.036,
  "tokens_OK": 1,
  "tokens_tot": 28,
  "edit_distance": {
    "score": 27,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['non-terminally']",
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['differentiated']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[3:4] [] -> [':=']",
      "insert    PRED[0:0] -> TAR[4:5] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[5:6] [] -> ['^']",
      "insert    PRED[0:0] -> TAR[6:7] [] -> ['E']",
      "insert    PRED[0:0] -> TAR[7:8] [] -> ['that']",
      "insert    PRED[0:0] -> TAR[8:9] [] -> ['is']",
      "insert    PRED[0:0] -> TAR[9:10] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[10:11] [] -> ['(']",
      "insert    PRED[0:0] -> TAR[11:12] [] -> ['in']",
      "insert    PRED[0:0] -> TAR[12:13] [] -> ['the']",
      "insert    PRED[0:0] -> TAR[13:14] [] -> ['U']",
      "insert    PRED[0:0] -> TAR[14:15] [] -> ['papilla']",
      "insert    PRED[0:0] -> TAR[15:16] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[16:17] [] -> [')']",
      "insert    PRED[0:0] -> TAR[17:18] [] -> ['^']",
      "insert    PRED[0:0] -> TAR[18:19] [] -> ['E']",
      "insert    PRED[0:0] -> TAR[19:20] [] -> ['tissue']",
      "insert    PRED[0:0] -> TAR[20:21] [] -> [',']",
      "insert    PRED[0:0] -> TAR[21:22] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[22:23] [] -> ['(']",
      "insert    PRED[0:0] -> TAR[23:24] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[24:25] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[25:26] [] -> [')']",
      "insert    PRED[0:0] -> TAR[26:27] [] -> ['.']"
    ]
  }
}


{
  "_ID": 387,
  "example": {
    "sentence": "the pectoral fin skeleton is a paired fin skeleton that consists of the supporting endochondral proximal and distal radial and the dermal fin ray or lepidotrichia . <EOS>",
    "target": "pectoral distal fin := paired distal fin ^ E skeleton that . ( consists of the U endochondral proximal U and distal distal U and distal and ) . <EOS>",
    "prediction": "<EOS>"
  },
  "dump": {
    "sentence_idx": "[1496, 2918, 613, 4381, 296, 1532, 2424, 613, 4381, 1465, 4298, 2995, 1496, 5369, 3425, 2134, 2258, 999, 1415, 2258, 1496, 280, 613, 3098, 1048, 3483, 1710, 0]",
    "target_idx": "[20, 36, 26, 7, 25, 36, 26, 5, 13, 27, 28, 16, 1, 29, 30, 31, 6, 33, 34, 6, 35, 36, 36, 6, 35, 36, 38, 2, 16, 0]",
    "prediction_idx": "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.033,
  "tokens_OK": 1,
  "tokens_tot": 30,
  "edit_distance": {
    "score": 29,
    "diff_ops": [
      "insert    PRED[0:0] -> TAR[0:1] [] -> ['pectoral']",
      "insert    PRED[0:0] -> TAR[1:2] [] -> ['distal']",
      "insert    PRED[0:0] -> TAR[2:3] [] -> ['fin']",
      "insert    PRED[0:0] -> TAR[3:4] [] -> [':=']",
      "insert    PRED[0:0] -> TAR[4:5] [] -> ['paired']",
      "insert    PRED[0:0] -> TAR[5:6] [] -> ['distal']",
      "insert    PRED[0:0] -> TAR[6:7] [] -> ['fin']",
      "insert    PRED[0:0] -> TAR[7:8] [] -> ['^']",
      "insert    PRED[0:0] -> TAR[8:9] [] -> ['E']",
      "insert    PRED[0:0] -> TAR[9:10] [] -> ['skeleton']",
      "insert    PRED[0:0] -> TAR[10:11] [] -> ['that']",
      "insert    PRED[0:0] -> TAR[11:12] [] -> ['.']",
      "insert    PRED[0:0] -> TAR[12:13] [] -> ['(']",
      "insert    PRED[0:0] -> TAR[13:14] [] -> ['consists']",
      "insert    PRED[0:0] -> TAR[14:15] [] -> ['of']",
      "insert    PRED[0:0] -> TAR[15:16] [] -> ['the']",
      "insert    PRED[0:0] -> TAR[16:17] [] -> ['U']",
      "insert    PRED[0:0] -> TAR[17:18] [] -> ['endochondral']",
      "insert    PRED[0:0] -> TAR[18:19] [] -> ['proximal']",
      "insert    PRED[0:0] -> TAR[19:20] [] -> ['U']",
      "insert    PRED[0:0] -> TAR[20:21] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[21:22] [] -> ['distal']",
      "insert    PRED[0:0] -> TAR[22:23] [] -> ['distal']",
      "insert    PRED[0:0] -> TAR[23:24] [] -> ['U']",
      "insert    PRED[0:0] -> TAR[24:25] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[25:26] [] -> ['distal']",
      "insert    PRED[0:0] -> TAR[26:27] [] -> ['and']",
      "insert    PRED[0:0] -> TAR[27:28] [] -> [')']",
      "insert    PRED[0:0] -> TAR[28:29] [] -> ['.']"
    ]
  }
}


{
  "_ID": 396,
  "example": {
    "sentence": "axial skeleton is a skeletal subdivision of the central body axis include the cranium , vertebra , notochord , rib , and sternum . <EOS>",
    "target": "axial skeleton := skeletal subdivision of central body axis ^ E include . ( the ) ^ E include . ( , ) ^ E include . ( vertebra ) ^ E include . ( , ) ^ E include . ( , ) . <EOS>",
    "prediction": "axial skeleton := skeletal subdivision of central body axis axis axis axis ^ , vertebra ^ , . <EOS>"
  },
  "dump": {
    "sentence_idx": "[4722, 4381, 296, 1532, 3051, 5142, 2995, 1496, 780, 5126, 2107, 3459, 1496, 3862, 2317, 4362, 2317, 595, 2317, 1983, 2317, 2258, 218, 1710, 0]",
    "target_idx": "[19, 20, 7, 23, 24, 25, 27, 28, 29, 5, 13, 30, 16, 1, 31, 2, 5, 13, 30, 16, 1, 33, 2, 5, 13, 30, 16, 1, 34, 2, 5, 13, 30, 16, 1, 35, 2, 5, 13, 30, 16, 1, 37, 2, 16, 0]",
    "prediction_idx": "[19, 20, 7, 23, 24, 25, 27, 28, 29, 29, 29, 29, 5, 33, 34, 5, 37, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
  },
  "accuracy": 0.217,
  "tokens_OK": 10,
  "tokens_tot": 46,
  "edit_distance": {
    "score": 30,
    "diff_ops": [
      "insert    PRED[8:8] -> TAR[9:10] [] -> ['^']",
      "insert    PRED[8:8] -> TAR[10:11] [] -> ['E']",
      "insert    PRED[8:8] -> TAR[11:12] [] -> ['include']",
      "insert    PRED[8:8] -> TAR[12:13] [] -> ['.']",
      "replace   PRED[9:10] -> TAR[13:14] ['axis'] -> ['(']",
      "replace   PRED[10:11] -> TAR[14:15] ['axis'] -> ['the']",
      "replace   PRED[11:12] -> TAR[15:16] ['axis'] -> [')']",
      "insert    PRED[12:12] -> TAR[17:18] [] -> ['E']",
      "insert    PRED[12:12] -> TAR[18:19] [] -> ['include']",
      "insert    PRED[12:12] -> TAR[19:20] [] -> ['.']",
      "insert    PRED[12:12] -> TAR[20:21] [] -> ['(']",
      "insert    PRED[13:13] -> TAR[22:23] [] -> [')']",
      "insert    PRED[13:13] -> TAR[23:24] [] -> ['^']",
      "insert    PRED[13:13] -> TAR[24:25] [] -> ['E']",
      "insert    PRED[13:13] -> TAR[25:26] [] -> ['include']",
      "insert    PRED[13:13] -> TAR[26:27] [] -> ['.']",
      "insert    PRED[13:13] -> TAR[27:28] [] -> ['(']",
      "insert    PRED[14:14] -> TAR[29:30] [] -> [')']",
      "insert    PRED[14:14] -> TAR[30:31] [] -> ['^']",
      "insert    PRED[14:14] -> TAR[31:32] [] -> ['E']",
      "insert    PRED[14:14] -> TAR[32:33] [] -> ['include']",
      "insert    PRED[14:14] -> TAR[33:34] [] -> ['.']",
      "insert    PRED[14:14] -> TAR[34:35] [] -> ['(']",
      "insert    PRED[14:14] -> TAR[35:36] [] -> [',']",
      "insert    PRED[14:14] -> TAR[36:37] [] -> [')']",
      "insert    PRED[15:15] -> TAR[38:39] [] -> ['E']",
      "insert    PRED[15:15] -> TAR[39:40] [] -> ['include']",
      "insert    PRED[15:15] -> TAR[40:41] [] -> ['.']",
      "insert    PRED[15:15] -> TAR[41:42] [] -> ['(']",
      "insert    PRED[16:16] -> TAR[43:44] [] -> [')']"
    ]
  }
}


